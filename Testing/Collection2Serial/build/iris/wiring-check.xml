<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="10:Collection2SerialAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb726e9c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb72dae98"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb72dae98"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb7237a28"/></to>
    </wire>
    <wire loc="11:Collection2SerialAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0xb726af18"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb723c958"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb723c958"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb70f1ca8"/></to>
    </wire>
    <wire loc="12:Collection2SerialAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0xb7268650"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb67bb6d8"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb67bb6d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb6796240"/></to>
    </wire>
    <wire loc="13:Collection2SerialAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7269010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7236e78"/></to>
    </wire>
    <wire loc="51:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7236e78"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7138520"/></to>
    </wire>
    <wire loc="14:Collection2SerialAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb7253708"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb64f81f8"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb64f81f8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6cb1e80"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:Collection2SerialAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb7264860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb65058a0"/></to>
    </wire>
    <wire loc="51:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb65058a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5de5210"/></to>
    </wire>
    <wire loc="16:Collection2SerialAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0xb724f930"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0xb679fa30"/></to>
    </wire>
    <wire loc="84:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0xb679fa30"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0xb678f1c0"/></to>
    </wire>
    <wire loc="17:Collection2SerialAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb724b890"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb67ba848"/>
      <arguments>
        <value cst="I:238">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:Collection2SerialAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0xb7249218"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb64f53b8"/></to>
    </wire>
    <wire loc="24:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoC.nc">
      <from><interface-ref name="Read" scoped="" ref="0xb64f53b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb64f2af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5d16d40"/></to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5d64530"/></to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5d84340"/></to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5da5208"/></to>
    </wire>
    <wire loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5e8be10"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5e9bc18"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5ea34c0"/></to>
    </wire>
    <wire loc="153:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6533310"/></to>
    </wire>
    <wire loc="178:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb66d2010"/></to>
    </wire>
    <wire loc="229:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6668a58"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb67c8a08"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0xb68b6a00"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0xb68b24c0"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb68f4398"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb69e1558"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb67e6bf8"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb5fe5c98"/></to>
    </wire>
    <wire loc="120:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb6c6e768"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6da3b80"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6e125f0"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb609c330"/></to>
    </wire>
    <wire loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6eb3010"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb60b8078"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6123750"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb7237dc0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb73755f0"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb73755f0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb72fc8a8"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7142400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb6bd2030"/></to>
    </wire>
    <wire loc="123:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7142400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb6c6e108"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7142400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb723ac50"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb723ac50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb722e010"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7142808"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7231c68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb63ced78"/></to>
    </wire>
    <wire loc="26:/home/wsn/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7231c68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6818440"/></to>
    </wire>
    <wire loc="26:/home/wsn/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7231c68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6ae6480"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7231508"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7153010"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0xb722e7f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7155bf8"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb722e3f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7124870"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb722e3f0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb7230980"/></to>
    </wire>
    <wire loc="46:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7230980"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb722b8f0"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7230d50"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb7231c68"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0xb7225e50"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0xb721e210"/></to>
    </wire>
    <wire loc="141:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0xb721e210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb71d3330"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7228868"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb7230d50"/></to>
    </wire>
    <wire loc="191:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0xb72014b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71800b0"/></to>
    </wire>
    <wire loc="165:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0xb7211a28"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb71bc090"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb71bc090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6269de0"/></to>
    </wire>
    <wire loc="176:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0xb720a0a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb71b3d68"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb71b3d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb622dc08"/></to>
    </wire>
    <wire loc="185:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0xb7204210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb71aa7d0"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb71aa7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb61f57f8"/></to>
    </wire>
    <wire loc="196:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0xb71fea08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7172880"/></to>
    </wire>
    <wire loc="143:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0xb721d670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb71d26b0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb71d26b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb630eac8"/></to>
    </wire>
    <wire loc="183:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0xb7207ce8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb71ab4f0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb71ab4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb61f83b0"/></to>
    </wire>
    <wire loc="146:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0xb721ca98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb71cd5a0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb71cd5a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb62db938"/></to>
    </wire>
    <wire loc="157:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0xb7215210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb71c4170"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb71c4170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb629f9e8"/></to>
    </wire>
    <wire loc="168:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0xb720f8e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb71bbd68"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb71bbd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6264c08"/></to>
    </wire>
    <wire loc="179:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0xb7209ea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb71b1ac8"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb71b1ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6228a88"/></to>
    </wire>
    <wire loc="138:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0xb72212f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb71d56b0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb71d56b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb63168f0"/></to>
    </wire>
    <wire loc="149:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0xb721a8e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb71cb250"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb71cb250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb62d67f8"/></to>
    </wire>
    <wire loc="160:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0xb72130a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb71c3e48"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb71c3e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb629a9e8"/></to>
    </wire>
    <wire loc="171:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0xb720d750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb71b9ac8"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb71b9ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb625ea88"/></to>
    </wire>
    <wire loc="188:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0xb72020a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb71a84f0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb71a84f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb61ef6c0"/></to>
    </wire>
    <wire loc="194:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0xb71ff590"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7178880"/></to>
    </wire>
    <wire loc="174:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0xb720cc08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb71b4a80"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb71b4a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb62307f8"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb71d3330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6311718"/></to>
    </wire>
    <wire loc="152:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0xb7218830"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb71caf28"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb71caf28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb62d16c0"/></to>
    </wire>
    <wire loc="192:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0xb72000c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb717e880"/></to>
    </wire>
    <wire loc="155:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0xb7217ce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb71c6e78"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb71c6e78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb62a2538"/></to>
    </wire>
    <wire loc="166:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0xb72104b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb71bc9e8"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb71bc9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb62677f8"/></to>
    </wire>
    <wire loc="177:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0xb720aa98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb71b2790"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb71b2790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb622b6c0"/></to>
    </wire>
    <wire loc="186:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0xb7204c08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb71a9170"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb71a9170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb61f2228"/></to>
    </wire>
    <wire loc="144:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0xb721c0a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb71d1030"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb71d1030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6307570"/></to>
    </wire>
    <wire loc="147:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0xb721b4b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb71cdef8"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb71cdef8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb62d93b0"/></to>
    </wire>
    <wire loc="158:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0xb7215c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb71c4ac8"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb71c4ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb629d538"/></to>
    </wire>
    <wire loc="169:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0xb720e2f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb71ba790"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb71ba790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb62616c0"/></to>
    </wire>
    <wire loc="180:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0xb72088e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb71b04f0"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb71b04f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6226538"/></to>
    </wire>
    <wire loc="139:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0xb7221ce8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb71d4030"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb71d4030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb63142d0"/></to>
    </wire>
    <wire loc="150:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0xb72192f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb71cbba8"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb71cbba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb62d4228"/></to>
    </wire>
    <wire loc="161:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0xb7213a98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb71c17d0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb71c17d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6298538"/></to>
    </wire>
    <wire loc="189:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0xb7202a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb71a8e48"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb71a8e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb61ed0b0"/></to>
    </wire>
    <wire loc="164:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0xb7212ea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb71bd6f8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb71bd6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb626a418"/></to>
    </wire>
    <wire loc="175:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0xb720b670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb71b3410"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb71b3410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb622e228"/></to>
    </wire>
    <wire loc="184:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0xb7206750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb71abe48"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb71abe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb61f7d70"/></to>
    </wire>
    <wire loc="195:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0xb71fe010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71740b0"/></to>
    </wire>
    <wire loc="142:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0xb721ec08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb71d3c88"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb71d3c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb630f0f8"/></to>
    </wire>
    <wire loc="153:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0xb72172f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb71c9890"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb71c9890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb62ce0b0"/></to>
    </wire>
    <wire loc="182:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0xb72072f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb71adb00"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb71adb00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb61fa938"/></to>
    </wire>
    <wire loc="156:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0xb7216750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb71c57f0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb71c57f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb62a0010"/></to>
    </wire>
    <wire loc="167:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0xb7210ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb71bb410"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb71bb410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6265228"/></to>
    </wire>
    <wire loc="178:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0xb72094b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb71b1170"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb71b1170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb62290b0"/></to>
    </wire>
    <wire loc="187:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0xb7203670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb71a9ac8"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb71a9ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb61f1c08"/></to>
    </wire>
    <wire loc="137:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0xb722a848"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb71d6cc8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb71d6cc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb631cf28"/></to>
    </wire>
    <wire loc="148:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0xb721bea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb71cc860"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb71cc860"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb62d8d70"/></to>
    </wire>
    <wire loc="159:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0xb7214670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb71c34f0"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb71c34f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb629b010"/></to>
    </wire>
    <wire loc="170:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0xb720ece8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb71b9170"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb71b9170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb625f0b0"/></to>
    </wire>
    <wire loc="193:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0xb7200ab8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb717a0b0"/></to>
    </wire>
    <wire loc="173:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0xb720c210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb71b4128"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb71b4128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6235de8"/></to>
    </wire>
    <wire loc="162:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0xb72124b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb71c0170"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb71c0170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6296010"/></to>
    </wire>
    <wire loc="140:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0xb7220750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb71d4988"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb71d4988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6313c90"/></to>
    </wire>
    <wire loc="151:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0xb7219d68"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb71ca5d0"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb71ca5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb62d3c08"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb72fb100"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0xb72fbd68"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0xb7376728"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0xb72e7218"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0xb6d38af8"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7124870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb71381d8"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb7137240"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0xb7126a70"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb7126a70"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0xb7221ce8"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb7137c28"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0xb71254c0"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb71254c0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0xb72212f0"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb7136660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0xb7125ec8"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb7125ec8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0xb722a848"/></to>
    </wire>
    <wire loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb70f1ca8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb70d8b70"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb7115b18"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb70ecd20"/></to>
    </wire>
    <wire loc="84:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb70ecd20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb70d4b88"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7111af0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb70ebe70"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb70ebe70"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0xb70d1a70"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7118388"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb70ee630"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb70ee630"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb70d5470"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb711f3f8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb70ec6a8"/></to>
    </wire>
    <wire loc="83:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb70ec6a8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb70d4510"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb70fe830"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb70e9898"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb70e9898"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb70c62e0"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7118d48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb70ec010"/></to>
    </wire>
    <wire loc="82:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb70ec010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb70d5e30"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7102b10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb70e9310"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb70e9310"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb70cacb0"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb70f81b8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb70e9eb8"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb70e9eb8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb70c6900"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7106990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb70ea588"/></to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb70ea588"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb70d3cf8"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb70f9b10"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb70e8600"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb70e8600"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb70c1040"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xb70f24a0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb70df560"/></to>
    </wire>
    <wire loc="104:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb70df560"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb70ba260"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7101ea8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb70def20"/></to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb70def20"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb70b9d18"/></to>
    </wire>
    <wire loc="254:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb70d8b70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6e8bb88"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb70e14d8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb70bef08"/></to>
    </wire>
    <wire loc="345:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb70bef08"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb6c82d18"/></to>
    </wire>
    <wire loc="310:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb70b9d18"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6dd2b10"/></to>
    </wire>
    <wire loc="139:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb70d4b88"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb6fc0ef0"/></to>
    </wire>
    <wire loc="141:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0xb70d1a70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6fc1850"/></to>
    </wire>
    <wire loc="136:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb70d5470"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6fc0010"/></to>
    </wire>
    <wire loc="138:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb70d4510"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb6fc0b30"/></to>
    </wire>
    <wire loc="98:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb70e60f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb70c0ae8"/></to>
    </wire>
    <wire loc="343:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb70c0ae8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6c839b0"/></to>
    </wire>
    <wire loc="255:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb70c62e0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb6e84150"/></to>
    </wire>
    <wire loc="137:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb70d5e30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6fc0750"/></to>
    </wire>
    <wire loc="309:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb70ba260"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6caf378"/></to>
    </wire>
    <wire loc="102:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb70db950"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb70bb678"/></to>
    </wire>
    <wire loc="347:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb70bb678"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6c7cc60"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb70e3c68"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb70c1730"/></to>
    </wire>
    <wire loc="344:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb70c1730"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6c7d520"/></to>
    </wire>
    <wire loc="288:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb70cacb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6e05b18"/></to>
    </wire>
    <wire loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0xb70eb438"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0xb70d32a8"/></to>
    </wire>
    <wire loc="143:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0xb70d32a8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0xb6fbf2e8"/></to>
    </wire>
    <wire loc="226:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb70c6900"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb6e973b0"/></to>
    </wire>
    <wire loc="140:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb70d3cf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6fc2c28"/></to>
    </wire>
    <wire loc="264:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb70c1040"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb6e3c150"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb70dd790"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb70bb180"/></to>
    </wire>
    <wire loc="346:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb70bb180"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6c7c768"/></to>
    </wire>
    <wire loc="87:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0xb70ebb18"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0xb70d3988"/></to>
    </wire>
    <wire loc="144:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0xb70d3988"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0xb6fbf6c8"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6e8bb88"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb6e84758"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb6c82d18"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb6c6bf08"/></to>
    </wire>
    <wire loc="175:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0xb70cf0c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb6f74ce8"/></to>
    </wire>
    <wire loc="163:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0xb70c77d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6faed40"/></to>
    </wire>
    <wire loc="98:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6faed40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6122a80"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb6fc0ef0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb6154d08"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6fc0010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6155dc0"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb6fc0b30"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb6154948"/></to>
    </wire>
    <wire loc="176:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0xb70c29c0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xb6edaf10"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0xb6edaf10"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xb60e7d50"/></to>
    </wire>
    <wire loc="177:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0xb70ca538"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6f75c68"/></to>
    </wire>
    <wire loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6c839b0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6c6cb60"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb6e84150"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb60a18c0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6fc1850"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6155690"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6fc0750"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6154568"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6caf378"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb604f610"/></to>
    </wire>
    <wire loc="82:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6c7cc60"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6bd7b48"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6c7d520"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6c666c0"/></to>
    </wire>
    <wire loc="173:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0xb70cb458"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0xb6f74318"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0xb6fbf2e8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0xb6153128"/></to>
    </wire>
    <wire loc="117:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb6e973b0"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0xb6e8f750"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb6e3c150"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb609ce78"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6fc2c28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb61569e0"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6dd2b10"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6054e38"/></to>
    </wire>
    <wire loc="174:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0xb70cbbe8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0xb6f749d0"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6c7c768"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6c65940"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0xb6fbf6c8"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0xb6153508"/></to>
    </wire>
    <wire loc="116:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb7080a38"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6edb530"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6edb530"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb60e8340"/></to>
    </wire>
    <wire loc="117:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb707f010"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb7045698"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb7078c28"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6caf378"/></to>
    </wire>
    <wire loc="119:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0xb7078260"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6c83010"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6c83010"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6c6c1c0"/></to>
    </wire>
    <wire loc="124:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb70435d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6c7b700"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6c7b700"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6bd8030"/></to>
    </wire>
    <wire loc="125:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb7045d70"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb70b5518"/></to>
    </wire>
    <wire loc="131:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6fbea80"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0xb7090068"/></to>
    </wire>
    <wire loc="132:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6fbe250"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0xb6fb9718"/></to>
    </wire>
    <wire loc="133:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6fbe748"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0xb6f35528"/></to>
    </wire>
    <wire loc="134:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6fbfa40"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0xb6f35860"/></to>
    </wire>
    <wire loc="152:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6fb8150"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6faed40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6fb9c40"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0xb6f35030"/></to>
    </wire>
    <wire loc="168:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6f59070"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6edb530"/></to>
    </wire>
    <wire loc="169:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6f57250"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0xb6f52050"/></to>
    </wire>
    <wire loc="170:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6f57748"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0xb6f52548"/></to>
    </wire>
    <wire loc="171:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6f58a30"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xb6f52880"/></to>
    </wire>
    <wire loc="185:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6f33050"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6ed3168"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6ed3168"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb60ba790"/></to>
    </wire>
    <wire loc="186:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6f33548"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6ed8170"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6ed8170"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb60e6f10"/></to>
    </wire>
    <wire loc="187:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6f33880"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6ed9948"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6ed9948"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb60e6778"/></to>
    </wire>
    <wire loc="193:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6ed84d8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6e97a48"/></to>
    </wire>
    <wire loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6e97a48"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6e90ab0"/></to>
    </wire>
    <wire loc="197:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6ed8c70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6e97098"/></to>
    </wire>
    <wire loc="114:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6e97098"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6e90778"/></to>
    </wire>
    <wire loc="220:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6e9a428"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0xb709df10"/></to>
    </wire>
    <wire loc="221:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6ed3a88"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6e98b88"/></to>
    </wire>
    <wire loc="113:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6e98b88"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6e90280"/></to>
    </wire>
    <wire loc="230:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6e8f238"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6e05b18"/></to>
    </wire>
    <wire loc="232:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6e90280"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6e8a178"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6e8a178"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6e84d30"/></to>
    </wire>
    <wire loc="233:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6e90778"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6e8a670"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6e8a670"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6e7d250"/></to>
    </wire>
    <wire loc="234:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6e90ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6e8a988"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6e8a988"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6e7d588"/></to>
    </wire>
    <wire loc="250:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb6e84758"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6e792b8"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6e792b8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb609ec88"/></to>
    </wire>
    <wire loc="251:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6e84d30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6e79890"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6e79890"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb609c668"/></to>
    </wire>
    <wire loc="252:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6e7d250"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6e79d88"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6e79d88"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb609cb60"/></to>
    </wire>
    <wire loc="253:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6e7d588"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6caa9f8"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6caa9f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb604dca8"/></to>
    </wire>
    <wire loc="260:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6e3b3f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6e36538"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6e36538"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb607d9f8"/></to>
    </wire>
    <wire loc="261:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6e3b8c8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6ed3640"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6ed3640"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb60bac68"/></to>
    </wire>
    <wire loc="262:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6e3cc10"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6c8f468"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6c8f468"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xb6c8b348"/></to>
    </wire>
    <wire loc="263:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb6e3c658"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb70b5518"/></to>
    </wire>
    <wire loc="268:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6e9a010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6e36a10"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6e36a10"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb607ded0"/></to>
    </wire>
    <wire loc="277:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6e15e20"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0xb7098c58"/></to>
    </wire>
    <wire loc="278:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6e36e58"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6e05248"/></to>
    </wire>
    <wire loc="279:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6e15370"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6e05720"/></to>
    </wire>
    <wire loc="280:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6e15768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb7045698"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="286:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0xb6deb988"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6ca4088"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="287:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6e04950"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb7045698"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="292:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6deb030"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb70a07e8"/></to>
    </wire>
    <wire loc="293:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6e04060"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6dda3f0"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6dda3f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6dd7330"/></to>
    </wire>
    <wire loc="294:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6e04558"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6dda8c8"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6dda8c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6dd7828"/></to>
    </wire>
    <wire loc="299:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6dd6828"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0xb709a010"/></to>
    </wire>
    <wire loc="300:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6dd7330"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6c8fbe0"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6c8fbe0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6c8bb60"/></to>
    </wire>
    <wire loc="301:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6dd7828"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6c8e150"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6c8e150"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6c8a090"/></to>
    </wire>
    <wire loc="302:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0xb6dd7c40"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xb6c84b58"/></to>
    </wire>
    <wire loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb6c84b58"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xb6c6dd18"/></to>
    </wire>
    <wire loc="307:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6ca8310"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6c7cc60"/></to>
    </wire>
    <wire loc="308:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6ca8b88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6ca4650"/></to>
    </wire>
    <wire loc="311:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0xb6ca7338"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6ca4088"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="316:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6ca4e18"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6c83010"/></to>
    </wire>
    <wire loc="326:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6c89090"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0xb709a010"/></to>
    </wire>
    <wire loc="327:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6c8bb60"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6c841b0"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6c841b0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6c6d370"/></to>
    </wire>
    <wire loc="328:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6c8a090"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6c84708"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6c84708"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6c6d8c8"/></to>
    </wire>
    <wire loc="329:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0xb6c8b348"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6c879b8"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6c879b8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6c6eae8"/></to>
    </wire>
    <wire loc="341:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6c781d0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0xb70a5540"/></to>
    </wire>
    <wire loc="342:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6c78b38"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6caf378"/></to>
    </wire>
    <wire loc="349:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6c75370"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6ca4088"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="350:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0xb6c75a08"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6ca4088"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="351:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6c740e0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6ca4088"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="352:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6c74700"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb7045698"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="353:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb6c74de0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb70b5518"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb7045698"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb616e7e8"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb616c010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb70435d0"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb616a968"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb7045d70"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6150150"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6fd1820"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6153880"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6fbfa40"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6152030"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6fbe250"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6152528"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6fbe748"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6152860"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6fbea80"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb6f77490"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb61211e8"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb6f77898"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb61215f0"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb6121ab0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb6f77d48"/></to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb6121ed8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb6123a88"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb611f4e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb60e5278"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6fd1820"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb60e5850"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6ed84d8"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb60e3010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6ed8c70"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb60b6310"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb6eb6010"/></to>
    </wire>
    <wire loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb6eb6010"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb6eb33a8"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb60b69a8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb60b5e88"/></to>
    </wire>
    <wire loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb60b5e88"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb6eb3dd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb60b83e0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6ed3a88"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb60b88d8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6e9a010"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0xb60b8cd0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6e9a428"/></to>
    </wire>
    <wire loc="118:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0xb6e8fe28"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6e8f238"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb609ab18"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6e3c658"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb609a3a0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6e3cc10"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6099150"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6e3b3f0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6099628"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6e3b8c8"/></to>
    </wire>
    <wire loc="189:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0xb6099e98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0xb6098320"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0xb6099a60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb607a330"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6e36e58"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6079728"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6e15e20"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb607a828"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6e15370"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb607ac20"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6e15768"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb6079310"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb6e13948"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb6e13948"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb6e0f478"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0xb6079d20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0xb6e13088"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0xb6e12b10"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6e17dc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6e125f0"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6de6e40"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb6dd9c50"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb6ddacc0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xb6dd7c40"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6de5c20"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xb6dd8a80"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6dd9150"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6dd6090"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6dd98e8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6dd6828"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0xb6de5908"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0xb6dd8748"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0xb6de5430"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0xb6dd8250"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb604bd38"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6ca8b88"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb604cb88"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6ca8310"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0xb604b4c0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6da6c50"/></to>
    </wire>
    <wire loc="26:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb6da6c50"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6d9d6a8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0xb604c520"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0xb6ca7338"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb6d9d6a8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6cb3bc8"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb6da0380"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6ce5210"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6da3b80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6d9cd68"/></to>
    </wire>
    <wire loc="35:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6d9cd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6d06088"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0xb6cbe5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6d01270"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6cea5b8"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0xb6d99400"/></to>
    </wire>
    <wire loc="36:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0xb6d99400"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6d064c0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6cb9588"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0xb6d93da0"/></to>
    </wire>
    <wire loc="37:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0xb6d93da0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6d04f28"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6d04f28"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6036378"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6d06088"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb60384c8"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6d064c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6038900"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6035578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6d46340"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6d46340"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6d3d190"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb6032758"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb6d43600"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb6d43600"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb6d3a510"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6031200"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6d42138"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6d42138"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6d39078"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb6030c20"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb6d41c60"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb6d41c60"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb6d36010"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0xb6ce8010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0xb6cbb798"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb6cb1e80"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6da0380"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6c90618"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb6c8d4d8"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb6c8e548"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xb6c8a4a8"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6c8e940"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6c8a8c0"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6c8d170"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6c89090"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0xb6c8f150"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0xb6c8b010"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0xb6c90bd0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0xb6c8dab0"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6bd8030"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6aed850"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6c7f100"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6c68300"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6bd7b48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6aba1d0"/></to>
    </wire>
    <wire loc="84:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6c5bce0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6c781d0"/></to>
    </wire>
    <wire loc="87:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6c59528"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6c75370"/></to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0xb6c59bc0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0xb6c75a08"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6c58338"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6c740e0"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6c58b40"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6c78b38"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb6c5b378"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6bd7b48"/></to>
    </wire>
    <wire loc="102:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6c56928"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6c74700"/></to>
    </wire>
    <wire loc="104:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xb6c65d58"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0xb6bdeb08"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xb6bdeb08"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb721ca98"/></to>
    </wire>
    <wire loc="105:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb6c64858"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0xb6bdb5b8"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb6bdb5b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6bbbc50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb6c5fd60"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb6bdbcc0"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb6bdbcc0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb6bc2e48"/></to>
    </wire>
    <wire loc="108:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xb6c614b0"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0xb6bda3d0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xb6bda3d0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0xb72172f0"/></to>
    </wire>
    <wire loc="109:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb6c61e98"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0xb6bdadb8"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb6bdadb8"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0xb721d670"/></to>
    </wire>
    <wire loc="111:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xb6c5e010"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xb6bd9820"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xb6bd9820"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xb6bd6980"/></to>
    </wire>
    <wire loc="112:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb6c56308"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6c74de0"/></to>
    </wire>
    <wire loc="113:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0xb6c5a840"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0xb6a8c010"/></to>
    </wire>
    <wire loc="856:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0xb6c01910"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6aed850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb5fcbc78"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb6bc2e48"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb6bb9520"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb6aba1d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6a93f18"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0xb6bcc420"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0xb720ece8"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0xb6bcce20"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0xb720f8e0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb6bcd660"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6b47a48"/></to>
    </wire>
    <wire loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb6b47a48"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6b370f0"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb6bbb500"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb6bb9b38"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb6bc2aa0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb6bb9198"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6bd4d98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6bc0d80"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6bbbc50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6b52198"/></to>
    </wire>
    <wire loc="98:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6b52198"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5fe2010"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb6b51208"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb6bb82d8"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0xb6ba71c8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0xb6bbfe40"/></to>
    </wire>
    <wire loc="83:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0xb6bbfe40"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0xb6b7e1c8"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xb6bb7a98"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb72e9420"/></to>
    </wire>
    <wire loc="294:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0xb6b95390"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0xb6b79898"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb72e9420"/></to>
    </wire>
    <wire loc="86:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0xb6b7c010"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb721ca98"/></to>
    </wire>
    <wire loc="87:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0xb6b7c9e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0xb721b4b0"/></to>
    </wire>
    <wire loc="88:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0xb6b7b4a0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0xb721bea8"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0xb6b7be88"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0xb721a8e0"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb6b528d8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb5fe2750"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb6b52ce0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb5fe2b58"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb5fe1030"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb6b51208"/></to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb5fe1458"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb5fe3010"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb5fe1a50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb6b43c88"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb6b383c8"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6b4b328"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6b3b0e0"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6b41c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xb6b35010"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6b41c10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xb6b33c08"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6b41c10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xb6b31830"/></to>
    </wire>
    <wire loc="43:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0xb5fc9688"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6b4b328"/></to>
    </wire>
    <wire loc="44:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0xb5fbd978"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6b41c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/wsn/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6ae6868"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6b4b328"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6a928c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6ab8e60"/></to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb6a950e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6ab73a0"/></to>
    </wire>
    <wire loc="31:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6ab73a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6ab4b30"/></to>
    </wire>
    <wire loc="32:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6ab3d50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6b4b328"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb67e2eb0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0xb67fc448"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb67dfc20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6a5bd50"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6a5bd50"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb5fa3a18"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb67de350"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb67ff3f8"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb67ff3f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6a19990"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0xb67e4760"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0xb67e29f0"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6a19990"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6a14d88"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb67ffa90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6a180b8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6a180b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6a141b0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb67fe6b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6a18d70"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6a18d70"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb69e34d0"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb5fa0180"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6a4c990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb5fa0818"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6a180b8"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6a4c990"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6a47908"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6a1f0a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6a1abb8"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6a1abb8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6a15738"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6a1f750"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6a180b8"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6a1e3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6a19990"/></to>
    </wire>
    <wire loc="169:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0xb6a1eac8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0xb6a1ef00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6a1a2e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb69e18f0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb69e18f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb69c8978"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6a19638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6a15e78"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb69e1558"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb69c85e0"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb69dc3f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb6a17370"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb69e39f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb69de7e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb69e2170"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb69de1d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0xb69daea8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0xb680a728"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb69de7e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6952a90"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb69de1d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb69526d0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0xb6919238"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0xb69daea8"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb69bdc88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb69dc3f0"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb6918230"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb69dc3f0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb6911260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb69dc3f0"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb6919720"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb69c02a8"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0xb6919bf8"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0xb69c3098"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0xb69bd400"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0xb69156a8"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0xb69c5a40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb68fd168"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb68fd168"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb68f8e88"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb690b990"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb68fd5e8"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb68fd5e8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb68f7788"/></to>
    </wire>
    <wire loc="332:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0xb698d9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0xb69add40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0xb698f220"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0xb698b610"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0xb6918e48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0xb69162b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xb68f8488"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xb68f7308"/></to>
    </wire>
    <wire loc="51:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xb68f7308"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xb68f4ae8"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb68f7788"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb68f4f00"/></to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb68f8e88"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb68f46d0"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb68f6218"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb687d628"/></to>
    </wire>
    <wire loc="33:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb687d628"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6877a10"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb68ccc88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb68f6218"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0xb68f37b0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0xb68b9688"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0xb68b9688"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0xb68b6e50"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0xb68f3be8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0xb68b9b98"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0xb68b9b98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0xb68b33a8"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0xb68cc050"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0xb68b80b8"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0xb68b80b8"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0xb68b38c0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0xb68b7760"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0xb68b1390"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0xb68b8cc8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0xb68b2910"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0xb68b7268"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0xb68b2e40"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xb68b0010"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7231508"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xb68b0750"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb72e9420"/></to>
    </wire>
    <wire loc="34:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb680ecd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6876088"/></to>
    </wire>
    <wire loc="31:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6876088"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb681aa68"/></to>
    </wire>
    <wire loc="32:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6813c48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6875aa8"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6875aa8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6867230"/></to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb6871db0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb6864530"/></to>
    </wire>
    <wire loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb686fb28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6863258"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb686dd50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xb6860128"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb686dd50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xb685fd20"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb686dd50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xb685d950"/></to>
    </wire>
    <wire loc="27:/home/wsn/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6818828"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6875aa8"/></to>
    </wire>
    <wire loc="114:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0xb67da100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0xb67c8d88"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0xb67e4760"/></to>
    </wire>
    <wire loc="44:/home/wsn/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb67c3010"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb72dae98"/></to>
    </wire>
    <wire loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0xb67c3450"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6a1a2e0"/></to>
    </wire>
    <wire loc="150:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0xb678f1c0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0xb6535430"/></to>
    </wire>
    <wire loc="79:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0xb67b12d8"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0xb6793bf0"/></to>
    </wire>
    <wire loc="122:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0xb6793bf0"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0xb66cf078"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0xb67b6c10"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0xb6793158"/></to>
    </wire>
    <wire loc="119:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0xb6793158"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0xb66d06a8"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb67b8010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb67934b0"/></to>
    </wire>
    <wire loc="120:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb67934b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb66d09d0"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb67baef8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb6794a88"/></to>
    </wire>
    <wire loc="118:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb6794a88"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb66d02e8"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb67bbe08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6796970"/></to>
    </wire>
    <wire loc="115:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6796970"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb66d27b8"/></to>
    </wire>
    <wire loc="82:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0xb67a1be0"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0xb67914b8"/></to>
    </wire>
    <wire loc="168:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0xb67914b8"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0xb6535908"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb67ba848"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb67943d8"/></to>
    </wire>
    <wire loc="117:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb67943d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb66d2ef8"/></to>
    </wire>
    <wire loc="83:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0xb679f5c8"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0xb6789cf8"/></to>
    </wire>
    <wire loc="124:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0xb6789cf8"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0xb66ce7f0"/></to>
    </wire>
    <wire loc="85:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0xb679d510"/></from>
      <to><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0xb678f778"/></to>
    </wire>
    <wire loc="151:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0xb678f778"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0xb6536e30"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0xb67a77a0"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0xb6792450"/></to>
    </wire>
    <wire loc="123:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0xb6792450"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0xb66cf7f0"/></to>
    </wire>
    <wire loc="116:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb6796240"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb66d2328"/></to>
    </wire>
    <wire loc="148:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb6796240"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb65345b0"/></to>
    </wire>
    <wire loc="149:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb6796240"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb6669010"/></to>
    </wire>
    <wire loc="87:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0xb678e1b8"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0xb679b6c8"/></to>
    </wire>
    <wire loc="88:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0xb678e568"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0xb6797550"/></to>
    </wire>
    <wire loc="193:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0xb6789178"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0xb6669f18"/></to>
    </wire>
    <wire loc="121:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0xb66bf1e8"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0xb678e1b8"/></to>
    </wire>
    <wire loc="128:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0xb66c51e0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0xb669f9b8"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0xb669f9b8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0xb5e99010"/></to>
    </wire>
    <wire loc="129:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0xb66c46f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0xb66b65b0"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0xb66b65b0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0xb5ea3868"/></to>
    </wire>
    <wire loc="132:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0xb66c83e8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0xb669c2d0"/></to>
    </wire>
    <wire loc="135:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0xb66c3ca8"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0xb6697ea0"/></to>
    </wire>
    <wire loc="44:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="Cache" scoped="" ref="0xb6697ea0"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0xb5e89200"/></to>
    </wire>
    <wire loc="140:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0xb66cbb88"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0xb6669f18"/></to>
    </wire>
    <wire loc="154:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0xb6533678"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6669498"/></to>
    </wire>
    <wire loc="155:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0xb6533d30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6669b78"/></to>
    </wire>
    <wire loc="156:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0xb6532070"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0xb6669f18"/></to>
    </wire>
    <wire loc="158:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0xb6529230"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0xb6664948"/></to>
    </wire>
    <wire loc="160:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6532b68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7106990"/></to>
    </wire>
    <wire loc="161:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0xb6531790"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb723c958"/></to>
    </wire>
    <wire loc="162:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0xb6531df8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb667b680"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb667b680"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6cb1e80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0xb652d0c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6674458"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6674458"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6cb1e80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0xb652a6f8"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0xb678e568"/></to>
    </wire>
    <wire loc="165:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0xb66bc230"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0xb678e568"/></to>
    </wire>
    <wire loc="166:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0xb66c0078"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0xb6535908"/></to>
    </wire>
    <wire loc="167:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0xb652ad90"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0xb66ce7f0"/></to>
    </wire>
    <wire loc="172:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0xb66cd898"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6524d90"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6524d90"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6cb1e80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb652a300"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb6e13948"/></to>
    </wire>
    <wire loc="176:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb66bee08"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb6e13948"/></to>
    </wire>
    <wire loc="179:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb66cec38"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb65ec6a0"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb65ec6a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb5e71200"/></to>
    </wire>
    <wire loc="180:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb66c1a18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb65d0a48"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb65d0a48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7118d48"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="181:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0xb66c1d50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb65ca5c0"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb65ca5c0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb711f3f8"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="182:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb66c9c70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb65ecd38"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb65ecd38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb5e71898"/></to>
    </wire>
    <wire loc="183:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0xb66c0c50"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0xb6535430"/></to>
    </wire>
    <wire loc="184:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0xb66c9698"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0xb6536e30"/></to>
    </wire>
    <wire loc="185:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0xb66bc8e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb723c958"/></to>
    </wire>
    <wire loc="186:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb66cd310"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb65d2010"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb65d2010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb5e70c08"/></to>
    </wire>
    <wire loc="187:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb66bf610"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb65d33f0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb65d33f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb5e70010"/></to>
    </wire>
    <wire loc="188:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb66be230"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7236e78"/></to>
    </wire>
    <wire loc="195:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb66630b8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb6e13948"/></to>
    </wire>
    <wire loc="197:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6664ce0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb651d1f8"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb651d1f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb5dfb680"/></to>
    </wire>
    <wire loc="198:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6665978"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb651a1f8"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb651a1f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7118d48"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="199:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6665210"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb651d890"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb651d890"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb5dfbd18"/></to>
    </wire>
    <wire loc="200:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0xb66664d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb651df28"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb651df28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb5dfa3f0"/></to>
    </wire>
    <wire loc="224:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6665d48"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb70dd790"/></to>
    </wire>
    <wire loc="234:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0xb66bcee0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0xb5e88010"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0xb6792450"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb5e71200"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb5e6d8a0"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb5e71898"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7111af0"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb5e70010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7106990"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb5e70c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7102b10"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb5e69010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb65e2dd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb5e696a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7106990"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb65e2dd0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb65dd4f8"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb65ddc68"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7118388"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb65dc3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7106990"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb65db010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7111af0"/></to>
    </wire>
    <wire loc="169:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0xb65db6e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0xb65dbb20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb65d0d60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7111af0"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb65cf4d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7106990"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb65ca8d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7111af0"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb65c6010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7106990"/></to>
    </wire>
    <wire loc="269:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="updateRouteTask" scoped="" ref="0xb65299c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="388:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0xb6529588"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb5dfb680"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb5df7d30"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb5dfbd18"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7111af0"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb5dfa3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7106990"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb651cb30"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb5df9010"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb5df9010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7102b10"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb5df4420"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb65e2dd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb5df4ab8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7106990"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb651a510"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7111af0"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb651aba8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7106990"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6504010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb5de58a8"/></to>
    </wire>
    <wire loc="47:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb5de58a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb67b8010"/></to>
    </wire>
    <wire loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb5de5210"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb67bbe08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0xb679b6c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0xb5de3a30"/></to>
    </wire>
    <wire loc="10:/home/wsn/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0xb64f2af0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb6335b78"/></to>
    </wire>
    <wire loc="11:/home/wsn/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0xb63348a8"/></from>
      <to><interface-ref name="ReadPhoto" scoped="" ref="0xb64e87d0"/></to>
    </wire>
    <wire loc="30:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadPhoto" scoped="" ref="0xb64e87d0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb6402278"/></to>
    </wire>
    <wire loc="12:/home/wsn/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6333500"/></from>
      <to><interface-ref name="PhotoResource" scoped="" ref="0xb64e9100"/></to>
    </wire>
    <wire loc="23:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoResource" scoped="" ref="0xb64e9100"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb64272b8"/></to>
    </wire>
    <wire loc="46:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadTemp" scoped="" ref="0xb64e77f8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb63e9bb0"/></to>
    </wire>
    <wire loc="105:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb64272b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5d837f0"/></to>
    </wire>
    <wire loc="33:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0xb64e9bb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6423010"/></to>
    </wire>
    <wire loc="105:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6423010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5d63a78"/></to>
    </wire>
    <wire loc="24:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6420980"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6427e00"/></to>
    </wire>
    <wire loc="107:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6427e00"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5d82418"/></to>
    </wire>
    <wire loc="25:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb641f030"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb64264d0"/></to>
    </wire>
    <wire loc="108:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb64264d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb5d82ab0"/></to>
    </wire>
    <wire loc="26:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb64200b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6403b10"/></to>
    </wire>
    <wire loc="27:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0xb6402e50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb642a420"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb63ef5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb63e2d90"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb63e2d90"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6cb1e80"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0xb63ec778"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0xb64dd580"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0xb64dd580"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0xb72094b0"/></to>
    </wire>
    <wire loc="31:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0xb63eb200"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb63dd9e0"/></to>
    </wire>
    <wire loc="36:/home/wsn/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0xb63dd9e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb63dac48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb64059e8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6423b58"/></to>
    </wire>
    <wire loc="107:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6423b58"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5d615f0"/></to>
    </wire>
    <wire loc="35:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb6404150"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb6422230"/></to>
    </wire>
    <wire loc="108:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb6422230"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb5d61c88"/></to>
    </wire>
    <wire loc="36:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6405118"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb63e94d0"/></to>
    </wire>
    <wire loc="37:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0xb63e87b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb642a420"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb63e8ee0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb63e2d90"/></to>
    </wire>
    <wire loc="40:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0xb63e4128"/></from>
      <to><interface-ref name="Int2" scoped="" ref="0xb64dc010"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0xb64dc010"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0xb7209ea8"/></to>
    </wire>
    <wire loc="47:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0xb63e4b10"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb63dd9e0"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0xb63dc5a8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0xb646ec08"/></to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempAdc" scoped="" ref="0xb6470278"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0xb64d53e0"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0xb64d53e0"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0xb64d2ba8"/></to>
    </wire>
    <wire loc="82:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0xb64da368"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0xb6481ae0"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0xb64d5010"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0xb64d27d8"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0xb64e1850"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0xb7215c08"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0xb64df730"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0xb7213a98"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0xb64d5b80"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0xb64cf3e0"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0xb64d33e0"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0xb64cfb80"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0xb64d7d38"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0xb7210ea8"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0xb64e2490"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0xb7216750"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0xb64e02d0"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0xb7214670"/></to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0xb64d9198"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0xb647cd48"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0xb64d7318"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0xb72104b0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0xb64de118"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0xb72124b0"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0xb64d8b98"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0xb6489a28"/></to>
    </wire>
    <wire loc="98:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0xb64d38b0"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0xb64ce010"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0xb64e2e68"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0xb7215210"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0xb64e0ca8"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0xb72130a0"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0xb64d57b0"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0xb64cf010"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0xb64d3010"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0xb64cf7b0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0xb64deb00"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0xb720aa98"/></to>
    </wire>
    <wire loc="86:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0xb64daa58"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0xb647ec30"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0xb64d9838"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0xb720e2f0"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0xb64d3c80"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0xb64ce3e0"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0xb64e69e0"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0xb7217ce8"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0xb64dc9f8"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0xb72088e0"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0xb6488050"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0xb64c2010"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0xb64c2010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb6498b68"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0xb6480190"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0xb64c2890"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0xb64c2890"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb6496c70"/></to>
    </wire>
    <wire loc="85:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0xb647d270"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0xb64c1168"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0xb64c1168"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb6494d60"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0xb647b358"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0xb64c19e8"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0xb64c19e8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb6490010"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0xb64c65d8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb649f6c0"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0xb64c6e58"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb649c7a8"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0xb64c3ce0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb64be570"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0xb64c56f8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0xb649a920"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb64bed28"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0xb64bb5e8"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb649fe78"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0xb64bba60"/></to>
    </wire>
    <wire loc="82:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb649b010"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0xb64bbed8"/></to>
    </wire>
    <wire loc="83:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb6499190"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0xb64bd360"/></to>
    </wire>
    <wire loc="84:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb6497350"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0xb64bd7d8"/></to>
    </wire>
    <wire loc="85:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb6495438"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0xb64bdc50"/></to>
    </wire>
    <wire loc="86:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb64925f0"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0xb64ba1a0"/></to>
    </wire>
    <wire loc="87:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0xb64907c8"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0xb64ba618"/></to>
    </wire>
    <wire loc="106:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb642ab60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb5da3e28"/></to>
    </wire>
    <wire loc="107:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6429010"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5da2270"/></to>
    </wire>
    <wire loc="105:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb642a420"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5da36e8"/></to>
    </wire>
    <wire loc="108:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb64296a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb5da2908"/></to>
    </wire>
    <wire loc="109:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb5da2dc8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb6429b58"/></to>
    </wire>
    <wire loc="111:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb5da1250"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0xb5da5540"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb5da0438"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb64279f8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb5d82010"/></to>
    </wire>
    <wire loc="109:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb5d81010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb6426980"/></to>
    </wire>
    <wire loc="111:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb5d81438"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0xb5d84678"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb5d806d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb6423750"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb5d611e8"/></to>
    </wire>
    <wire loc="109:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb5d60218"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb64226e0"/></to>
    </wire>
    <wire loc="111:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb5d60640"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0xb5d64868"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb5d5f890"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb5d447a8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb64200b0"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0xb5d44d60"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0xb6420668"/></to>
    </wire>
    <wire loc="83:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5d43150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6420980"/></to>
    </wire>
    <wire loc="84:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb5d437e8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb641f030"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0xb5d43c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0xb5d42080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb5d37408"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6405118"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0xb5d379c0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0xb64056d0"/></to>
    </wire>
    <wire loc="83:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5d37cd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb64059e8"/></to>
    </wire>
    <wire loc="84:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb5d363f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb6404150"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0xb5d36828"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0xb5d36c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0xb63ebd98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0xb63e3750"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/wsn/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0xb63d5100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0xb63dc5a8"/></to>
    </wire>
    <wire loc="38:/home/wsn/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb63d5938"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0xb63d28f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/wsn/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb63ce100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb63dca80"/></to>
    </wire>
    <wire loc="31:/home/wsn/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0xb63dac48"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb634f560"/></to>
    </wire>
    <wire loc="32:/home/wsn/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0xb63d6100"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0xb6367c78"/></to>
    </wire>
    <wire loc="33:/home/wsn/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6341ea0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb63d5938"/></to>
    </wire>
    <wire loc="34:/home/wsn/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0xb63651b8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0xb63d5100"/></to>
    </wire>
    <wire loc="36:/home/wsn/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0xb6341280"/></from>
      <to><interface-ref name="Read" scoped="" ref="0xb636acd0"/></to>
    </wire>
    <wire loc="37:/home/wsn/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0xb6366910"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0xb63ca300"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0xb63ca300"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0xb63c5678"/></to>
    </wire>
    <wire loc="38:/home/wsn/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0xb63658a0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0xb6a8c010"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0xb63c7870"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0xb63c5c00"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb63d28f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb639e108"/></to>
    </wire>
    <wire loc="105:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb639e108"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb5d13290"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb637b7c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb63ce100"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0xb63ba498"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0xb63cd648"/></to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0xb63cd648"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0xb639a2b8"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xb63c2968"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7231508"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0xb6379538"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0xb63c51e8"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6379c48"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb639ec50"/></to>
    </wire>
    <wire loc="107:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb639ec50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5d13dd8"/></to>
    </wire>
    <wire loc="51:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xb63986d8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb72e9420"/></to>
    </wire>
    <wire loc="106:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb639e848"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb5d139d0"/></to>
    </wire>
    <wire loc="108:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb637b310"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb5d124d0"/></to>
    </wire>
    <wire loc="109:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb5d12990"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb637b7c0"/></to>
    </wire>
    <wire loc="111:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb5d12db8"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0xb5d14090"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb5d0f030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0xb5cf69b8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0xb6379538"/></to>
    </wire>
    <wire loc="82:/home/wsn/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0xb5cf6db0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0xb6379930"/></to>
    </wire>
    <wire loc="84:/home/wsn/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5cf4150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6379c48"/></to>
    </wire>
    <wire loc="85:/home/wsn/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb5cf47e8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb6378310"/></to>
    </wire>
    <wire loc="104:/home/wsn/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0xb635a4e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="Collection2SerialC" loc="4:Collection2SerialC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/wsn/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/wsn/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/wsn/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC.TaskletC" loc="42(RF230RadioC.TaskletC):/home/wsn/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <instance number="0">
        <component-ref qname="TaskletC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="50(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/wsn/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/wsn/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb6d92948"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7300db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7300db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7326010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7326010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7326010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/home/wsn/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/wsn/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TThree" ref="0xb72fe010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7326010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TThree" ref="0xb72fe010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0xb72fe5e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/wsn/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/wsn/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/wsn/tinyos-main/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/wsn/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CollectionC" loc="45:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="77:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="66:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/home/wsn/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
            <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/home/wsn/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0xb66b7f18"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/home/wsn/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0xb6782608"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0xb6782890"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/home/wsn/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0xb66b7f18"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/home/wsn/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0xb6782608"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0xb6782890"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="42:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="47(CtpP.AMSenderC.SenderC):/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.AMQueueEntryP):/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="107(CtpP.Router):/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="38:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="47(CtpP.SendControl.SenderC):/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.AMQueueEntryP):/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Collection2SerialAppC.CollectionSenderC" loc="43(Collection2SerialAppC.CollectionSenderC):/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:238">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Collection2SerialAppC.CollectionSenderC.CollectionSenderP" loc="34(Collection2SerialAppC.CollectionSenderC.CollectionSenderP):/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0xb67cba08"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Collection2SerialAppC.CollectionSenderC.CollectionSenderP.CollectionIdP" loc="45(Collection2SerialAppC.CollectionSenderC.CollectionSenderP.CollectionIdP):/home/wsn/tinyos-main/tos/lib/net/CollectionIdP.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0xb67cba08"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Collection2SerialAppC.TimerMilliC" loc="44(Collection2SerialAppC.TimerMilliC):/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Collection2SerialAppC.Sensor" loc="18(Collection2SerialAppC.Sensor):/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoC.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedPhotoDeviceP" loc="1:/home/wsn/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC" loc="3:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/home/wsn/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/wsn/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/home/wsn/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/wsn/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/home/wsn/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/wsn/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/home/wsn/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/wsn/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempP" loc="14:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <documentation loc="10:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
        <short>&#10; MTS300 photo and temp sensor ADC configuration.</short>
        <long>&#10; MTS300 photo and temp sensor ADC configuration.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter" loc="89(PhotoTempDeviceC.SharingArbiter):/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.phototemp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Queue" loc="42(PhotoTempDeviceC.SharingArbiter.Queue):/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Arbiter" loc="52(PhotoTempDeviceC.SharingArbiter.Arbiter):/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter" loc="89(PhotoTempDeviceC.PhotoArbiter):/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.photo">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Queue" loc="42(PhotoTempDeviceC.PhotoArbiter.Queue):/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Arbiter" loc="52(PhotoTempDeviceC.PhotoArbiter.Arbiter):/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter" loc="89(PhotoTempDeviceC.TempArbiter):/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.temp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Queue" loc="42(PhotoTempDeviceC.TempArbiter.Queue):/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Arbiter" loc="52(PhotoTempDeviceC.TempArbiter.Arbiter):/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower" loc="67(PhotoTempDeviceC.PhotoPower):/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower.PowerManager" loc="58(PhotoTempDeviceC.PhotoPower.PowerManager):/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower" loc="67(PhotoTempDeviceC.TempPower):/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower.PowerManager" loc="58(PhotoTempDeviceC.TempPower.PowerManager):/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoControl" loc="1(PhotoTempDeviceC.PhotoControl):/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="0">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempControl" loc="1(PhotoTempDeviceC.TempControl):/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="1">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.WarmupTimer" loc="44(PhotoTempDeviceC.WarmupTimer):/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.Adc" loc="21(PhotoTempDeviceC.Adc):/home/wsn/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/wsn/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:/home/wsn/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <documentation loc="10:/home/wsn/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="51:/home/wsn/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="40:/home/wsn/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/home/wsn/tinyos-main/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/home/wsn/tinyos-main/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/home/wsn/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/wsn/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/home/wsn/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/wsn/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/home/wsn/tinyos-main/tos/chips/atm1281/adc/AdcP.nc" safe="">
      <documentation loc="39:/home/wsn/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/home/wsn/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/wsn/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArbitratedPhotoDeviceP.ArbitrateRead" loc="23(ArbitratedPhotoDeviceP.ArbitrateRead):/home/wsn/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/wsn/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb71fc860" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb71fca78" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb71fcc90" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb71f4c70" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb71f4e98" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb71f10e0" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb71f12d0" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb71a2088" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb71a22b0" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb71a24d8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb71a26c8" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TaskletC" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xb6fac4c0" loc="83:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0xb6fa3298" loc="42:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb6d92948" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb6d92948"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb6d92b08" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb6d8bc50" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb6d8bc50"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb6d8be10" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6d9be60" loc="46:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6d9be60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6ce43a8" loc="46:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6ce43a8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0xb6ce4588" loc="46:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6cbab38" loc="46:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6cbab38"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb6ae7c38" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6ae7c38"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0xb6ae7e58" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb6ae9938" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb6ae9938"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb6ae9d80" loc="52:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6ae9d80"/></type-var>
        </typedef>
        <constant name="mindt" ref="0xb6ad9010" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb6ab2228" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb6ab2228"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb6ab2670" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6ab2670"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xb6aa4488" loc="55:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xb6aa4488"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xb6aa48e8" loc="56:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xb6aa48e8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xb6aa4b50" loc="57:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xb6aa4b50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xb6aa3010" loc="58:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xb6aa3010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xb6aa3278" loc="59:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0xb6aa3700" loc="60:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0xb6aa3700"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb6a60b28" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb6a586b8" loc="43:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0xb6a49e40" loc="45:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/wsn/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0xb67fa270" loc="42:/home/wsn/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0xb67fa270"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0xb67fa498" loc="42:/home/wsn/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/home/wsn/tinyos-main/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0xb66b7f18" loc="41:/home/wsn/tinyos-main/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0xb66b7f18"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0xb66b4150" loc="41:/home/wsn/tinyos-main/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/home/wsn/tinyos-main/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0xb66b04a0" loc="53:/home/wsn/tinyos-main/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0xb66b04a0"/></type-var>
        </typedef>
        <constant name="size" ref="0xb66b0690" loc="53:/home/wsn/tinyos-main/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0xb6699d60" loc="38:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0xb66957f0" loc="43:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/home/wsn/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb666fca8" loc="47:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb65e98b0" loc="47:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb65d1318" loc="43:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSnooperC" loc="44:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb65ccdd8" loc="44:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="107:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="38:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0xb65bf010" loc="107:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0xb65bf250" loc="107:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0xb65bf490" loc="107:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC" loc="43:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc" abstract="">
      <documentation loc="32:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0xb6507c70" loc="43:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0xb67cba08"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0xb6502758" loc="35:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0xb67cba08"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0xb6502970" loc="35:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:/home/wsn/tinyos-main/tos/lib/net/CollectionIdP.nc" abstract="">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0xb64fe438" loc="45:/home/wsn/tinyos-main/tos/lib/net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0xb67cba08"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoC" loc="18:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoC.nc" abstract="">
      <documentation loc="32:/home/wsn/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0xb64bf4d8" loc="39:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0xb64bf700" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0xb64bf928" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb64bfb18" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/home/wsn/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/home/wsn/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xb6472808" loc="89:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0xb6468b18" loc="42:/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/wsn/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0xb6453528" loc="52:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoTempControlP" loc="1:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:/home/wsn/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/home/wsn/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/wsn/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/wsn/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/wsn/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/wsn/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/home/wsn/tinyos-main/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/home/wsn/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0xb63509e8" loc="23:/home/wsn/tinyos-main/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0xb63509e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="RootControl" ref="0xb724f930" loc="11:Collection2SerialC.nc">
      <component-ref qname="Collection2SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0xb724f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0xb724fb08"/>
        <function-ref name="setRoot" scoped="" ref="0xb724fbe8"/>
        <function-ref name="unsetRoot" scoped="" ref="0xb724fcc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xb726e9c0" loc="5:Collection2SerialC.nc">
      <component-ref qname="Collection2SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb726e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb726eb98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0xb726af18" loc="6:Collection2SerialC.nc">
      <component-ref qname="Collection2SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0xb726af18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb726d108"/>
        <function-ref name="stopDone" scoped="" ref="0xb726d1e8"/>
        <function-ref name="start" scoped="" ref="0xb726d2c8"/>
        <function-ref name="stop" scoped="" ref="0xb726d3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xb7264860" loc="8:Collection2SerialC.nc">
      <component-ref qname="Collection2SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7264860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7264a38"/>
        <function-ref name="getPayload" scoped="" ref="0xb7264b18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7264bf8"/>
        <function-ref name="cancel" scoped="" ref="0xb7264cd8"/>
        <function-ref name="sendDone" scoped="" ref="0xb7264db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0xb7249218" loc="13:Collection2SerialC.nc">
      <component-ref qname="Collection2SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0xb7249218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb7249840"/>
        <function-ref name="readDone" scoped="" ref="0xb7249a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0xb7268650" loc="7:Collection2SerialC.nc">
      <component-ref qname="Collection2SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0xb7268650"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7268828"/>
        <function-ref name="stop" scoped="" ref="0xb7268908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0xb724b890" loc="12:Collection2SerialC.nc">
      <component-ref qname="Collection2SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb724b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb724ba68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb7269010" loc="9:Collection2SerialC.nc">
      <component-ref qname="Collection2SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7269010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb72691e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb72692c8"/>
        <function-ref name="led1On" scoped="" ref="0xb72693a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7269488"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7269568"/>
        <function-ref name="get" scoped="" ref="0xb7269648"/>
        <function-ref name="led1Off" scoped="" ref="0xb7269728"/>
        <function-ref name="led2Off" scoped="" ref="0xb7269aa8"/>
        <function-ref name="set" scoped="" ref="0xb7269808"/>
        <function-ref name="led0On" scoped="" ref="0xb72698e8"/>
        <function-ref name="led2On" scoped="" ref="0xb72699c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb7253708" loc="10:Collection2SerialC.nc">
      <component-ref qname="Collection2SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7253708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7252248"/>
        <function-ref name="fired" scoped="" ref="0xb72594e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7259bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7259998"/>
        <function-ref name="getdt" scoped="" ref="0xb72526f8"/>
        <function-ref name="gett0" scoped="" ref="0xb72524a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb7259740"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7253d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7259f10"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7259010"/>
        <function-ref name="stop" scoped="" ref="0xb7259290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb723bb10" loc="58:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb723bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb723bce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb72dae98" loc="57:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb72dae98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb723b0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7231c68" loc="52:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7231c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7231e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb723ac50" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb723ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb723ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb7231508" loc="50:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7231508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb72316e0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb72317c0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb72318a0"/>
        <function-ref name="actualMicro" scoped="" ref="0xb7231980"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb7231a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0xb722e3f0" loc="45:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0xb722e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb722e5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb722e010" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb722e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb722e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0xb722e7f8" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0xb722e7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb722e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7230d50" loc="41:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7230d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7230f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb7230980" loc="40:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7230980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7230b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7228868" loc="45:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7228868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7228a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0xb7225e50" loc="44:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0xb7225e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7228050"/>
        <function-ref name="isInput" scoped="" ref="0xb7228130"/>
        <function-ref name="toggle" scoped="" ref="0xb7228210"/>
        <function-ref name="isOutput" scoped="" ref="0xb72282f0"/>
        <function-ref name="get" scoped="" ref="0xb72283d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72284b0"/>
        <function-ref name="set" scoped="" ref="0xb7228590"/>
        <function-ref name="clr" scoped="" ref="0xb7228670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb722b8f0" loc="43:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb722b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb722bac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0xb72014b0" loc="98:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0xb72014b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7201888"/>
        <function-ref name="isInput" scoped="" ref="0xb7201968"/>
        <function-ref name="toggle" scoped="" ref="0xb7201a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7201b28"/>
        <function-ref name="get" scoped="" ref="0xb7201c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7201ce8"/>
        <function-ref name="set" scoped="" ref="0xb7201dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7201ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0xb7211a28" loc="72:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0xb7211a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7211c00"/>
        <function-ref name="isInput" scoped="" ref="0xb7211ce0"/>
        <function-ref name="toggle" scoped="" ref="0xb7211dc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7211ea0"/>
        <function-ref name="get" scoped="" ref="0xb7210010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72100f0"/>
        <function-ref name="set" scoped="" ref="0xb72101d0"/>
        <function-ref name="clr" scoped="" ref="0xb72102b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0xb720a0a0" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0xb720a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb720a278"/>
        <function-ref name="isInput" scoped="" ref="0xb720a358"/>
        <function-ref name="toggle" scoped="" ref="0xb720a438"/>
        <function-ref name="isOutput" scoped="" ref="0xb720a518"/>
        <function-ref name="get" scoped="" ref="0xb720a5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb720a6d8"/>
        <function-ref name="set" scoped="" ref="0xb720a7b8"/>
        <function-ref name="clr" scoped="" ref="0xb720a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0xb7204210" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0xb7204210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72043e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72044c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72045a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7204688"/>
        <function-ref name="get" scoped="" ref="0xb7204768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7204848"/>
        <function-ref name="set" scoped="" ref="0xb7204928"/>
        <function-ref name="clr" scoped="" ref="0xb7204a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0xb71fea08" loc="103:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0xb71fea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71febe0"/>
        <function-ref name="isInput" scoped="" ref="0xb71fecc0"/>
        <function-ref name="toggle" scoped="" ref="0xb71feda0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71fee80"/>
        <function-ref name="get" scoped="" ref="0xb71fd010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71fd0f0"/>
        <function-ref name="set" scoped="" ref="0xb71fd1d0"/>
        <function-ref name="clr" scoped="" ref="0xb71fd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0xb721d670" loc="50:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0xb721d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721d848"/>
        <function-ref name="isInput" scoped="" ref="0xb721d928"/>
        <function-ref name="toggle" scoped="" ref="0xb721da08"/>
        <function-ref name="isOutput" scoped="" ref="0xb721dae8"/>
        <function-ref name="get" scoped="" ref="0xb721dbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721dca8"/>
        <function-ref name="set" scoped="" ref="0xb721dd88"/>
        <function-ref name="clr" scoped="" ref="0xb721de68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0xb7207ce8" loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0xb7207ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7207ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7206010"/>
        <function-ref name="toggle" scoped="" ref="0xb72060f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72061d0"/>
        <function-ref name="get" scoped="" ref="0xb72062b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7206390"/>
        <function-ref name="set" scoped="" ref="0xb7206470"/>
        <function-ref name="clr" scoped="" ref="0xb7206550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0xb721ca98" loc="53:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0xb721ca98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721cc70"/>
        <function-ref name="isInput" scoped="" ref="0xb721cd50"/>
        <function-ref name="toggle" scoped="" ref="0xb721ce30"/>
        <function-ref name="isOutput" scoped="" ref="0xb721cf10"/>
        <function-ref name="get" scoped="" ref="0xb721b010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721b0f0"/>
        <function-ref name="set" scoped="" ref="0xb721b1d0"/>
        <function-ref name="clr" scoped="" ref="0xb721b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0xb7215210" loc="64:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0xb7215210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72153e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72154c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72155a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7215688"/>
        <function-ref name="get" scoped="" ref="0xb7215768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7215848"/>
        <function-ref name="set" scoped="" ref="0xb7215928"/>
        <function-ref name="clr" scoped="" ref="0xb7215a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0xb720f8e0" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0xb720f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb720fab8"/>
        <function-ref name="isInput" scoped="" ref="0xb720fb98"/>
        <function-ref name="toggle" scoped="" ref="0xb720fc78"/>
        <function-ref name="isOutput" scoped="" ref="0xb720fd58"/>
        <function-ref name="get" scoped="" ref="0xb720fe38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb720ff18"/>
        <function-ref name="set" scoped="" ref="0xb720e010"/>
        <function-ref name="clr" scoped="" ref="0xb720e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0xb7209ea8" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0xb7209ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72080c0"/>
        <function-ref name="isInput" scoped="" ref="0xb72081a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7208280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7208360"/>
        <function-ref name="get" scoped="" ref="0xb7208440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7208520"/>
        <function-ref name="set" scoped="" ref="0xb7208600"/>
        <function-ref name="clr" scoped="" ref="0xb72086e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0xb72212f0" loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0xb72212f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72214c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72215a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7221688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7221768"/>
        <function-ref name="get" scoped="" ref="0xb7221848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7221928"/>
        <function-ref name="set" scoped="" ref="0xb7221a08"/>
        <function-ref name="clr" scoped="" ref="0xb7221ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0xb721a8e0" loc="56:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0xb721a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721aab8"/>
        <function-ref name="isInput" scoped="" ref="0xb721ab98"/>
        <function-ref name="toggle" scoped="" ref="0xb721ac78"/>
        <function-ref name="isOutput" scoped="" ref="0xb721ad58"/>
        <function-ref name="get" scoped="" ref="0xb721ae38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721af18"/>
        <function-ref name="set" scoped="" ref="0xb7219010"/>
        <function-ref name="clr" scoped="" ref="0xb72190f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0xb72130a0" loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0xb72130a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7213278"/>
        <function-ref name="isInput" scoped="" ref="0xb7213358"/>
        <function-ref name="toggle" scoped="" ref="0xb7213438"/>
        <function-ref name="isOutput" scoped="" ref="0xb7213518"/>
        <function-ref name="get" scoped="" ref="0xb72135f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72136d8"/>
        <function-ref name="set" scoped="" ref="0xb72137b8"/>
        <function-ref name="clr" scoped="" ref="0xb7213898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0xb720d750" loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0xb720d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb720d928"/>
        <function-ref name="isInput" scoped="" ref="0xb720da08"/>
        <function-ref name="toggle" scoped="" ref="0xb720dae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb720dbc8"/>
        <function-ref name="get" scoped="" ref="0xb720dca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb720dd88"/>
        <function-ref name="set" scoped="" ref="0xb720de68"/>
        <function-ref name="clr" scoped="" ref="0xb720c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0xb72020a0" loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0xb72020a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7202278"/>
        <function-ref name="isInput" scoped="" ref="0xb7202358"/>
        <function-ref name="toggle" scoped="" ref="0xb7202438"/>
        <function-ref name="isOutput" scoped="" ref="0xb7202518"/>
        <function-ref name="get" scoped="" ref="0xb72025f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72026d8"/>
        <function-ref name="set" scoped="" ref="0xb72027b8"/>
        <function-ref name="clr" scoped="" ref="0xb7202898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0xb71ff590" loc="101:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0xb71ff590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71ff768"/>
        <function-ref name="isInput" scoped="" ref="0xb71ff848"/>
        <function-ref name="toggle" scoped="" ref="0xb71ff928"/>
        <function-ref name="isOutput" scoped="" ref="0xb71ffa08"/>
        <function-ref name="get" scoped="" ref="0xb71ffae8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71ffbc8"/>
        <function-ref name="set" scoped="" ref="0xb71ffca8"/>
        <function-ref name="clr" scoped="" ref="0xb71ffd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0xb720cc08" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0xb720cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb720cde0"/>
        <function-ref name="isInput" scoped="" ref="0xb720cec0"/>
        <function-ref name="toggle" scoped="" ref="0xb720b010"/>
        <function-ref name="isOutput" scoped="" ref="0xb720b0f0"/>
        <function-ref name="get" scoped="" ref="0xb720b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb720b2b0"/>
        <function-ref name="set" scoped="" ref="0xb720b390"/>
        <function-ref name="clr" scoped="" ref="0xb720b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0xb721e210" loc="48:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0xb721e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721e3e8"/>
        <function-ref name="isInput" scoped="" ref="0xb721e4c8"/>
        <function-ref name="toggle" scoped="" ref="0xb721e5a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb721e688"/>
        <function-ref name="get" scoped="" ref="0xb721e768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721e848"/>
        <function-ref name="set" scoped="" ref="0xb721e928"/>
        <function-ref name="clr" scoped="" ref="0xb721ea08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0xb7218830" loc="59:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0xb7218830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7218a08"/>
        <function-ref name="isInput" scoped="" ref="0xb7218ae8"/>
        <function-ref name="toggle" scoped="" ref="0xb7218bc8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7218ca8"/>
        <function-ref name="get" scoped="" ref="0xb7218d88"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7218e68"/>
        <function-ref name="set" scoped="" ref="0xb7217010"/>
        <function-ref name="clr" scoped="" ref="0xb72170f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0xb72000c0" loc="99:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0xb72000c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7200298"/>
        <function-ref name="isInput" scoped="" ref="0xb7200378"/>
        <function-ref name="toggle" scoped="" ref="0xb7200458"/>
        <function-ref name="isOutput" scoped="" ref="0xb7200538"/>
        <function-ref name="get" scoped="" ref="0xb7200618"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72006f8"/>
        <function-ref name="set" scoped="" ref="0xb72007d8"/>
        <function-ref name="clr" scoped="" ref="0xb72008b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0xb7217ce8" loc="62:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0xb7217ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7217ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7216010"/>
        <function-ref name="toggle" scoped="" ref="0xb72160f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72161d0"/>
        <function-ref name="get" scoped="" ref="0xb72162b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7216390"/>
        <function-ref name="set" scoped="" ref="0xb7216470"/>
        <function-ref name="clr" scoped="" ref="0xb7216550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0xb72104b0" loc="73:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0xb72104b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7210688"/>
        <function-ref name="isInput" scoped="" ref="0xb7210768"/>
        <function-ref name="toggle" scoped="" ref="0xb7210848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7210928"/>
        <function-ref name="get" scoped="" ref="0xb7210a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7210ae8"/>
        <function-ref name="set" scoped="" ref="0xb7210bc8"/>
        <function-ref name="clr" scoped="" ref="0xb7210ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0xb720aa98" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0xb720aa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb720ac70"/>
        <function-ref name="isInput" scoped="" ref="0xb720ad50"/>
        <function-ref name="toggle" scoped="" ref="0xb720ae30"/>
        <function-ref name="isOutput" scoped="" ref="0xb720af10"/>
        <function-ref name="get" scoped="" ref="0xb7209010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72090f0"/>
        <function-ref name="set" scoped="" ref="0xb72091d0"/>
        <function-ref name="clr" scoped="" ref="0xb72092b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0xb7204c08" loc="93:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0xb7204c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7204de0"/>
        <function-ref name="isInput" scoped="" ref="0xb7204ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7203010"/>
        <function-ref name="isOutput" scoped="" ref="0xb72030f0"/>
        <function-ref name="get" scoped="" ref="0xb72031d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72032b0"/>
        <function-ref name="set" scoped="" ref="0xb7203390"/>
        <function-ref name="clr" scoped="" ref="0xb7203470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0xb721c0a0" loc="51:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0xb721c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721c278"/>
        <function-ref name="isInput" scoped="" ref="0xb721c358"/>
        <function-ref name="toggle" scoped="" ref="0xb721c438"/>
        <function-ref name="isOutput" scoped="" ref="0xb721c518"/>
        <function-ref name="get" scoped="" ref="0xb721c5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721c6d8"/>
        <function-ref name="set" scoped="" ref="0xb721c7b8"/>
        <function-ref name="clr" scoped="" ref="0xb721c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0xb721b4b0" loc="54:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0xb721b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721b688"/>
        <function-ref name="isInput" scoped="" ref="0xb721b768"/>
        <function-ref name="toggle" scoped="" ref="0xb721b848"/>
        <function-ref name="isOutput" scoped="" ref="0xb721b928"/>
        <function-ref name="get" scoped="" ref="0xb721ba08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721bae8"/>
        <function-ref name="set" scoped="" ref="0xb721bbc8"/>
        <function-ref name="clr" scoped="" ref="0xb721bca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0xb7215c08" loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0xb7215c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7215de0"/>
        <function-ref name="isInput" scoped="" ref="0xb7215ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7214010"/>
        <function-ref name="isOutput" scoped="" ref="0xb72140f0"/>
        <function-ref name="get" scoped="" ref="0xb72141d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72142b0"/>
        <function-ref name="set" scoped="" ref="0xb7214390"/>
        <function-ref name="clr" scoped="" ref="0xb7214470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0xb720e2f0" loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0xb720e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb720e4c8"/>
        <function-ref name="isInput" scoped="" ref="0xb720e5a8"/>
        <function-ref name="toggle" scoped="" ref="0xb720e688"/>
        <function-ref name="isOutput" scoped="" ref="0xb720e768"/>
        <function-ref name="get" scoped="" ref="0xb720e848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb720e928"/>
        <function-ref name="set" scoped="" ref="0xb720ea08"/>
        <function-ref name="clr" scoped="" ref="0xb720eae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0xb72088e0" loc="87:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0xb72088e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7208ab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7208b98"/>
        <function-ref name="toggle" scoped="" ref="0xb7208c78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7208d58"/>
        <function-ref name="get" scoped="" ref="0xb7208e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7208f18"/>
        <function-ref name="set" scoped="" ref="0xb7207010"/>
        <function-ref name="clr" scoped="" ref="0xb72070f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0xb7221ce8" loc="46:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0xb7221ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7221ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7220010"/>
        <function-ref name="toggle" scoped="" ref="0xb72200f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72201d0"/>
        <function-ref name="get" scoped="" ref="0xb72202b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7220390"/>
        <function-ref name="set" scoped="" ref="0xb7220470"/>
        <function-ref name="clr" scoped="" ref="0xb7220550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0xb72192f0" loc="57:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0xb72192f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7219548"/>
        <function-ref name="isInput" scoped="" ref="0xb7219628"/>
        <function-ref name="toggle" scoped="" ref="0xb7219708"/>
        <function-ref name="isOutput" scoped="" ref="0xb72197e8"/>
        <function-ref name="get" scoped="" ref="0xb72198c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72199a8"/>
        <function-ref name="set" scoped="" ref="0xb7219a88"/>
        <function-ref name="clr" scoped="" ref="0xb7219b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0xb7213a98" loc="68:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0xb7213a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7213c70"/>
        <function-ref name="isInput" scoped="" ref="0xb7213d50"/>
        <function-ref name="toggle" scoped="" ref="0xb7213e30"/>
        <function-ref name="isOutput" scoped="" ref="0xb7213f10"/>
        <function-ref name="get" scoped="" ref="0xb7212010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72120f0"/>
        <function-ref name="set" scoped="" ref="0xb72121d0"/>
        <function-ref name="clr" scoped="" ref="0xb72122b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0xb7202a98" loc="96:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0xb7202a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7202c70"/>
        <function-ref name="isInput" scoped="" ref="0xb7202d50"/>
        <function-ref name="toggle" scoped="" ref="0xb7202e30"/>
        <function-ref name="isOutput" scoped="" ref="0xb7202f10"/>
        <function-ref name="get" scoped="" ref="0xb7201010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72010f0"/>
        <function-ref name="set" scoped="" ref="0xb72011d0"/>
        <function-ref name="clr" scoped="" ref="0xb72012b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0xb7212ea8" loc="71:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0xb7212ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7211208"/>
        <function-ref name="isInput" scoped="" ref="0xb72112e8"/>
        <function-ref name="toggle" scoped="" ref="0xb72113c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72114a8"/>
        <function-ref name="get" scoped="" ref="0xb7211588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7211668"/>
        <function-ref name="set" scoped="" ref="0xb7211748"/>
        <function-ref name="clr" scoped="" ref="0xb7211828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0xb720b670" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0xb720b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb720b848"/>
        <function-ref name="isInput" scoped="" ref="0xb720b928"/>
        <function-ref name="toggle" scoped="" ref="0xb720ba08"/>
        <function-ref name="isOutput" scoped="" ref="0xb720bae8"/>
        <function-ref name="get" scoped="" ref="0xb720bbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb720bca8"/>
        <function-ref name="set" scoped="" ref="0xb720bd88"/>
        <function-ref name="clr" scoped="" ref="0xb720be68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0xb7206750" loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0xb7206750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7206928"/>
        <function-ref name="isInput" scoped="" ref="0xb7206a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7206ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7206bc8"/>
        <function-ref name="get" scoped="" ref="0xb7206ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7206d88"/>
        <function-ref name="set" scoped="" ref="0xb7206e68"/>
        <function-ref name="clr" scoped="" ref="0xb7204010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0xb71fe010" loc="102:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0xb71fe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71fe1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb71fe2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb71fe3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71fe488"/>
        <function-ref name="get" scoped="" ref="0xb71fe568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71fe648"/>
        <function-ref name="set" scoped="" ref="0xb71fe728"/>
        <function-ref name="clr" scoped="" ref="0xb71fe808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0xb721ec08" loc="49:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0xb721ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721ede0"/>
        <function-ref name="isInput" scoped="" ref="0xb721eec0"/>
        <function-ref name="toggle" scoped="" ref="0xb721d010"/>
        <function-ref name="isOutput" scoped="" ref="0xb721d0f0"/>
        <function-ref name="get" scoped="" ref="0xb721d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721d2b0"/>
        <function-ref name="set" scoped="" ref="0xb721d390"/>
        <function-ref name="clr" scoped="" ref="0xb721d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0xb72172f0" loc="60:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0xb72172f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72174c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72175a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7217688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7217768"/>
        <function-ref name="get" scoped="" ref="0xb7217848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7217928"/>
        <function-ref name="set" scoped="" ref="0xb7217a08"/>
        <function-ref name="clr" scoped="" ref="0xb7217ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0xb72072f0" loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0xb72072f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72074c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72075a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7207688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7207768"/>
        <function-ref name="get" scoped="" ref="0xb7207848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7207928"/>
        <function-ref name="set" scoped="" ref="0xb7207a08"/>
        <function-ref name="clr" scoped="" ref="0xb7207ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0xb7216750" loc="63:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0xb7216750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7216928"/>
        <function-ref name="isInput" scoped="" ref="0xb7216a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7216ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7216bc8"/>
        <function-ref name="get" scoped="" ref="0xb7216ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7216d88"/>
        <function-ref name="set" scoped="" ref="0xb7216e68"/>
        <function-ref name="clr" scoped="" ref="0xb7215010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0xb7210ea8" loc="74:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0xb7210ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb720f0c0"/>
        <function-ref name="isInput" scoped="" ref="0xb720f1a0"/>
        <function-ref name="toggle" scoped="" ref="0xb720f280"/>
        <function-ref name="isOutput" scoped="" ref="0xb720f360"/>
        <function-ref name="get" scoped="" ref="0xb720f440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb720f520"/>
        <function-ref name="set" scoped="" ref="0xb720f600"/>
        <function-ref name="clr" scoped="" ref="0xb720f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0xb72094b0" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0xb72094b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7209688"/>
        <function-ref name="isInput" scoped="" ref="0xb7209768"/>
        <function-ref name="toggle" scoped="" ref="0xb7209848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7209928"/>
        <function-ref name="get" scoped="" ref="0xb7209a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7209ae8"/>
        <function-ref name="set" scoped="" ref="0xb7209bc8"/>
        <function-ref name="clr" scoped="" ref="0xb7209ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0xb7203670" loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0xb7203670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7203848"/>
        <function-ref name="isInput" scoped="" ref="0xb7203928"/>
        <function-ref name="toggle" scoped="" ref="0xb7203a08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7203ae8"/>
        <function-ref name="get" scoped="" ref="0xb7203bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7203ca8"/>
        <function-ref name="set" scoped="" ref="0xb7203d88"/>
        <function-ref name="clr" scoped="" ref="0xb7203e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0xb722a848" loc="44:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0xb722a848"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb722aa20"/>
        <function-ref name="isInput" scoped="" ref="0xb722ab00"/>
        <function-ref name="toggle" scoped="" ref="0xb722abe0"/>
        <function-ref name="isOutput" scoped="" ref="0xb722acc0"/>
        <function-ref name="get" scoped="" ref="0xb722ada0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb722ae80"/>
        <function-ref name="set" scoped="" ref="0xb7221010"/>
        <function-ref name="clr" scoped="" ref="0xb72210f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0xb721bea8" loc="55:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0xb721bea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721a0c0"/>
        <function-ref name="isInput" scoped="" ref="0xb721a1a0"/>
        <function-ref name="toggle" scoped="" ref="0xb721a280"/>
        <function-ref name="isOutput" scoped="" ref="0xb721a360"/>
        <function-ref name="get" scoped="" ref="0xb721a440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721a520"/>
        <function-ref name="set" scoped="" ref="0xb721a600"/>
        <function-ref name="clr" scoped="" ref="0xb721a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0xb7214670" loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0xb7214670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7214848"/>
        <function-ref name="isInput" scoped="" ref="0xb7214928"/>
        <function-ref name="toggle" scoped="" ref="0xb7214a08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7214ae8"/>
        <function-ref name="get" scoped="" ref="0xb7214bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7214ca8"/>
        <function-ref name="set" scoped="" ref="0xb7214d88"/>
        <function-ref name="clr" scoped="" ref="0xb7214e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0xb720ece8" loc="77:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0xb720ece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb720eec0"/>
        <function-ref name="isInput" scoped="" ref="0xb720d010"/>
        <function-ref name="toggle" scoped="" ref="0xb720d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb720d1d0"/>
        <function-ref name="get" scoped="" ref="0xb720d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb720d390"/>
        <function-ref name="set" scoped="" ref="0xb720d470"/>
        <function-ref name="clr" scoped="" ref="0xb720d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0xb7200ab8" loc="100:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0xb7200ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7200c90"/>
        <function-ref name="isInput" scoped="" ref="0xb7200d70"/>
        <function-ref name="toggle" scoped="" ref="0xb7200e50"/>
        <function-ref name="isOutput" scoped="" ref="0xb71ff010"/>
        <function-ref name="get" scoped="" ref="0xb71ff0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71ff1d0"/>
        <function-ref name="set" scoped="" ref="0xb71ff2b0"/>
        <function-ref name="clr" scoped="" ref="0xb71ff390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0xb720c210" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0xb720c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb720c3e8"/>
        <function-ref name="isInput" scoped="" ref="0xb720c4c8"/>
        <function-ref name="toggle" scoped="" ref="0xb720c5a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb720c688"/>
        <function-ref name="get" scoped="" ref="0xb720c768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb720c848"/>
        <function-ref name="set" scoped="" ref="0xb720c928"/>
        <function-ref name="clr" scoped="" ref="0xb720ca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0xb72124b0" loc="69:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0xb72124b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7212688"/>
        <function-ref name="isInput" scoped="" ref="0xb7212768"/>
        <function-ref name="toggle" scoped="" ref="0xb7212848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7212928"/>
        <function-ref name="get" scoped="" ref="0xb7212a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7212ae8"/>
        <function-ref name="set" scoped="" ref="0xb7212bc8"/>
        <function-ref name="clr" scoped="" ref="0xb7212ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0xb7220750" loc="47:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0xb7220750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7220928"/>
        <function-ref name="isInput" scoped="" ref="0xb7220a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7220ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7220bc8"/>
        <function-ref name="get" scoped="" ref="0xb7220ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7220d88"/>
        <function-ref name="set" scoped="" ref="0xb7220e68"/>
        <function-ref name="clr" scoped="" ref="0xb721e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0xb7219d68" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0xb7219d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7218010"/>
        <function-ref name="isInput" scoped="" ref="0xb72180f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72181d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72182b0"/>
        <function-ref name="get" scoped="" ref="0xb7218390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7218470"/>
        <function-ref name="set" scoped="" ref="0xb7218550"/>
        <function-ref name="clr" scoped="" ref="0xb7218630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb71d4030" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb71d4030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71d4208"/>
        <function-ref name="isInput" scoped="" ref="0xb71d42e8"/>
        <function-ref name="toggle" scoped="" ref="0xb71d43c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71d44a8"/>
        <function-ref name="get" scoped="" ref="0xb71d4588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71d4668"/>
        <function-ref name="set" scoped="" ref="0xb71d4748"/>
        <function-ref name="clr" scoped="" ref="0xb71d4828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb71d3c88" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb71d3c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71d3e60"/>
        <function-ref name="isInput" scoped="" ref="0xb71d2010"/>
        <function-ref name="toggle" scoped="" ref="0xb71d20f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71d21d0"/>
        <function-ref name="get" scoped="" ref="0xb71d22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71d2390"/>
        <function-ref name="set" scoped="" ref="0xb71d2470"/>
        <function-ref name="clr" scoped="" ref="0xb71d2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb71d6cc8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb71d6cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71d6ea0"/>
        <function-ref name="isInput" scoped="" ref="0xb71d5010"/>
        <function-ref name="toggle" scoped="" ref="0xb71d50f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71d51d0"/>
        <function-ref name="get" scoped="" ref="0xb71d52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71d5390"/>
        <function-ref name="set" scoped="" ref="0xb71d5470"/>
        <function-ref name="clr" scoped="" ref="0xb71d5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb71d4988" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb71d4988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71d4b60"/>
        <function-ref name="isInput" scoped="" ref="0xb71d4c40"/>
        <function-ref name="toggle" scoped="" ref="0xb71d4d20"/>
        <function-ref name="isOutput" scoped="" ref="0xb71d4e00"/>
        <function-ref name="get" scoped="" ref="0xb71d4ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71d3010"/>
        <function-ref name="set" scoped="" ref="0xb71d30f0"/>
        <function-ref name="clr" scoped="" ref="0xb71d31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb71d26b0" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb71d26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71d2888"/>
        <function-ref name="isInput" scoped="" ref="0xb71d2968"/>
        <function-ref name="toggle" scoped="" ref="0xb71d2a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb71d2b28"/>
        <function-ref name="get" scoped="" ref="0xb71d2c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71d2ce8"/>
        <function-ref name="set" scoped="" ref="0xb71d2dc8"/>
        <function-ref name="clr" scoped="" ref="0xb71d2ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb71d56b0" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb71d56b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71d5888"/>
        <function-ref name="isInput" scoped="" ref="0xb71d5968"/>
        <function-ref name="toggle" scoped="" ref="0xb71d5a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb71d5b28"/>
        <function-ref name="get" scoped="" ref="0xb71d5c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71d5ce8"/>
        <function-ref name="set" scoped="" ref="0xb71d5dc8"/>
        <function-ref name="clr" scoped="" ref="0xb71d5ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb71d3330" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb71d3330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71d3508"/>
        <function-ref name="isInput" scoped="" ref="0xb71d35e8"/>
        <function-ref name="toggle" scoped="" ref="0xb71d36c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71d37a8"/>
        <function-ref name="get" scoped="" ref="0xb71d3888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71d3968"/>
        <function-ref name="set" scoped="" ref="0xb71d3a48"/>
        <function-ref name="clr" scoped="" ref="0xb71d3b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb71d1030" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb71d1030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71d1208"/>
        <function-ref name="isInput" scoped="" ref="0xb71d12e8"/>
        <function-ref name="toggle" scoped="" ref="0xb71d13c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71d14a8"/>
        <function-ref name="get" scoped="" ref="0xb71d1588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71d1668"/>
        <function-ref name="set" scoped="" ref="0xb71d1748"/>
        <function-ref name="clr" scoped="" ref="0xb71d1828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb631cf28" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb631cf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6317110"/>
        <function-ref name="isInput" scoped="" ref="0xb63171f0"/>
        <function-ref name="toggle" scoped="" ref="0xb63172d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb63173b0"/>
        <function-ref name="get" scoped="" ref="0xb6317490"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6317570"/>
        <function-ref name="set" scoped="" ref="0xb6317650"/>
        <function-ref name="clr" scoped="" ref="0xb6317730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb63168f0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb63168f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6316ac8"/>
        <function-ref name="isInput" scoped="" ref="0xb6316ba8"/>
        <function-ref name="toggle" scoped="" ref="0xb6316c88"/>
        <function-ref name="isOutput" scoped="" ref="0xb6316d68"/>
        <function-ref name="get" scoped="" ref="0xb6316e48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6316f28"/>
        <function-ref name="set" scoped="" ref="0xb6315018"/>
        <function-ref name="clr" scoped="" ref="0xb63150f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb63142d0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb63142d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb63144a8"/>
        <function-ref name="isInput" scoped="" ref="0xb6314588"/>
        <function-ref name="toggle" scoped="" ref="0xb6314668"/>
        <function-ref name="isOutput" scoped="" ref="0xb6314748"/>
        <function-ref name="get" scoped="" ref="0xb6314828"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6314908"/>
        <function-ref name="set" scoped="" ref="0xb63149e8"/>
        <function-ref name="clr" scoped="" ref="0xb6314ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6313c90" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6313c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6313e68"/>
        <function-ref name="isInput" scoped="" ref="0xb6312010"/>
        <function-ref name="toggle" scoped="" ref="0xb63120f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb63121d0"/>
        <function-ref name="get" scoped="" ref="0xb63122b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6312390"/>
        <function-ref name="set" scoped="" ref="0xb6312470"/>
        <function-ref name="clr" scoped="" ref="0xb6312550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6311718" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6311718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb63118f0"/>
        <function-ref name="isInput" scoped="" ref="0xb63119d0"/>
        <function-ref name="toggle" scoped="" ref="0xb6311ab0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6311b90"/>
        <function-ref name="get" scoped="" ref="0xb6311c70"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6311d50"/>
        <function-ref name="set" scoped="" ref="0xb6311e30"/>
        <function-ref name="clr" scoped="" ref="0xb6311f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb630f0f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb630f0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb630f2d0"/>
        <function-ref name="isInput" scoped="" ref="0xb630f3b0"/>
        <function-ref name="toggle" scoped="" ref="0xb630f490"/>
        <function-ref name="isOutput" scoped="" ref="0xb630f570"/>
        <function-ref name="get" scoped="" ref="0xb630f650"/>
        <function-ref name="makeOutput" scoped="" ref="0xb630f730"/>
        <function-ref name="set" scoped="" ref="0xb630f810"/>
        <function-ref name="clr" scoped="" ref="0xb630f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb630eac8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb630eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb630eca0"/>
        <function-ref name="isInput" scoped="" ref="0xb630ed80"/>
        <function-ref name="toggle" scoped="" ref="0xb630ee60"/>
        <function-ref name="isOutput" scoped="" ref="0xb630d010"/>
        <function-ref name="get" scoped="" ref="0xb630d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb630d1d0"/>
        <function-ref name="set" scoped="" ref="0xb630d2b0"/>
        <function-ref name="clr" scoped="" ref="0xb630d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6307570" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6307570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6307748"/>
        <function-ref name="isInput" scoped="" ref="0xb6307828"/>
        <function-ref name="toggle" scoped="" ref="0xb6307908"/>
        <function-ref name="isOutput" scoped="" ref="0xb63079e8"/>
        <function-ref name="get" scoped="" ref="0xb6307ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6307ba8"/>
        <function-ref name="set" scoped="" ref="0xb6307c88"/>
        <function-ref name="clr" scoped="" ref="0xb6307d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb71cc860" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb71cc860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71cca38"/>
        <function-ref name="isInput" scoped="" ref="0xb71ccb18"/>
        <function-ref name="toggle" scoped="" ref="0xb71ccbf8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71cccd8"/>
        <function-ref name="get" scoped="" ref="0xb71ccdb8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71cce98"/>
        <function-ref name="set" scoped="" ref="0xb71cb010"/>
        <function-ref name="clr" scoped="" ref="0xb71cb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb71ca5d0" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb71ca5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71ca7a8"/>
        <function-ref name="isInput" scoped="" ref="0xb71ca888"/>
        <function-ref name="toggle" scoped="" ref="0xb71ca968"/>
        <function-ref name="isOutput" scoped="" ref="0xb71caa48"/>
        <function-ref name="get" scoped="" ref="0xb71cab28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71cac08"/>
        <function-ref name="set" scoped="" ref="0xb71cace8"/>
        <function-ref name="clr" scoped="" ref="0xb71cadc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb71cd5a0" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb71cd5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71cd778"/>
        <function-ref name="isInput" scoped="" ref="0xb71cd858"/>
        <function-ref name="toggle" scoped="" ref="0xb71cd938"/>
        <function-ref name="isOutput" scoped="" ref="0xb71cda18"/>
        <function-ref name="get" scoped="" ref="0xb71cdaf8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71cdbd8"/>
        <function-ref name="set" scoped="" ref="0xb71cdcb8"/>
        <function-ref name="clr" scoped="" ref="0xb71cdd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb71cb250" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb71cb250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71cb428"/>
        <function-ref name="isInput" scoped="" ref="0xb71cb508"/>
        <function-ref name="toggle" scoped="" ref="0xb71cb5e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71cb6c8"/>
        <function-ref name="get" scoped="" ref="0xb71cb7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71cb888"/>
        <function-ref name="set" scoped="" ref="0xb71cb968"/>
        <function-ref name="clr" scoped="" ref="0xb71cba48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb71caf28" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb71caf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71c9110"/>
        <function-ref name="isInput" scoped="" ref="0xb71c91f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71c92d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71c93b0"/>
        <function-ref name="get" scoped="" ref="0xb71c9490"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71c9570"/>
        <function-ref name="set" scoped="" ref="0xb71c9650"/>
        <function-ref name="clr" scoped="" ref="0xb71c9730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb71cdef8" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb71cdef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71cc0e0"/>
        <function-ref name="isInput" scoped="" ref="0xb71cc1c0"/>
        <function-ref name="toggle" scoped="" ref="0xb71cc2a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71cc380"/>
        <function-ref name="get" scoped="" ref="0xb71cc460"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71cc540"/>
        <function-ref name="set" scoped="" ref="0xb71cc620"/>
        <function-ref name="clr" scoped="" ref="0xb71cc700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb71cbba8" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb71cbba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71cbd80"/>
        <function-ref name="isInput" scoped="" ref="0xb71cbe60"/>
        <function-ref name="toggle" scoped="" ref="0xb71ca010"/>
        <function-ref name="isOutput" scoped="" ref="0xb71ca0f0"/>
        <function-ref name="get" scoped="" ref="0xb71ca1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71ca2b0"/>
        <function-ref name="set" scoped="" ref="0xb71ca390"/>
        <function-ref name="clr" scoped="" ref="0xb71ca470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb71c9890" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb71c9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71c9a68"/>
        <function-ref name="isInput" scoped="" ref="0xb71c9b48"/>
        <function-ref name="toggle" scoped="" ref="0xb71c9c28"/>
        <function-ref name="isOutput" scoped="" ref="0xb71c9d08"/>
        <function-ref name="get" scoped="" ref="0xb71c9de8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71c9ec8"/>
        <function-ref name="set" scoped="" ref="0xb71c8010"/>
        <function-ref name="clr" scoped="" ref="0xb71c80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb62db938" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb62db938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62dbb10"/>
        <function-ref name="isInput" scoped="" ref="0xb62dbbf0"/>
        <function-ref name="toggle" scoped="" ref="0xb62dbcd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb62dbdb0"/>
        <function-ref name="get" scoped="" ref="0xb62dbe90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62da010"/>
        <function-ref name="set" scoped="" ref="0xb62da0f0"/>
        <function-ref name="clr" scoped="" ref="0xb62da1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb62d93b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb62d93b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62d9588"/>
        <function-ref name="isInput" scoped="" ref="0xb62d9668"/>
        <function-ref name="toggle" scoped="" ref="0xb62d9748"/>
        <function-ref name="isOutput" scoped="" ref="0xb62d9828"/>
        <function-ref name="get" scoped="" ref="0xb62d9908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62d99e8"/>
        <function-ref name="set" scoped="" ref="0xb62d9ac8"/>
        <function-ref name="clr" scoped="" ref="0xb62d9ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb62d8d70" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb62d8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62d7010"/>
        <function-ref name="isInput" scoped="" ref="0xb62d70f0"/>
        <function-ref name="toggle" scoped="" ref="0xb62d71d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb62d72b0"/>
        <function-ref name="get" scoped="" ref="0xb62d7390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62d7470"/>
        <function-ref name="set" scoped="" ref="0xb62d7550"/>
        <function-ref name="clr" scoped="" ref="0xb62d7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb62d67f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb62d67f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62d69d0"/>
        <function-ref name="isInput" scoped="" ref="0xb62d6ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb62d6b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb62d6c70"/>
        <function-ref name="get" scoped="" ref="0xb62d6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62d6e30"/>
        <function-ref name="set" scoped="" ref="0xb62d6f10"/>
        <function-ref name="clr" scoped="" ref="0xb62d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb62d4228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb62d4228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62d4400"/>
        <function-ref name="isInput" scoped="" ref="0xb62d44e0"/>
        <function-ref name="toggle" scoped="" ref="0xb62d45c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb62d46a0"/>
        <function-ref name="get" scoped="" ref="0xb62d4780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62d4860"/>
        <function-ref name="set" scoped="" ref="0xb62d4940"/>
        <function-ref name="clr" scoped="" ref="0xb62d4a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb62d3c08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb62d3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62d3de0"/>
        <function-ref name="isInput" scoped="" ref="0xb62d3ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb62d2010"/>
        <function-ref name="isOutput" scoped="" ref="0xb62d20f0"/>
        <function-ref name="get" scoped="" ref="0xb62d21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62d22b0"/>
        <function-ref name="set" scoped="" ref="0xb62d2390"/>
        <function-ref name="clr" scoped="" ref="0xb62d2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb62d16c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb62d16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62d1898"/>
        <function-ref name="isInput" scoped="" ref="0xb62d1978"/>
        <function-ref name="toggle" scoped="" ref="0xb62d1a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb62d1b38"/>
        <function-ref name="get" scoped="" ref="0xb62d1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62d1cf8"/>
        <function-ref name="set" scoped="" ref="0xb62d1dd8"/>
        <function-ref name="clr" scoped="" ref="0xb62d1eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb62ce0b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb62ce0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62ce288"/>
        <function-ref name="isInput" scoped="" ref="0xb62ce368"/>
        <function-ref name="toggle" scoped="" ref="0xb62ce448"/>
        <function-ref name="isOutput" scoped="" ref="0xb62ce528"/>
        <function-ref name="get" scoped="" ref="0xb62ce608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62ce6e8"/>
        <function-ref name="set" scoped="" ref="0xb62ce7c8"/>
        <function-ref name="clr" scoped="" ref="0xb62ce8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb71c4170" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb71c4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71c4348"/>
        <function-ref name="isInput" scoped="" ref="0xb71c4428"/>
        <function-ref name="toggle" scoped="" ref="0xb71c4508"/>
        <function-ref name="isOutput" scoped="" ref="0xb71c45e8"/>
        <function-ref name="get" scoped="" ref="0xb71c46c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71c47a8"/>
        <function-ref name="set" scoped="" ref="0xb71c4888"/>
        <function-ref name="clr" scoped="" ref="0xb71c4968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb71c3e48" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb71c3e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71c1050"/>
        <function-ref name="isInput" scoped="" ref="0xb71c1130"/>
        <function-ref name="toggle" scoped="" ref="0xb71c1210"/>
        <function-ref name="isOutput" scoped="" ref="0xb71c12f0"/>
        <function-ref name="get" scoped="" ref="0xb71c13d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71c14b0"/>
        <function-ref name="set" scoped="" ref="0xb71c1590"/>
        <function-ref name="clr" scoped="" ref="0xb71c1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb71c6e78" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb71c6e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71c5070"/>
        <function-ref name="isInput" scoped="" ref="0xb71c5150"/>
        <function-ref name="toggle" scoped="" ref="0xb71c5230"/>
        <function-ref name="isOutput" scoped="" ref="0xb71c5310"/>
        <function-ref name="get" scoped="" ref="0xb71c53f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71c54d0"/>
        <function-ref name="set" scoped="" ref="0xb71c55b0"/>
        <function-ref name="clr" scoped="" ref="0xb71c5690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb71c4ac8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb71c4ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71c4ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb71c4d80"/>
        <function-ref name="toggle" scoped="" ref="0xb71c4e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb71c3010"/>
        <function-ref name="get" scoped="" ref="0xb71c30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71c31d0"/>
        <function-ref name="set" scoped="" ref="0xb71c32b0"/>
        <function-ref name="clr" scoped="" ref="0xb71c3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb71c17d0" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb71c17d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71c19a8"/>
        <function-ref name="isInput" scoped="" ref="0xb71c1a88"/>
        <function-ref name="toggle" scoped="" ref="0xb71c1b68"/>
        <function-ref name="isOutput" scoped="" ref="0xb71c1c48"/>
        <function-ref name="get" scoped="" ref="0xb71c1d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71c1e08"/>
        <function-ref name="set" scoped="" ref="0xb71c1ee8"/>
        <function-ref name="clr" scoped="" ref="0xb71c0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb71c57f0" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb71c57f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71c59c8"/>
        <function-ref name="isInput" scoped="" ref="0xb71c5aa8"/>
        <function-ref name="toggle" scoped="" ref="0xb71c5b88"/>
        <function-ref name="isOutput" scoped="" ref="0xb71c5c68"/>
        <function-ref name="get" scoped="" ref="0xb71c5d48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71c5e28"/>
        <function-ref name="set" scoped="" ref="0xb71c5f08"/>
        <function-ref name="clr" scoped="" ref="0xb71c4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb71c34f0" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb71c34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71c36c8"/>
        <function-ref name="isInput" scoped="" ref="0xb71c37a8"/>
        <function-ref name="toggle" scoped="" ref="0xb71c3888"/>
        <function-ref name="isOutput" scoped="" ref="0xb71c3968"/>
        <function-ref name="get" scoped="" ref="0xb71c3a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71c3b28"/>
        <function-ref name="set" scoped="" ref="0xb71c3c08"/>
        <function-ref name="clr" scoped="" ref="0xb71c3ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb71c0170" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb71c0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71c0348"/>
        <function-ref name="isInput" scoped="" ref="0xb71c0428"/>
        <function-ref name="toggle" scoped="" ref="0xb71c0508"/>
        <function-ref name="isOutput" scoped="" ref="0xb71c05e8"/>
        <function-ref name="get" scoped="" ref="0xb71c06c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71c07a8"/>
        <function-ref name="set" scoped="" ref="0xb71c0888"/>
        <function-ref name="clr" scoped="" ref="0xb71c0968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb62a2538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb62a2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62a2710"/>
        <function-ref name="isInput" scoped="" ref="0xb62a27f0"/>
        <function-ref name="toggle" scoped="" ref="0xb62a28d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb62a29b0"/>
        <function-ref name="get" scoped="" ref="0xb62a2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62a2b70"/>
        <function-ref name="set" scoped="" ref="0xb62a2c50"/>
        <function-ref name="clr" scoped="" ref="0xb62a2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb62a0010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb62a0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62a01e8"/>
        <function-ref name="isInput" scoped="" ref="0xb62a02c8"/>
        <function-ref name="toggle" scoped="" ref="0xb62a03a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb62a0488"/>
        <function-ref name="get" scoped="" ref="0xb62a0568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62a0648"/>
        <function-ref name="set" scoped="" ref="0xb62a0728"/>
        <function-ref name="clr" scoped="" ref="0xb62a0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb629f9e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb629f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb629fbc0"/>
        <function-ref name="isInput" scoped="" ref="0xb629fca0"/>
        <function-ref name="toggle" scoped="" ref="0xb629fd80"/>
        <function-ref name="isOutput" scoped="" ref="0xb629fe60"/>
        <function-ref name="get" scoped="" ref="0xb629e010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb629e0f0"/>
        <function-ref name="set" scoped="" ref="0xb629e1d0"/>
        <function-ref name="clr" scoped="" ref="0xb629e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb629d538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb629d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb629d710"/>
        <function-ref name="isInput" scoped="" ref="0xb629d7f0"/>
        <function-ref name="toggle" scoped="" ref="0xb629d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb629d9b0"/>
        <function-ref name="get" scoped="" ref="0xb629da90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb629db70"/>
        <function-ref name="set" scoped="" ref="0xb629dc50"/>
        <function-ref name="clr" scoped="" ref="0xb629dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb629b010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb629b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb629b1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb629b2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb629b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb629b488"/>
        <function-ref name="get" scoped="" ref="0xb629b568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb629b648"/>
        <function-ref name="set" scoped="" ref="0xb629b728"/>
        <function-ref name="clr" scoped="" ref="0xb629b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb629a9e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb629a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb629abc0"/>
        <function-ref name="isInput" scoped="" ref="0xb629aca0"/>
        <function-ref name="toggle" scoped="" ref="0xb629ad80"/>
        <function-ref name="isOutput" scoped="" ref="0xb629ae60"/>
        <function-ref name="get" scoped="" ref="0xb6299010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62990f0"/>
        <function-ref name="set" scoped="" ref="0xb62991d0"/>
        <function-ref name="clr" scoped="" ref="0xb62992b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6298538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6298538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6298710"/>
        <function-ref name="isInput" scoped="" ref="0xb62987f0"/>
        <function-ref name="toggle" scoped="" ref="0xb62988d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb62989b0"/>
        <function-ref name="get" scoped="" ref="0xb6298a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6298b70"/>
        <function-ref name="set" scoped="" ref="0xb6298c50"/>
        <function-ref name="clr" scoped="" ref="0xb6298d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6296010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6296010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62961e8"/>
        <function-ref name="isInput" scoped="" ref="0xb62962c8"/>
        <function-ref name="toggle" scoped="" ref="0xb62963a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6296488"/>
        <function-ref name="get" scoped="" ref="0xb6296568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6296648"/>
        <function-ref name="set" scoped="" ref="0xb6296728"/>
        <function-ref name="clr" scoped="" ref="0xb6296808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb71bc9e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb71bc9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71bcbc0"/>
        <function-ref name="isInput" scoped="" ref="0xb71bcca0"/>
        <function-ref name="toggle" scoped="" ref="0xb71bcd80"/>
        <function-ref name="isOutput" scoped="" ref="0xb71bce60"/>
        <function-ref name="get" scoped="" ref="0xb71bb010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71bb0f0"/>
        <function-ref name="set" scoped="" ref="0xb71bb1d0"/>
        <function-ref name="clr" scoped="" ref="0xb71bb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb71ba790" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb71ba790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71ba968"/>
        <function-ref name="isInput" scoped="" ref="0xb71baa48"/>
        <function-ref name="toggle" scoped="" ref="0xb71bab28"/>
        <function-ref name="isOutput" scoped="" ref="0xb71bac08"/>
        <function-ref name="get" scoped="" ref="0xb71bace8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71badc8"/>
        <function-ref name="set" scoped="" ref="0xb71baea8"/>
        <function-ref name="clr" scoped="" ref="0xb71b9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb71bd6f8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb71bd6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71bd8d0"/>
        <function-ref name="isInput" scoped="" ref="0xb71bd9b0"/>
        <function-ref name="toggle" scoped="" ref="0xb71bda90"/>
        <function-ref name="isOutput" scoped="" ref="0xb71bdb70"/>
        <function-ref name="get" scoped="" ref="0xb71bdc50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71bdd30"/>
        <function-ref name="set" scoped="" ref="0xb71bde10"/>
        <function-ref name="clr" scoped="" ref="0xb71bdef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb71bb410" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb71bb410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71bb5e8"/>
        <function-ref name="isInput" scoped="" ref="0xb71bb6c8"/>
        <function-ref name="toggle" scoped="" ref="0xb71bb7a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71bb888"/>
        <function-ref name="get" scoped="" ref="0xb71bb968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71bba48"/>
        <function-ref name="set" scoped="" ref="0xb71bbb28"/>
        <function-ref name="clr" scoped="" ref="0xb71bbc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb71b9170" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb71b9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71b9348"/>
        <function-ref name="isInput" scoped="" ref="0xb71b9428"/>
        <function-ref name="toggle" scoped="" ref="0xb71b9508"/>
        <function-ref name="isOutput" scoped="" ref="0xb71b95e8"/>
        <function-ref name="get" scoped="" ref="0xb71b96c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71b97a8"/>
        <function-ref name="set" scoped="" ref="0xb71b9888"/>
        <function-ref name="clr" scoped="" ref="0xb71b9968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb71bc090" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb71bc090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71bc268"/>
        <function-ref name="isInput" scoped="" ref="0xb71bc348"/>
        <function-ref name="toggle" scoped="" ref="0xb71bc428"/>
        <function-ref name="isOutput" scoped="" ref="0xb71bc508"/>
        <function-ref name="get" scoped="" ref="0xb71bc5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71bc6c8"/>
        <function-ref name="set" scoped="" ref="0xb71bc7a8"/>
        <function-ref name="clr" scoped="" ref="0xb71bc888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb71bbd68" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb71bbd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71ba010"/>
        <function-ref name="isInput" scoped="" ref="0xb71ba0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71ba1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71ba2b0"/>
        <function-ref name="get" scoped="" ref="0xb71ba390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71ba470"/>
        <function-ref name="set" scoped="" ref="0xb71ba550"/>
        <function-ref name="clr" scoped="" ref="0xb71ba630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb71b9ac8" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb71b9ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71b9ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb71b9d80"/>
        <function-ref name="toggle" scoped="" ref="0xb71b9e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb71b8010"/>
        <function-ref name="get" scoped="" ref="0xb71b80f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71b81d0"/>
        <function-ref name="set" scoped="" ref="0xb71b82b0"/>
        <function-ref name="clr" scoped="" ref="0xb71b8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb626a418" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb626a418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb626a5f0"/>
        <function-ref name="isInput" scoped="" ref="0xb626a6d0"/>
        <function-ref name="toggle" scoped="" ref="0xb626a7b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb626a890"/>
        <function-ref name="get" scoped="" ref="0xb626a970"/>
        <function-ref name="makeOutput" scoped="" ref="0xb626aa50"/>
        <function-ref name="set" scoped="" ref="0xb626ab30"/>
        <function-ref name="clr" scoped="" ref="0xb626ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6269de0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6269de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6268010"/>
        <function-ref name="isInput" scoped="" ref="0xb62680f0"/>
        <function-ref name="toggle" scoped="" ref="0xb62681d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb62682b0"/>
        <function-ref name="get" scoped="" ref="0xb6268390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6268470"/>
        <function-ref name="set" scoped="" ref="0xb6268550"/>
        <function-ref name="clr" scoped="" ref="0xb6268630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb62677f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb62677f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62679d0"/>
        <function-ref name="isInput" scoped="" ref="0xb6267ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb6267b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb6267c70"/>
        <function-ref name="get" scoped="" ref="0xb6267d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6267e30"/>
        <function-ref name="set" scoped="" ref="0xb6267f10"/>
        <function-ref name="clr" scoped="" ref="0xb6266010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6265228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6265228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6265400"/>
        <function-ref name="isInput" scoped="" ref="0xb62654e0"/>
        <function-ref name="toggle" scoped="" ref="0xb62655c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb62656a0"/>
        <function-ref name="get" scoped="" ref="0xb6265780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6265860"/>
        <function-ref name="set" scoped="" ref="0xb6265940"/>
        <function-ref name="clr" scoped="" ref="0xb6265a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6264c08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6264c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6264de0"/>
        <function-ref name="isInput" scoped="" ref="0xb6264ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb6262010"/>
        <function-ref name="isOutput" scoped="" ref="0xb62620f0"/>
        <function-ref name="get" scoped="" ref="0xb62621d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62622b0"/>
        <function-ref name="set" scoped="" ref="0xb6262390"/>
        <function-ref name="clr" scoped="" ref="0xb6262470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb62616c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb62616c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6261898"/>
        <function-ref name="isInput" scoped="" ref="0xb6261978"/>
        <function-ref name="toggle" scoped="" ref="0xb6261a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb6261b38"/>
        <function-ref name="get" scoped="" ref="0xb6261c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6261cf8"/>
        <function-ref name="set" scoped="" ref="0xb6261dd8"/>
        <function-ref name="clr" scoped="" ref="0xb6261eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb625f0b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb625f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb625f288"/>
        <function-ref name="isInput" scoped="" ref="0xb625f368"/>
        <function-ref name="toggle" scoped="" ref="0xb625f448"/>
        <function-ref name="isOutput" scoped="" ref="0xb625f528"/>
        <function-ref name="get" scoped="" ref="0xb625f608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb625f6e8"/>
        <function-ref name="set" scoped="" ref="0xb625f7c8"/>
        <function-ref name="clr" scoped="" ref="0xb625f8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb625ea88" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb625ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb625ec60"/>
        <function-ref name="isInput" scoped="" ref="0xb625ed40"/>
        <function-ref name="toggle" scoped="" ref="0xb625ee20"/>
        <function-ref name="isOutput" scoped="" ref="0xb625ef00"/>
        <function-ref name="get" scoped="" ref="0xb625d010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb625d0f0"/>
        <function-ref name="set" scoped="" ref="0xb625d1d0"/>
        <function-ref name="clr" scoped="" ref="0xb625d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb71b3410" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb71b3410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71b35e8"/>
        <function-ref name="isInput" scoped="" ref="0xb71b36c8"/>
        <function-ref name="toggle" scoped="" ref="0xb71b37a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71b3888"/>
        <function-ref name="get" scoped="" ref="0xb71b3968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71b3a48"/>
        <function-ref name="set" scoped="" ref="0xb71b3b28"/>
        <function-ref name="clr" scoped="" ref="0xb71b3c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb71b1170" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb71b1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71b1348"/>
        <function-ref name="isInput" scoped="" ref="0xb71b1428"/>
        <function-ref name="toggle" scoped="" ref="0xb71b1508"/>
        <function-ref name="isOutput" scoped="" ref="0xb71b15e8"/>
        <function-ref name="get" scoped="" ref="0xb71b16c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71b17a8"/>
        <function-ref name="set" scoped="" ref="0xb71b1888"/>
        <function-ref name="clr" scoped="" ref="0xb71b1968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb71b4128" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb71b4128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71b4300"/>
        <function-ref name="isInput" scoped="" ref="0xb71b43e0"/>
        <function-ref name="toggle" scoped="" ref="0xb71b44c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71b45a0"/>
        <function-ref name="get" scoped="" ref="0xb71b4680"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71b4760"/>
        <function-ref name="set" scoped="" ref="0xb71b4840"/>
        <function-ref name="clr" scoped="" ref="0xb71b4920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb71b3d68" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb71b3d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71b2010"/>
        <function-ref name="isInput" scoped="" ref="0xb71b20f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71b21d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71b22b0"/>
        <function-ref name="get" scoped="" ref="0xb71b2390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71b2470"/>
        <function-ref name="set" scoped="" ref="0xb71b2550"/>
        <function-ref name="clr" scoped="" ref="0xb71b2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb71b1ac8" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb71b1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71b1ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb71b1d80"/>
        <function-ref name="toggle" scoped="" ref="0xb71b1e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb71b0010"/>
        <function-ref name="get" scoped="" ref="0xb71b00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71b01d0"/>
        <function-ref name="set" scoped="" ref="0xb71b02b0"/>
        <function-ref name="clr" scoped="" ref="0xb71b0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb71b4a80" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb71b4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71b4c58"/>
        <function-ref name="isInput" scoped="" ref="0xb71b4d38"/>
        <function-ref name="toggle" scoped="" ref="0xb71b4e18"/>
        <function-ref name="isOutput" scoped="" ref="0xb71b4ef8"/>
        <function-ref name="get" scoped="" ref="0xb71b3010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71b30f0"/>
        <function-ref name="set" scoped="" ref="0xb71b31d0"/>
        <function-ref name="clr" scoped="" ref="0xb71b32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb71b2790" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb71b2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71b2968"/>
        <function-ref name="isInput" scoped="" ref="0xb71b2a48"/>
        <function-ref name="toggle" scoped="" ref="0xb71b2b28"/>
        <function-ref name="isOutput" scoped="" ref="0xb71b2c08"/>
        <function-ref name="get" scoped="" ref="0xb71b2ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71b2dc8"/>
        <function-ref name="set" scoped="" ref="0xb71b2ea8"/>
        <function-ref name="clr" scoped="" ref="0xb71b1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb71b04f0" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb71b04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71b06c8"/>
        <function-ref name="isInput" scoped="" ref="0xb71b07a8"/>
        <function-ref name="toggle" scoped="" ref="0xb71b0888"/>
        <function-ref name="isOutput" scoped="" ref="0xb71b0968"/>
        <function-ref name="get" scoped="" ref="0xb71b0a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71b0b28"/>
        <function-ref name="set" scoped="" ref="0xb71b0c08"/>
        <function-ref name="clr" scoped="" ref="0xb71b0ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6235de8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6235de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6231010"/>
        <function-ref name="isInput" scoped="" ref="0xb62310f0"/>
        <function-ref name="toggle" scoped="" ref="0xb62311d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb62312b0"/>
        <function-ref name="get" scoped="" ref="0xb6231390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6231470"/>
        <function-ref name="set" scoped="" ref="0xb6231550"/>
        <function-ref name="clr" scoped="" ref="0xb6231630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb62307f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb62307f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb62309d0"/>
        <function-ref name="isInput" scoped="" ref="0xb6230ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb6230b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb6230c70"/>
        <function-ref name="get" scoped="" ref="0xb6230d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6230e30"/>
        <function-ref name="set" scoped="" ref="0xb6230f10"/>
        <function-ref name="clr" scoped="" ref="0xb622f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb622e228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb622e228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb622e400"/>
        <function-ref name="isInput" scoped="" ref="0xb622e4e0"/>
        <function-ref name="toggle" scoped="" ref="0xb622e5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb622e6a0"/>
        <function-ref name="get" scoped="" ref="0xb622e780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb622e860"/>
        <function-ref name="set" scoped="" ref="0xb622e940"/>
        <function-ref name="clr" scoped="" ref="0xb622ea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb622dc08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb622dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb622dde0"/>
        <function-ref name="isInput" scoped="" ref="0xb622dec0"/>
        <function-ref name="toggle" scoped="" ref="0xb622c010"/>
        <function-ref name="isOutput" scoped="" ref="0xb622c0f0"/>
        <function-ref name="get" scoped="" ref="0xb622c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb622c2b0"/>
        <function-ref name="set" scoped="" ref="0xb622c390"/>
        <function-ref name="clr" scoped="" ref="0xb622c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb622b6c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb622b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb622b898"/>
        <function-ref name="isInput" scoped="" ref="0xb622b978"/>
        <function-ref name="toggle" scoped="" ref="0xb622ba58"/>
        <function-ref name="isOutput" scoped="" ref="0xb622bb38"/>
        <function-ref name="get" scoped="" ref="0xb622bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb622bcf8"/>
        <function-ref name="set" scoped="" ref="0xb622bdd8"/>
        <function-ref name="clr" scoped="" ref="0xb622beb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb62290b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb62290b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6229288"/>
        <function-ref name="isInput" scoped="" ref="0xb6229368"/>
        <function-ref name="toggle" scoped="" ref="0xb6229448"/>
        <function-ref name="isOutput" scoped="" ref="0xb6229528"/>
        <function-ref name="get" scoped="" ref="0xb6229608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62296e8"/>
        <function-ref name="set" scoped="" ref="0xb62297c8"/>
        <function-ref name="clr" scoped="" ref="0xb62298a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6228a88" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6228a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6228c60"/>
        <function-ref name="isInput" scoped="" ref="0xb6228d40"/>
        <function-ref name="toggle" scoped="" ref="0xb6228e20"/>
        <function-ref name="isOutput" scoped="" ref="0xb6228f00"/>
        <function-ref name="get" scoped="" ref="0xb6227010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb62270f0"/>
        <function-ref name="set" scoped="" ref="0xb62271d0"/>
        <function-ref name="clr" scoped="" ref="0xb62272b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6226538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6226538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6226710"/>
        <function-ref name="isInput" scoped="" ref="0xb62267f0"/>
        <function-ref name="toggle" scoped="" ref="0xb62268d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb62269b0"/>
        <function-ref name="get" scoped="" ref="0xb6226a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6226b70"/>
        <function-ref name="set" scoped="" ref="0xb6226c50"/>
        <function-ref name="clr" scoped="" ref="0xb6226d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb71abe48" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb71abe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71aa050"/>
        <function-ref name="isInput" scoped="" ref="0xb71aa130"/>
        <function-ref name="toggle" scoped="" ref="0xb71aa210"/>
        <function-ref name="isOutput" scoped="" ref="0xb71aa2f0"/>
        <function-ref name="get" scoped="" ref="0xb71aa3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71aa4b0"/>
        <function-ref name="set" scoped="" ref="0xb71aa590"/>
        <function-ref name="clr" scoped="" ref="0xb71aa670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb71a9ac8" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb71a9ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71a9ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb71a9d80"/>
        <function-ref name="toggle" scoped="" ref="0xb71a9e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb71a8010"/>
        <function-ref name="get" scoped="" ref="0xb71a80f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71a81d0"/>
        <function-ref name="set" scoped="" ref="0xb71a82b0"/>
        <function-ref name="clr" scoped="" ref="0xb71a8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb71adb00" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb71adb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71adcd8"/>
        <function-ref name="isInput" scoped="" ref="0xb71addb8"/>
        <function-ref name="toggle" scoped="" ref="0xb71ade98"/>
        <function-ref name="isOutput" scoped="" ref="0xb71ab010"/>
        <function-ref name="get" scoped="" ref="0xb71ab0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71ab1d0"/>
        <function-ref name="set" scoped="" ref="0xb71ab2b0"/>
        <function-ref name="clr" scoped="" ref="0xb71ab390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb71aa7d0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb71aa7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71aa9a8"/>
        <function-ref name="isInput" scoped="" ref="0xb71aaa88"/>
        <function-ref name="toggle" scoped="" ref="0xb71aab68"/>
        <function-ref name="isOutput" scoped="" ref="0xb71aac48"/>
        <function-ref name="get" scoped="" ref="0xb71aad28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71aae08"/>
        <function-ref name="set" scoped="" ref="0xb71aaee8"/>
        <function-ref name="clr" scoped="" ref="0xb71a9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb71a84f0" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb71a84f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71a86c8"/>
        <function-ref name="isInput" scoped="" ref="0xb71a87a8"/>
        <function-ref name="toggle" scoped="" ref="0xb71a8888"/>
        <function-ref name="isOutput" scoped="" ref="0xb71a8968"/>
        <function-ref name="get" scoped="" ref="0xb71a8a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71a8b28"/>
        <function-ref name="set" scoped="" ref="0xb71a8c08"/>
        <function-ref name="clr" scoped="" ref="0xb71a8ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb71ab4f0" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb71ab4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71ab6c8"/>
        <function-ref name="isInput" scoped="" ref="0xb71ab7a8"/>
        <function-ref name="toggle" scoped="" ref="0xb71ab888"/>
        <function-ref name="isOutput" scoped="" ref="0xb71ab968"/>
        <function-ref name="get" scoped="" ref="0xb71aba48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71abb28"/>
        <function-ref name="set" scoped="" ref="0xb71abc08"/>
        <function-ref name="clr" scoped="" ref="0xb71abce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb71a9170" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb71a9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71a9348"/>
        <function-ref name="isInput" scoped="" ref="0xb71a9428"/>
        <function-ref name="toggle" scoped="" ref="0xb71a9508"/>
        <function-ref name="isOutput" scoped="" ref="0xb71a95e8"/>
        <function-ref name="get" scoped="" ref="0xb71a96c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71a97a8"/>
        <function-ref name="set" scoped="" ref="0xb71a9888"/>
        <function-ref name="clr" scoped="" ref="0xb71a9968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb71a8e48" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb71a8e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71a7050"/>
        <function-ref name="isInput" scoped="" ref="0xb71a7130"/>
        <function-ref name="toggle" scoped="" ref="0xb71a7210"/>
        <function-ref name="isOutput" scoped="" ref="0xb71a72f0"/>
        <function-ref name="get" scoped="" ref="0xb71a73d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71a74b0"/>
        <function-ref name="set" scoped="" ref="0xb71a7590"/>
        <function-ref name="clr" scoped="" ref="0xb71a7670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb61fa938" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb61fa938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61fab10"/>
        <function-ref name="isInput" scoped="" ref="0xb61fabf0"/>
        <function-ref name="toggle" scoped="" ref="0xb61facd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb61fadb0"/>
        <function-ref name="get" scoped="" ref="0xb61fae90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61f9010"/>
        <function-ref name="set" scoped="" ref="0xb61f90f0"/>
        <function-ref name="clr" scoped="" ref="0xb61f91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb61f83b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb61f83b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61f8588"/>
        <function-ref name="isInput" scoped="" ref="0xb61f8668"/>
        <function-ref name="toggle" scoped="" ref="0xb61f8748"/>
        <function-ref name="isOutput" scoped="" ref="0xb61f8828"/>
        <function-ref name="get" scoped="" ref="0xb61f8908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61f89e8"/>
        <function-ref name="set" scoped="" ref="0xb61f8ac8"/>
        <function-ref name="clr" scoped="" ref="0xb61f8ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb61f7d70" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb61f7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61f6010"/>
        <function-ref name="isInput" scoped="" ref="0xb61f60f0"/>
        <function-ref name="toggle" scoped="" ref="0xb61f61d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb61f62b0"/>
        <function-ref name="get" scoped="" ref="0xb61f6390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61f6470"/>
        <function-ref name="set" scoped="" ref="0xb61f6550"/>
        <function-ref name="clr" scoped="" ref="0xb61f6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb61f57f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb61f57f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61f59d0"/>
        <function-ref name="isInput" scoped="" ref="0xb61f5ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb61f5b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb61f5c70"/>
        <function-ref name="get" scoped="" ref="0xb61f5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61f5e30"/>
        <function-ref name="set" scoped="" ref="0xb61f5f10"/>
        <function-ref name="clr" scoped="" ref="0xb61f3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb61f2228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb61f2228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61f2400"/>
        <function-ref name="isInput" scoped="" ref="0xb61f24e0"/>
        <function-ref name="toggle" scoped="" ref="0xb61f25c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb61f26a0"/>
        <function-ref name="get" scoped="" ref="0xb61f2780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61f2860"/>
        <function-ref name="set" scoped="" ref="0xb61f2940"/>
        <function-ref name="clr" scoped="" ref="0xb61f2a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb61f1c08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb61f1c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61f1de0"/>
        <function-ref name="isInput" scoped="" ref="0xb61f1ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb61f0010"/>
        <function-ref name="isOutput" scoped="" ref="0xb61f00f0"/>
        <function-ref name="get" scoped="" ref="0xb61f01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61f02b0"/>
        <function-ref name="set" scoped="" ref="0xb61f0390"/>
        <function-ref name="clr" scoped="" ref="0xb61f0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb61ef6c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb61ef6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61ef898"/>
        <function-ref name="isInput" scoped="" ref="0xb61ef978"/>
        <function-ref name="toggle" scoped="" ref="0xb61efa58"/>
        <function-ref name="isOutput" scoped="" ref="0xb61efb38"/>
        <function-ref name="get" scoped="" ref="0xb61efc18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61efcf8"/>
        <function-ref name="set" scoped="" ref="0xb61efdd8"/>
        <function-ref name="clr" scoped="" ref="0xb61efeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb61ed0b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb61ed0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb61ed288"/>
        <function-ref name="isInput" scoped="" ref="0xb61ed368"/>
        <function-ref name="toggle" scoped="" ref="0xb61ed448"/>
        <function-ref name="isOutput" scoped="" ref="0xb61ed528"/>
        <function-ref name="get" scoped="" ref="0xb61ed608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb61ed6e8"/>
        <function-ref name="set" scoped="" ref="0xb61ed7c8"/>
        <function-ref name="clr" scoped="" ref="0xb61ed8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71a3010" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71a3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71a31e8"/>
        <function-ref name="isInput" scoped="" ref="0xb71a32c8"/>
        <function-ref name="toggle" scoped="" ref="0xb71a33a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71a3488"/>
        <function-ref name="get" scoped="" ref="0xb71a3568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71a3648"/>
        <function-ref name="set" scoped="" ref="0xb71a3728"/>
        <function-ref name="clr" scoped="" ref="0xb71a3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71957b8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71957b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7195990"/>
        <function-ref name="isInput" scoped="" ref="0xb7195a70"/>
        <function-ref name="toggle" scoped="" ref="0xb7195b50"/>
        <function-ref name="isOutput" scoped="" ref="0xb7195c30"/>
        <function-ref name="get" scoped="" ref="0xb7195d10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7195df0"/>
        <function-ref name="set" scoped="" ref="0xb7195ed0"/>
        <function-ref name="clr" scoped="" ref="0xb7194010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7191010" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7191010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71911e8"/>
        <function-ref name="isInput" scoped="" ref="0xb71912c8"/>
        <function-ref name="toggle" scoped="" ref="0xb71913a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7191488"/>
        <function-ref name="get" scoped="" ref="0xb7191568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7191648"/>
        <function-ref name="set" scoped="" ref="0xb7191728"/>
        <function-ref name="clr" scoped="" ref="0xb7191808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb718f7b8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb718f7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb718f990"/>
        <function-ref name="isInput" scoped="" ref="0xb718fa70"/>
        <function-ref name="toggle" scoped="" ref="0xb718fb50"/>
        <function-ref name="isOutput" scoped="" ref="0xb718fc30"/>
        <function-ref name="get" scoped="" ref="0xb718fd10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb718fdf0"/>
        <function-ref name="set" scoped="" ref="0xb718fed0"/>
        <function-ref name="clr" scoped="" ref="0xb718e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb718b010" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb718b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb718b1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb718b2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb718b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb718b488"/>
        <function-ref name="get" scoped="" ref="0xb718b568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb718b648"/>
        <function-ref name="set" scoped="" ref="0xb718b728"/>
        <function-ref name="clr" scoped="" ref="0xb718b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71897b8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71897b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7189990"/>
        <function-ref name="isInput" scoped="" ref="0xb7189a70"/>
        <function-ref name="toggle" scoped="" ref="0xb7189b50"/>
        <function-ref name="isOutput" scoped="" ref="0xb7189c30"/>
        <function-ref name="get" scoped="" ref="0xb7189d10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7189df0"/>
        <function-ref name="set" scoped="" ref="0xb7189ed0"/>
        <function-ref name="clr" scoped="" ref="0xb7188010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7186080" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7186080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7186258"/>
        <function-ref name="isInput" scoped="" ref="0xb7186338"/>
        <function-ref name="toggle" scoped="" ref="0xb7186418"/>
        <function-ref name="isOutput" scoped="" ref="0xb71864f8"/>
        <function-ref name="get" scoped="" ref="0xb71865d8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71866b8"/>
        <function-ref name="set" scoped="" ref="0xb7186798"/>
        <function-ref name="clr" scoped="" ref="0xb7186878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7183840" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7183840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7183a18"/>
        <function-ref name="isInput" scoped="" ref="0xb7183af8"/>
        <function-ref name="toggle" scoped="" ref="0xb7183bd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7183cb8"/>
        <function-ref name="get" scoped="" ref="0xb7183d98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7183e78"/>
        <function-ref name="set" scoped="" ref="0xb7182010"/>
        <function-ref name="clr" scoped="" ref="0xb71820f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71800b0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71800b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7180288"/>
        <function-ref name="isInput" scoped="" ref="0xb7180368"/>
        <function-ref name="toggle" scoped="" ref="0xb7180448"/>
        <function-ref name="isOutput" scoped="" ref="0xb7180528"/>
        <function-ref name="get" scoped="" ref="0xb7180608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71806e8"/>
        <function-ref name="set" scoped="" ref="0xb71807c8"/>
        <function-ref name="clr" scoped="" ref="0xb71808a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb717e880" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb717e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb717ea58"/>
        <function-ref name="isInput" scoped="" ref="0xb717eb38"/>
        <function-ref name="toggle" scoped="" ref="0xb717ec18"/>
        <function-ref name="isOutput" scoped="" ref="0xb717ecf8"/>
        <function-ref name="get" scoped="" ref="0xb717edd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb717eeb8"/>
        <function-ref name="set" scoped="" ref="0xb717d010"/>
        <function-ref name="clr" scoped="" ref="0xb717d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb717a0b0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb717a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb717a288"/>
        <function-ref name="isInput" scoped="" ref="0xb717a368"/>
        <function-ref name="toggle" scoped="" ref="0xb717a448"/>
        <function-ref name="isOutput" scoped="" ref="0xb717a528"/>
        <function-ref name="get" scoped="" ref="0xb717a608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb717a6e8"/>
        <function-ref name="set" scoped="" ref="0xb717a7c8"/>
        <function-ref name="clr" scoped="" ref="0xb717a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7178880" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7178880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7178a58"/>
        <function-ref name="isInput" scoped="" ref="0xb7178b38"/>
        <function-ref name="toggle" scoped="" ref="0xb7178c18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7178cf8"/>
        <function-ref name="get" scoped="" ref="0xb7178dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7178eb8"/>
        <function-ref name="set" scoped="" ref="0xb7177010"/>
        <function-ref name="clr" scoped="" ref="0xb71770f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71740b0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71740b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7174288"/>
        <function-ref name="isInput" scoped="" ref="0xb7174368"/>
        <function-ref name="toggle" scoped="" ref="0xb7174448"/>
        <function-ref name="isOutput" scoped="" ref="0xb7174528"/>
        <function-ref name="get" scoped="" ref="0xb7174608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71746e8"/>
        <function-ref name="set" scoped="" ref="0xb71747c8"/>
        <function-ref name="clr" scoped="" ref="0xb71748a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7172880" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7172880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7172a58"/>
        <function-ref name="isInput" scoped="" ref="0xb7172b38"/>
        <function-ref name="toggle" scoped="" ref="0xb7172c18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7172cf8"/>
        <function-ref name="get" scoped="" ref="0xb7172dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7172eb8"/>
        <function-ref name="set" scoped="" ref="0xb7171010"/>
        <function-ref name="clr" scoped="" ref="0xb71710f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7155bf8" loc="61:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7155bf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb73917d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb73917d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7155dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb7153010" loc="62:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7153010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb71531e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb71532c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb71533a8"/>
        <function-ref name="actualMicro" scoped="" ref="0xb7153488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb7153568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb7142808" loc="60:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb7142808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb71429e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb7237a28" loc="57:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7237a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7237c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0xb7142400" loc="59:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7142400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb71425d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0xb7237dc0" loc="58:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7237dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7142010"/>
        <function-ref name="taskLoop" scoped="" ref="0xb71420f0"/>
        <function-ref name="runNextTask" scoped="" ref="0xb71421d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb7370d58" loc="48:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb7370d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7377010"/>
        <function-ref name="runTask" scoped="" ref="0xb73770f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb73755f0" loc="47:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb73755f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb73757c8"/>
        <function-ref name="taskLoop" scoped="" ref="0xb73758a8"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7375988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb72fb100" loc="56:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb72fb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb72fb2d8"/>
        <function-ref name="runTask" scoped="" ref="0xb72fb3b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0xb72fbd68" loc="57:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb72fbd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb72fa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb72fc8a8" loc="55:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb72fc8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72fca80"/>
        <function-ref name="taskLoop" scoped="" ref="0xb72fcb60"/>
        <function-ref name="runNextTask" scoped="" ref="0xb72fcc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0xb72e7218" loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb72e7218"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb72e73f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0xb7376728" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb7376728"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb7376900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0xb72e9420" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb72e9420"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb72e95f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb7236e78" loc="46:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7236e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7157070"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7157150"/>
        <function-ref name="led1On" scoped="" ref="0xb7157230"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7157310"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb71573f0"/>
        <function-ref name="get" scoped="" ref="0xb71574d0"/>
        <function-ref name="led1Off" scoped="" ref="0xb71575b0"/>
        <function-ref name="led2Off" scoped="" ref="0xb7157930"/>
        <function-ref name="set" scoped="" ref="0xb7157690"/>
        <function-ref name="led0On" scoped="" ref="0xb7157770"/>
        <function-ref name="led2On" scoped="" ref="0xb7157850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0xb7137240" loc="50:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb7137240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7137418"/>
        <function-ref name="isInput" scoped="" ref="0xb71374f8"/>
        <function-ref name="toggle" scoped="" ref="0xb71375d8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71376b8"/>
        <function-ref name="get" scoped="" ref="0xb7137798"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7137878"/>
        <function-ref name="set" scoped="" ref="0xb7137958"/>
        <function-ref name="clr" scoped="" ref="0xb7137a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb71381d8" loc="46:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb71381d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb71383b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0xb7137c28" loc="51:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb7137c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7137e00"/>
        <function-ref name="isInput" scoped="" ref="0xb7137ee0"/>
        <function-ref name="toggle" scoped="" ref="0xb7136010"/>
        <function-ref name="isOutput" scoped="" ref="0xb71360f0"/>
        <function-ref name="get" scoped="" ref="0xb71361d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71362b0"/>
        <function-ref name="set" scoped="" ref="0xb7136390"/>
        <function-ref name="clr" scoped="" ref="0xb7136470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb7138520" loc="47:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7138520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb71386f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb71387d8"/>
        <function-ref name="led1On" scoped="" ref="0xb71388b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7138998"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7138a78"/>
        <function-ref name="get" scoped="" ref="0xb7138b58"/>
        <function-ref name="led1Off" scoped="" ref="0xb7138c38"/>
        <function-ref name="led2Off" scoped="" ref="0xb7137010"/>
        <function-ref name="set" scoped="" ref="0xb7138d18"/>
        <function-ref name="led0On" scoped="" ref="0xb7138df8"/>
        <function-ref name="led2On" scoped="" ref="0xb7138ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0xb7136660" loc="52:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb7136660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7136838"/>
        <function-ref name="isInput" scoped="" ref="0xb7136918"/>
        <function-ref name="toggle" scoped="" ref="0xb71369f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7136ad8"/>
        <function-ref name="get" scoped="" ref="0xb7136bb8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7136c98"/>
        <function-ref name="set" scoped="" ref="0xb7136d78"/>
        <function-ref name="clr" scoped="" ref="0xb7136e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0xb7126a70" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb7126a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7126c48"/>
        <function-ref name="isInput" scoped="" ref="0xb7126d28"/>
        <function-ref name="toggle" scoped="" ref="0xb7126e08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7126ee8"/>
        <function-ref name="get" scoped="" ref="0xb7125010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71250f0"/>
        <function-ref name="set" scoped="" ref="0xb71251d0"/>
        <function-ref name="clr" scoped="" ref="0xb71252b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0xb71254c0" loc="45:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb71254c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7125698"/>
        <function-ref name="isInput" scoped="" ref="0xb7125778"/>
        <function-ref name="toggle" scoped="" ref="0xb7125858"/>
        <function-ref name="isOutput" scoped="" ref="0xb7125938"/>
        <function-ref name="get" scoped="" ref="0xb7125a18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7125af8"/>
        <function-ref name="set" scoped="" ref="0xb7125bd8"/>
        <function-ref name="clr" scoped="" ref="0xb7125cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0xb7124870" loc="47:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7124870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7124a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0xb7125ec8" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb7125ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71240c0"/>
        <function-ref name="isInput" scoped="" ref="0xb71241a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7124280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7124360"/>
        <function-ref name="get" scoped="" ref="0xb7124440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7124520"/>
        <function-ref name="set" scoped="" ref="0xb7124600"/>
        <function-ref name="clr" scoped="" ref="0xb71246e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb723c958" loc="41:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb723c958"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb723cb30"/>
        <function-ref name="stopDone" scoped="" ref="0xb723cc10"/>
        <function-ref name="start" scoped="" ref="0xb723ccf0"/>
        <function-ref name="stop" scoped="" ref="0xb723cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb7115b18" loc="46:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb7115b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb7115cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7111af0" loc="48:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7111af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7111cc8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7111da8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7111e88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7117010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb71170f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7118388" loc="43:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7118388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7118560"/>
        <function-ref name="getPayload" scoped="" ref="0xb7118640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7118720"/>
        <function-ref name="cancel" scoped="" ref="0xb7118800"/>
        <function-ref name="sendDone" scoped="" ref="0xb71188e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb711f3f8" loc="45:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb711f3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb711f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb70fe830" loc="52:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb70fe830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb70fea08"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb70feae8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb70febc8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb70feca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7118d48" loc="44:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7118d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7118f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb7102b10" loc="51:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7102b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb7102ce8"/>
        <function-ref name="noAck" scoped="" ref="0xb7102dc8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb7102ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb70f81b8" loc="53:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb70f81b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb70f8390"/>
        <function-ref name="setRetries" scoped="" ref="0xb70f8470"/>
        <function-ref name="getRetries" scoped="" ref="0xb70f8550"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb70f8630"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb70f8710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7106990" loc="49:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7106990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7106b68"/>
        <function-ref name="source" scoped="" ref="0xb7106c48"/>
        <function-ref name="address" scoped="" ref="0xb7106d28"/>
        <function-ref name="destination" scoped="" ref="0xb7106e08"/>
        <function-ref name="setSource" scoped="" ref="0xb7106ee8"/>
        <function-ref name="setDestination" scoped="" ref="0xb7116010"/>
        <function-ref name="type" scoped="" ref="0xb71160f0"/>
        <function-ref name="setType" scoped="" ref="0xb71161d0"/>
        <function-ref name="isForMe" scoped="" ref="0xb71162b0"/>
        <function-ref name="setGroup" scoped="" ref="0xb7116390"/>
        <function-ref name="localGroup" scoped="" ref="0xb7116470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb70f9b10" loc="54:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb70f9b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb70f9ce8"/>
        <function-ref name="setChannel" scoped="" ref="0xb70f9dc8"/>
        <function-ref name="getChannel" scoped="" ref="0xb70f9ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0xb70f24a0" loc="56:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xb70f24a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7326010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7101010"/>
        <function-ref name="clear" scoped="" ref="0xb71013c0"/>
        <function-ref name="isValid" scoped="" ref="0xb70f2bf0"/>
        <function-ref name="set" scoped="" ref="0xb7101770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb7101ea8" loc="57:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7101ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb70f3ab0"/>
        <function-ref name="clear" scoped="" ref="0xb70f3e60"/>
        <function-ref name="isValid" scoped="" ref="0xb70f3700"/>
        <function-ref name="set" scoped="" ref="0xb70f1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb70f1ca8" loc="45:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb70f1ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb70f1e80"/>
        <function-ref name="stopDone" scoped="" ref="0xb70ee010"/>
        <function-ref name="start" scoped="" ref="0xb70ee0f0"/>
        <function-ref name="stop" scoped="" ref="0xb70ee1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb70e14d8" loc="66:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb70e14d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb70e00b8"/>
        <function-ref name="get" scoped="" ref="0xb70e1de0"/>
        <function-ref name="isSet" scoped="" ref="0xb70e1b20"/>
        <function-ref name="set" scoped="" ref="0xb70e0378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb70def20" loc="71:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb70def20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb70d9a38"/>
        <function-ref name="clear" scoped="" ref="0xb70d9de8"/>
        <function-ref name="isValid" scoped="" ref="0xb70d9688"/>
        <function-ref name="set" scoped="" ref="0xb70d81b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb70ecd20" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb70ecd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb70ecef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb70ebe70" loc="56:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb70ebe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb70ea070"/>
        <function-ref name="payloadLength" scoped="" ref="0xb70ea150"/>
        <function-ref name="getPayload" scoped="" ref="0xb70ea230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb70ea310"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb70ea3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb70ee630" loc="47:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb70ee630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb70ee808"/>
        <function-ref name="getPayload" scoped="" ref="0xb70ee8e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb70ee9c8"/>
        <function-ref name="cancel" scoped="" ref="0xb70eeaa8"/>
        <function-ref name="sendDone" scoped="" ref="0xb70eeb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb70ec6a8" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb70ec6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb70ec880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb70e60f0" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb70e60f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb70e6cb8"/>
        <function-ref name="get" scoped="" ref="0xb70e69f8"/>
        <function-ref name="isSet" scoped="" ref="0xb70e6738"/>
        <function-ref name="set" scoped="" ref="0xb70e1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb70e9898" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb70e9898"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb70e9a70"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb70e9b50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb70e9c30"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb70e9d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb70ec010" loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb70ec010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb70ec1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb70df560" loc="70:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb70df560"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb728ad68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb70de088"/>
        <function-ref name="clear" scoped="" ref="0xb70de438"/>
        <function-ref name="isValid" scoped="" ref="0xb70dfcb0"/>
        <function-ref name="set" scoped="" ref="0xb70de7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb70db950" loc="69:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb70db950"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb728ad68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb70df010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb70e3c68" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb70e3c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb70e7868"/>
        <function-ref name="get" scoped="" ref="0xb70e75a8"/>
        <function-ref name="isSet" scoped="" ref="0xb70e72e8"/>
        <function-ref name="set" scoped="" ref="0xb70e7b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb70e9310" loc="59:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb70e9310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb70e94e8"/>
        <function-ref name="noAck" scoped="" ref="0xb70e95c8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb70e96a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb70eb438" loc="53:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb70eb438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb70eb610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb70e9eb8" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb70e9eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb70e80c0"/>
        <function-ref name="setRetries" scoped="" ref="0xb70e81a0"/>
        <function-ref name="getRetries" scoped="" ref="0xb70e8280"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb70e8360"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb70e8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb70ea588" loc="57:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb70ea588"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb70ea760"/>
        <function-ref name="source" scoped="" ref="0xb70ea840"/>
        <function-ref name="address" scoped="" ref="0xb70ea920"/>
        <function-ref name="destination" scoped="" ref="0xb70eaa00"/>
        <function-ref name="setSource" scoped="" ref="0xb70eaae0"/>
        <function-ref name="setDestination" scoped="" ref="0xb70eabc0"/>
        <function-ref name="type" scoped="" ref="0xb70eaca0"/>
        <function-ref name="setType" scoped="" ref="0xb70ead80"/>
        <function-ref name="isForMe" scoped="" ref="0xb70eae60"/>
        <function-ref name="setGroup" scoped="" ref="0xb70e9010"/>
        <function-ref name="localGroup" scoped="" ref="0xb70e90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb70e8600" loc="62:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb70e8600"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb70e8858"/>
        <function-ref name="setChannel" scoped="" ref="0xb70e8938"/>
        <function-ref name="getChannel" scoped="" ref="0xb70e8a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb70dd790" loc="67:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb70dd790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb70dd968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb70ebb18" loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb70ebb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb70ebcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb70d8b70" loc="41:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb70d8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb70d8d48"/>
        <function-ref name="stopDone" scoped="" ref="0xb70d8e28"/>
        <function-ref name="start" scoped="" ref="0xb70d8f08"/>
        <function-ref name="stop" scoped="" ref="0xb70d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb70bef08" loc="90:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb70bef08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb70bdaf8"/>
        <function-ref name="get" scoped="" ref="0xb70bd838"/>
        <function-ref name="isSet" scoped="" ref="0xb70bd578"/>
        <function-ref name="set" scoped="" ref="0xb70bddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0xb70cf0c8" loc="70:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0xb70cf0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb70cf2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0xb70c77d8" loc="72:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0xb70c77d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb70c7a30"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb70c7b10"/>
        <function-ref name="request" scoped="" ref="0xb70c7bf0"/>
        <function-ref name="granted" scoped="" ref="0xb70c7cd0"/>
        <function-ref name="isOwner" scoped="" ref="0xb70c7db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb70d4b88" loc="57:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb70d4b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb70d4d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb70d5470" loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb70d5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb70d5648"/>
        <function-ref name="getPayload" scoped="" ref="0xb70d5728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb70d5808"/>
        <function-ref name="cancel" scoped="" ref="0xb70d58e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb70d59c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb70d4510" loc="56:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb70d4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb70d46e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb70c29c0" loc="74:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb70c29c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xb70c2b98"/>
        <function-ref name="address" scoped="" ref="0xb70c2c78"/>
        <function-ref name="destination" scoped="" ref="0xb70c2d58"/>
        <function-ref name="setSource" scoped="" ref="0xb70c2e38"/>
        <function-ref name="setDestination" scoped="" ref="0xb70c2f18"/>
        <function-ref name="pan" scoped="" ref="0xb70ca010"/>
        <function-ref name="setPan" scoped="" ref="0xb70ca0f0"/>
        <function-ref name="isForMe" scoped="" ref="0xb70ca1d0"/>
        <function-ref name="localPan" scoped="" ref="0xb70ca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0xb70ca538" loc="75:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0xb70ca538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb70ca710"/>
        <function-ref name="payloadLength" scoped="" ref="0xb70ca7f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb70ca8d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb70ca9b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb70caa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb70c0ae8" loc="89:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb70c0ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb70be780"/>
        <function-ref name="get" scoped="" ref="0xb70be4c0"/>
        <function-ref name="isSet" scoped="" ref="0xb70be200"/>
        <function-ref name="set" scoped="" ref="0xb70bea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb70c62e0" loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb70c62e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb70c64b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb70c6598"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb70c6678"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb70c6758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0xb70d1a70" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0xb70d1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb70d1c48"/>
        <function-ref name="payloadLength" scoped="" ref="0xb70d1d28"/>
        <function-ref name="getPayload" scoped="" ref="0xb70d1e08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb70d1ee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb70d0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb70d5e30" loc="55:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb70d5e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb70d4050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb70ba260" loc="94:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb70ba260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb728ad68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb70bae60"/>
        <function-ref name="clear" scoped="" ref="0xb70b9230"/>
        <function-ref name="isValid" scoped="" ref="0xb70baab0"/>
        <function-ref name="set" scoped="" ref="0xb70b95e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb70bb678" loc="93:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb70bb678"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb728ad68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb70bbcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb70c1730" loc="88:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb70c1730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb70c0308"/>
        <function-ref name="get" scoped="" ref="0xb70c0048"/>
        <function-ref name="isSet" scoped="" ref="0xb70c1d78"/>
        <function-ref name="set" scoped="" ref="0xb70c05c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb70cacb0" loc="78:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb70cacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb70cae88"/>
        <function-ref name="noAck" scoped="" ref="0xb70c6010"/>
        <function-ref name="wasAcked" scoped="" ref="0xb70c60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xb70cb458" loc="68:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xb70cb458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb70cb630"/>
        <function-ref name="getPayload" scoped="" ref="0xb70cb710"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb70cb7f0"/>
        <function-ref name="cancel" scoped="" ref="0xb70cb8d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb70cb9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb70d32a8" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb70d32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb70d3480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb70c6900" loc="80:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb70c6900"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb70c6ad8"/>
        <function-ref name="setRetries" scoped="" ref="0xb70c6bb8"/>
        <function-ref name="getRetries" scoped="" ref="0xb70c6c98"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb70c6d78"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb70c6e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb70c1040" loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb70c1040"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb70c1218"/>
        <function-ref name="setChannel" scoped="" ref="0xb70c12f8"/>
        <function-ref name="getChannel" scoped="" ref="0xb70c13d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb70d3cf8" loc="63:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb70d3cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb70d3ed0"/>
        <function-ref name="source" scoped="" ref="0xb70d1010"/>
        <function-ref name="address" scoped="" ref="0xb70d10f0"/>
        <function-ref name="destination" scoped="" ref="0xb70d11d0"/>
        <function-ref name="setSource" scoped="" ref="0xb70d12b0"/>
        <function-ref name="setDestination" scoped="" ref="0xb70d1390"/>
        <function-ref name="type" scoped="" ref="0xb70d1470"/>
        <function-ref name="setType" scoped="" ref="0xb70d1550"/>
        <function-ref name="isForMe" scoped="" ref="0xb70d1630"/>
        <function-ref name="setGroup" scoped="" ref="0xb70d1710"/>
        <function-ref name="localGroup" scoped="" ref="0xb70d17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb70b9d18" loc="95:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb70b9d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb70b7828"/>
        <function-ref name="clear" scoped="" ref="0xb70b7bd8"/>
        <function-ref name="isValid" scoped="" ref="0xb70b7478"/>
        <function-ref name="set" scoped="" ref="0xb70b6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xb70cbbe8" loc="69:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xb70cbbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb70cbdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb70bb180" loc="91:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb70bb180"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb70bb358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb70d3988" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb70d3988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb70d3b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0xb70b5518" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="RF230RadioC.TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb70b5518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb70b56f0"/>
        <function-ref name="suspend" scoped="" ref="0xb70b57d0"/>
        <function-ref name="resume" scoped="" ref="0xb70b58b0"/>
        <function-ref name="run" scoped="" ref="0xb70b5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0xb709a010" loc="51:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0xb709a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb709a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0xb709eb90" loc="47:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xb709eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0xb709ed68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0xb7090068" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0xb7090068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7090240"/>
        <function-ref name="checkFrame" scoped="" ref="0xb7090320"/>
        <function-ref name="source" scoped="" ref="0xb7090400"/>
        <function-ref name="destination" scoped="" ref="0xb70904e0"/>
        <function-ref name="setSource" scoped="" ref="0xb70905c0"/>
        <function-ref name="setDestination" scoped="" ref="0xb70906a0"/>
        <function-ref name="setGroup" scoped="" ref="0xb7090780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0xb7095568" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0xb7095568"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0xb7095740"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0xb7095820"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0xb7095900"/>
        <function-ref name="getTransmitTime" scoped="" ref="0xb70959e0"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0xb7095ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb707f010" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb707f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb707f1e8"/>
        <function-ref name="wait" scoped="" ref="0xb707f2c8"/>
        <function-ref name="cancel" scoped="" ref="0xb707f3a8"/>
        <function-ref name="isFree" scoped="" ref="0xb707f488"/>
        <function-ref name="getNow" scoped="" ref="0xb707f568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0xb7078260" loc="62:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0xb7078260"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7078438"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7078518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb70785f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb70786d8"/>
        <function-ref name="headerLength" scoped="" ref="0xb70787b8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb7078898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb7078c28" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb7078c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb728ad68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb707e7c0"/>
        <function-ref name="clear" scoped="" ref="0xb707eb70"/>
        <function-ref name="isValid" scoped="" ref="0xb707e410"/>
        <function-ref name="set" scoped="" ref="0xb707ef20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0xb70a5540" loc="43:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0xb70a5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb70a5718"/>
        <function-ref name="headerLength" scoped="" ref="0xb70a57f8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb70a58d8"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xb70a59b8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb70a5a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0xb70a4e68" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0xb70a4e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0xb709e050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0xb70a07e8" loc="44:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb70a07e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb70a09c0"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb70a0aa0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb70a0b80"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb70a0c60"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb70a0d40"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb70a0e20"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb70a0f00"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb70a7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0xb7080a38" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb7080a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb7080c10"/>
        <function-ref name="getDSN" scoped="" ref="0xb7080cf0"/>
        <function-ref name="setFCF" scoped="" ref="0xb7080dd0"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb7080eb0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb7097010"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb70970f0"/>
        <function-ref name="setDSN" scoped="" ref="0xb70971d0"/>
        <function-ref name="createAckReply" scoped="" ref="0xb70972b0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb7097390"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb7097470"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb7097550"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb7097630"/>
        <function-ref name="localAddr" scoped="" ref="0xb7097710"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb7097870"/>
        <function-ref name="localPan" scoped="" ref="0xb7097950"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb7097a30"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb7097b10"/>
        <function-ref name="setFramePending" scoped="" ref="0xb7097bf0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb7097cd0"/>
        <function-ref name="isForMe" scoped="" ref="0xb7097db0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb7097e90"/>
        <function-ref name="getFCF" scoped="" ref="0xb708e010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb708e0f0"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb708e1d0"/>
        <function-ref name="getFramePending" scoped="" ref="0xb708e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0xb709df10" loc="45:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xb709df10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb70a4108"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb70a41e8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb70a42c8"/>
        <function-ref name="getSender" scoped="" ref="0xb70a43a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0xb7098c58" loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0xb7098c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb7098e30"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb7098f10"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb709b010"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb709b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xb7045698" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb7045698"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb7045880"/>
        <function-ref name="wait" scoped="" ref="0xb7045960"/>
        <function-ref name="cancel" scoped="" ref="0xb7045a40"/>
        <function-ref name="isFree" scoped="" ref="0xb7045b20"/>
        <function-ref name="getNow" scoped="" ref="0xb7045c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb70435d0" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb70435d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb73917d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb73917d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb728ad68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb7288048"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7027ab8"/>
        <function-ref name="fired" scoped="" ref="0xb7027288"/>
        <function-ref name="startAt" scoped="" ref="0xb7027778"/>
        <function-ref name="isRunning" scoped="" ref="0xb7027500"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7027d30"/>
        <function-ref name="start" scoped="" ref="0xb7043d20"/>
        <function-ref name="stop" scoped="" ref="0xb7027010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb7045d70" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb7045d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb7043010"/>
        <function-ref name="suspend" scoped="" ref="0xb70430f0"/>
        <function-ref name="resume" scoped="" ref="0xb70431d0"/>
        <function-ref name="run" scoped="" ref="0xb70432b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xb616e7e8" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb616e7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb616e9d0"/>
        <function-ref name="wait" scoped="" ref="0xb616eab0"/>
        <function-ref name="cancel" scoped="" ref="0xb616eb90"/>
        <function-ref name="isFree" scoped="" ref="0xb616ec70"/>
        <function-ref name="getNow" scoped="" ref="0xb616ed50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb616c010" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb616c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb728ad68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb7288048"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb616a4e0"/>
        <function-ref name="fired" scoped="" ref="0xb616cc78"/>
        <function-ref name="startAt" scoped="" ref="0xb616a1a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb616cef0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb616a758"/>
        <function-ref name="start" scoped="" ref="0xb616c760"/>
        <function-ref name="stop" scoped="" ref="0xb616ca00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb616a968" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb616a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb616ab40"/>
        <function-ref name="suspend" scoped="" ref="0xb616ac20"/>
        <function-ref name="resume" scoped="" ref="0xb616ad00"/>
        <function-ref name="run" scoped="" ref="0xb616ade0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6fbe250" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6fbe250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6fbe428"/>
        <function-ref name="cancel" scoped="" ref="0xb6fbe508"/>
        <function-ref name="sendDone" scoped="" ref="0xb6fbe5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6fbe748" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6fbe748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6fbe920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6fc0ef0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6fc0ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6fbf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6fc1850" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6fc1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6fc1a28"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6fc1b08"/>
        <function-ref name="getPayload" scoped="" ref="0xb6fc1be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6fc1cc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6fc1da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6fc0010" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6fc0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6fc01f8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6fc02d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6fc03b8"/>
        <function-ref name="cancel" scoped="" ref="0xb6fc0498"/>
        <function-ref name="sendDone" scoped="" ref="0xb6fc0578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb6fc0b30" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb6fc0b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6fc0d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6fbfa40" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6fbfa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6fbfc18"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6fbfcf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6fbfdd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6fbfeb8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6fbe010"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6fbe0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6fbea80" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6fbea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6fbec58"/>
        <function-ref name="checkFrame" scoped="" ref="0xb6fbed38"/>
        <function-ref name="source" scoped="" ref="0xb6fbee18"/>
        <function-ref name="destination" scoped="" ref="0xb6fbeef8"/>
        <function-ref name="setSource" scoped="" ref="0xb6fbd010"/>
        <function-ref name="setDestination" scoped="" ref="0xb6fbd0f0"/>
        <function-ref name="setGroup" scoped="" ref="0xb6fbd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6fc0750" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6fc0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6fc0938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb6fbf2e8" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb6fbf2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6fbf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6fc2c28" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6fc2c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6fc2e00"/>
        <function-ref name="source" scoped="" ref="0xb6fc2ee0"/>
        <function-ref name="address" scoped="" ref="0xb6fc1010"/>
        <function-ref name="destination" scoped="" ref="0xb6fc10f0"/>
        <function-ref name="setSource" scoped="" ref="0xb6fc11d0"/>
        <function-ref name="setDestination" scoped="" ref="0xb6fc12b0"/>
        <function-ref name="type" scoped="" ref="0xb6fc1390"/>
        <function-ref name="setType" scoped="" ref="0xb6fc1470"/>
        <function-ref name="isForMe" scoped="" ref="0xb6fc1550"/>
        <function-ref name="setGroup" scoped="" ref="0xb6fc1630"/>
        <function-ref name="localGroup" scoped="" ref="0xb6fc1710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb6fbf6c8" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb6fbf6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6fbf8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6152528" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6152528"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6152700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6152030" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6152030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6152208"/>
        <function-ref name="cancel" scoped="" ref="0xb61522e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb61523c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6154d08" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6154d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6154ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6155690" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6155690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6155868"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6155948"/>
        <function-ref name="getPayload" scoped="" ref="0xb6155a28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6155b08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6155be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6155dc0" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6155dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6154010"/>
        <function-ref name="getPayload" scoped="" ref="0xb61540f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb61541d0"/>
        <function-ref name="cancel" scoped="" ref="0xb61542b0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6154390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb6154948" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb6154948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6154b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6156268" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6156268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6156440"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6156520"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6156600"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb61566e0"/>
        <function-ref name="headerLength" scoped="" ref="0xb61567c0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb61568a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6152860" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6152860"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6152ab8"/>
        <function-ref name="checkFrame" scoped="" ref="0xb6152b98"/>
        <function-ref name="source" scoped="" ref="0xb6152c78"/>
        <function-ref name="destination" scoped="" ref="0xb6152d58"/>
        <function-ref name="setSource" scoped="" ref="0xb6152e38"/>
        <function-ref name="setDestination" scoped="" ref="0xb6152f18"/>
        <function-ref name="setGroup" scoped="" ref="0xb6150010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb6150150" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6150150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb6150328"/>
        <function-ref name="changed" scoped="" ref="0xb6150408"/>
        <function-ref name="amGroup" scoped="" ref="0xb61504e8"/>
        <function-ref name="setAddress" scoped="" ref="0xb61505c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6153880" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6153880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6153a58"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6153b38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6153c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6153cf8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6153dd8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6153eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6154568" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6154568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6154750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb6153128" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb6153128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6153310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb61569e0" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb61569e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6156bb8"/>
        <function-ref name="source" scoped="" ref="0xb6156c98"/>
        <function-ref name="address" scoped="" ref="0xb6156d78"/>
        <function-ref name="destination" scoped="" ref="0xb6156e58"/>
        <function-ref name="setSource" scoped="" ref="0xb6155010"/>
        <function-ref name="setDestination" scoped="" ref="0xb61550f0"/>
        <function-ref name="type" scoped="" ref="0xb61551d0"/>
        <function-ref name="setType" scoped="" ref="0xb61552b0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6155390"/>
        <function-ref name="setGroup" scoped="" ref="0xb6155470"/>
        <function-ref name="localGroup" scoped="" ref="0xb6155550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb6153508" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb6153508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb61536f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0xb6fd1820" loc="54:/home/wsn/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb6fd1820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb6fd19f8"/>
        <function-ref name="changed" scoped="" ref="0xb6fd1ad8"/>
        <function-ref name="amGroup" scoped="" ref="0xb6fd1bb8"/>
        <function-ref name="setAddress" scoped="" ref="0xb6fd1c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6fb9c40" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6fb9c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6fb9e18"/>
        <function-ref name="cancel" scoped="" ref="0xb6fb9ef8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6fb8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb6fb8150" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6fb8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6fb8328"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6fb8408"/>
        <function-ref name="request" scoped="" ref="0xb6fb84e8"/>
        <function-ref name="granted" scoped="" ref="0xb6fb85c8"/>
        <function-ref name="isOwner" scoped="" ref="0xb6fb86a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb6fb9718" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb6fb9718"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6fb98f0"/>
        <function-ref name="cancel" scoped="" ref="0xb6fb99d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6fb9ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb6f77490" loc="86:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb6f77490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb6f77678"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6f77758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb6f77d48" loc="89:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6f77d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6f76010"/>
        <function-ref name="configure" scoped="" ref="0xb6f760f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6faed40" loc="85:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6faed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6faef28"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6f77018"/>
        <function-ref name="request" scoped="" ref="0xb6f770f8"/>
        <function-ref name="granted" scoped="" ref="0xb6f771d8"/>
        <function-ref name="isOwner" scoped="" ref="0xb6f772b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb6f77898" loc="87:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb6f77898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb6f77a70"/>
        <function-ref name="userId" scoped="" ref="0xb6f77b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6123750" loc="44:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6123750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6123928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb6123a88" loc="45:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb6123a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb6123c60"/>
        <function-ref name="isEmpty" scoped="" ref="0xb6123d40"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb6123e20"/>
        <function-ref name="dequeue" scoped="" ref="0xb6123f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb61211e8" loc="52:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb61211e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb61213d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb61214b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb6121ab0" loc="56:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6121ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6121c98"/>
        <function-ref name="configure" scoped="" ref="0xb6121d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb6121ed8" loc="57:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb6121ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb611f0c0"/>
        <function-ref name="isEmpty" scoped="" ref="0xb611f1a0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb611f280"/>
        <function-ref name="dequeue" scoped="" ref="0xb611f360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6122a80" loc="51:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6122a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6122c68"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6122d48"/>
        <function-ref name="request" scoped="" ref="0xb6122e28"/>
        <function-ref name="granted" scoped="" ref="0xb6122f08"/>
        <function-ref name="isOwner" scoped="" ref="0xb6121010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb61215f0" loc="53:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb61215f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb61217c8"/>
        <function-ref name="userId" scoped="" ref="0xb61218a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb611f4e0" loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb611f4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb611f6b8"/>
        <function-ref name="runTask" scoped="" ref="0xb611f798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6f57250" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6f57250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f57428"/>
        <function-ref name="cancel" scoped="" ref="0xb6f57508"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f575e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6f57748" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6f57748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6f57920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6f74ce8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6f74ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6f74ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6f75c68" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6f75c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6f75e40"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6f75f20"/>
        <function-ref name="getPayload" scoped="" ref="0xb6f74018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f740f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6f741d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0xb6f58a30" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6f58a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6f58c08"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6f58ce8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f58dc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6f58ea8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6f57010"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6f570f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0xb6f59070" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6f59070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb6f59248"/>
        <function-ref name="getDSN" scoped="" ref="0xb6f59328"/>
        <function-ref name="setFCF" scoped="" ref="0xb6f59408"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb6f594e8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb6f595c8"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb6f596a8"/>
        <function-ref name="setDSN" scoped="" ref="0xb6f59788"/>
        <function-ref name="createAckReply" scoped="" ref="0xb6f59868"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb6f59948"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb6f59a28"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb6f59b08"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb6f59be8"/>
        <function-ref name="localAddr" scoped="" ref="0xb6f59cc8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6f59e28"/>
        <function-ref name="localPan" scoped="" ref="0xb6f59f08"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb6f58010"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb6f580f0"/>
        <function-ref name="setFramePending" scoped="" ref="0xb6f581d0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb6f582b0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6f58390"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6f58470"/>
        <function-ref name="getFCF" scoped="" ref="0xb6f58550"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6f58630"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb6f58710"/>
        <function-ref name="getFramePending" scoped="" ref="0xb6f587f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xb6f74318" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xb6f74318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f744f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6f745d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f746b0"/>
        <function-ref name="cancel" scoped="" ref="0xb6f74790"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f74870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xb6f749d0" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xb6f749d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6f74ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6f33050" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6f33050"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f33228"/>
        <function-ref name="cancel" scoped="" ref="0xb6f33308"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f333e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6f33548" loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6f33548"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6f33720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb6f52880" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb6f52880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6f52a58"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6f52b38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f52c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6f52cf8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6f52dd8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6f52eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0xb6f35528" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0xb6f35528"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6f35700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6f33880" loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6f33880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6f33a58"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6f33b38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f33c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6f33cf8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6f33dd8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6f33eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0xb6f35030" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0xb6f35030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f35208"/>
        <function-ref name="cancel" scoped="" ref="0xb6f352e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f353c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xb6f52050" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xb6f52050"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f52228"/>
        <function-ref name="cancel" scoped="" ref="0xb6f52308"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f523e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xb6f52548" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xb6f52548"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6f52720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0xb6f35860" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0xb6f35860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6f35a38"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6f35b18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f35bf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6f35cd8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6f35db8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6f35e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6ed8c70" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6ed8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ed8e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb6edaf10" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb6edaf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xb6ed9108"/>
        <function-ref name="address" scoped="" ref="0xb6ed91e8"/>
        <function-ref name="destination" scoped="" ref="0xb6ed92c8"/>
        <function-ref name="setSource" scoped="" ref="0xb6ed93a8"/>
        <function-ref name="setDestination" scoped="" ref="0xb6ed9488"/>
        <function-ref name="pan" scoped="" ref="0xb6ed9568"/>
        <function-ref name="setPan" scoped="" ref="0xb6ed9648"/>
        <function-ref name="isForMe" scoped="" ref="0xb6ed9728"/>
        <function-ref name="localPan" scoped="" ref="0xb6ed9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6ed9948" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6ed9948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ed9b20"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6ed9c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6ed9ce0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6ed9dc0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ed9ea0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ed8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0xb6edb530" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6edb530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb6edb708"/>
        <function-ref name="getDSN" scoped="" ref="0xb6edb7e8"/>
        <function-ref name="setFCF" scoped="" ref="0xb6edb8c8"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb6edb9a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb6edba88"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb6edbb68"/>
        <function-ref name="setDSN" scoped="" ref="0xb6edbc48"/>
        <function-ref name="createAckReply" scoped="" ref="0xb6edbd28"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb6edbe08"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb6edbee8"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb6eda010"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb6eda0f0"/>
        <function-ref name="localAddr" scoped="" ref="0xb6eda1d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6eda330"/>
        <function-ref name="localPan" scoped="" ref="0xb6eda410"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb6eda4f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb6eda5d0"/>
        <function-ref name="setFramePending" scoped="" ref="0xb6eda6b0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb6eda790"/>
        <function-ref name="isForMe" scoped="" ref="0xb6eda870"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6eda950"/>
        <function-ref name="getFCF" scoped="" ref="0xb6edaa30"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6edab10"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb6edabf0"/>
        <function-ref name="getFramePending" scoped="" ref="0xb6edacd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6ed84d8" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6ed84d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ed86b0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6ed8790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6ed8870"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6ed8950"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ed8a30"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ed8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6ed8170" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6ed8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ed8348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb60e3010" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb60e3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb60e31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb60e7d50" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb60e7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xb60e7f28"/>
        <function-ref name="address" scoped="" ref="0xb60e6018"/>
        <function-ref name="destination" scoped="" ref="0xb60e60f8"/>
        <function-ref name="setSource" scoped="" ref="0xb60e61d8"/>
        <function-ref name="setDestination" scoped="" ref="0xb60e62b8"/>
        <function-ref name="pan" scoped="" ref="0xb60e6398"/>
        <function-ref name="setPan" scoped="" ref="0xb60e6478"/>
        <function-ref name="isForMe" scoped="" ref="0xb60e6558"/>
        <function-ref name="localPan" scoped="" ref="0xb60e6638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb60e6778" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb60e6778"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb60e6950"/>
        <function-ref name="payloadLength" scoped="" ref="0xb60e6a30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb60e6b10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb60e6bf0"/>
        <function-ref name="headerLength" scoped="" ref="0xb60e6cd0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb60e6db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0xb60e8340" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb60e8340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb60e8518"/>
        <function-ref name="getDSN" scoped="" ref="0xb60e85f8"/>
        <function-ref name="setFCF" scoped="" ref="0xb60e86d8"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb60e87b8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb60e8898"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb60e8978"/>
        <function-ref name="setDSN" scoped="" ref="0xb60e8a58"/>
        <function-ref name="createAckReply" scoped="" ref="0xb60e8b38"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb60e8c18"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb60e8cf8"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb60e8dd8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb60e8eb8"/>
        <function-ref name="localAddr" scoped="" ref="0xb60e7010"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb60e7170"/>
        <function-ref name="localPan" scoped="" ref="0xb60e7250"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb60e7330"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb60e7410"/>
        <function-ref name="setFramePending" scoped="" ref="0xb60e74f0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb60e75d0"/>
        <function-ref name="isForMe" scoped="" ref="0xb60e76b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb60e7790"/>
        <function-ref name="getFCF" scoped="" ref="0xb60e7870"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb60e7950"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb60e7a30"/>
        <function-ref name="getFramePending" scoped="" ref="0xb60e7b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb60e5278" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb60e5278"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb60e5450"/>
        <function-ref name="changed" scoped="" ref="0xb60e5530"/>
        <function-ref name="amGroup" scoped="" ref="0xb60e5610"/>
        <function-ref name="setAddress" scoped="" ref="0xb60e56f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb60e6f10" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb60e6f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb60e5108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb60e5850" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb60e5850"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb60e5a28"/>
        <function-ref name="payloadLength" scoped="" ref="0xb60e5b08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb60e5be8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb60e5cc8"/>
        <function-ref name="headerLength" scoped="" ref="0xb60e5da8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb60e5e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6ed3a88" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6ed3a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6ed3c60"/>
        <function-ref name="cancel" scoped="" ref="0xb6ed3d40"/>
        <function-ref name="sendDone" scoped="" ref="0xb6ed3e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6e9a010" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6e9a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e9a1e8"/>
        <function-ref name="header" scoped="" ref="0xb6e9a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6ed3168" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6ed3168"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6ed3340"/>
        <function-ref name="cancel" scoped="" ref="0xb6ed3420"/>
        <function-ref name="sendDone" scoped="" ref="0xb6ed3500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6e9a428" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6e9a428"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb6e9a600"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb6e9a6e0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb6e9a7c0"/>
        <function-ref name="getSender" scoped="" ref="0xb6e9a8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6ed3640" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6ed3640"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ed3818"/>
        <function-ref name="header" scoped="" ref="0xb6ed38f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb60b83e0" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb60b83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb60b85b8"/>
        <function-ref name="cancel" scoped="" ref="0xb60b8698"/>
        <function-ref name="sendDone" scoped="" ref="0xb60b8778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb60b88d8" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb60b88d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb60b8ab0"/>
        <function-ref name="header" scoped="" ref="0xb60b8b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0xb60b69a8" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb60b69a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb60b6b80"/>
        <function-ref name="clearAll" scoped="" ref="0xb60b6c60"/>
        <function-ref name="get" scoped="" ref="0xb60b6d40"/>
        <function-ref name="set" scoped="" ref="0xb60b6e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb60ba790" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb60ba790"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb60ba968"/>
        <function-ref name="cancel" scoped="" ref="0xb60baa48"/>
        <function-ref name="sendDone" scoped="" ref="0xb60bab28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0xb60b6310" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb60b6310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb60b64e8"/>
        <function-ref name="insertNode" scoped="" ref="0xb60b65c8"/>
        <function-ref name="getNode" scoped="" ref="0xb60b66a8"/>
        <function-ref name="evicted" scoped="" ref="0xb60b6788"/>
        <function-ref name="getIndex" scoped="" ref="0xb60b6868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb60bac68" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb60bac68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb60bae40"/>
        <function-ref name="header" scoped="" ref="0xb60baf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb60b8078" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb60b8078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb60b8250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0xb60b8cd0" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xb60b8cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb60b8ea8"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb60b6010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb60b60f0"/>
        <function-ref name="getSender" scoped="" ref="0xb60b61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xb6eb6010" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb6eb6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb6eb61e8"/>
        <function-ref name="insertNode" scoped="" ref="0xb6eb62c8"/>
        <function-ref name="getNode" scoped="" ref="0xb6eb63a8"/>
        <function-ref name="evicted" scoped="" ref="0xb6eb6488"/>
        <function-ref name="getIndex" scoped="" ref="0xb6eb6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb6eb3dd0" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb6eb3dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6eb1010"/>
        <function-ref name="clearAll" scoped="" ref="0xb6eb10f0"/>
        <function-ref name="get" scoped="" ref="0xb6eb11d0"/>
        <function-ref name="set" scoped="" ref="0xb6eb12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xb6eb33a8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb6eb33a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb6eb3580"/>
        <function-ref name="insertNode" scoped="" ref="0xb6eb3660"/>
        <function-ref name="getNode" scoped="" ref="0xb6eb3740"/>
        <function-ref name="evicted" scoped="" ref="0xb6eb3820"/>
        <function-ref name="getIndex" scoped="" ref="0xb6eb3900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6eb3010" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6eb3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6eb31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb60b5e88" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb60b5e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb60b4070"/>
        <function-ref name="clearAll" scoped="" ref="0xb60b4150"/>
        <function-ref name="get" scoped="" ref="0xb60b4230"/>
        <function-ref name="set" scoped="" ref="0xb60b4310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6e90280" loc="85:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6e90280"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e90458"/>
        <function-ref name="cancel" scoped="" ref="0xb6e90538"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e90618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6e90778" loc="86:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6e90778"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e90950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0xb6e8fe28" loc="93:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0xb6e8fe28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6e8e050"/>
        <function-ref name="noAck" scoped="" ref="0xb6e8e130"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6e8e210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6e98b88" loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6e98b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e98d60"/>
        <function-ref name="cancel" scoped="" ref="0xb6e98e40"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e98f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6e97a48" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6e97a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6e97c20"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6e97d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e97de0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6e97ec0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6e90010"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6e900f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6e90ab0" loc="87:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6e90ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6e90c88"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6e90d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e90e48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6e90f28"/>
        <function-ref name="headerLength" scoped="" ref="0xb6e8f018"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6e8f0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0xb6e8f750" loc="92:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0xb6e8f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6e8f928"/>
        <function-ref name="setRetries" scoped="" ref="0xb6e8fa08"/>
        <function-ref name="getRetries" scoped="" ref="0xb6e8fae8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6e8fbc8"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6e8fca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6e97098" loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6e97098"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e97270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xb6e8f238" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6e8f238"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6e8f410"/>
        <function-ref name="noAck" scoped="" ref="0xb6e8f4f0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6e8f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb6e973b0" loc="79:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb6e973b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6e97588"/>
        <function-ref name="setRetries" scoped="" ref="0xb6e97668"/>
        <function-ref name="getRetries" scoped="" ref="0xb6e97748"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6e97828"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6e97908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6e8bb88" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6e8bb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6e8bd60"/>
        <function-ref name="stopDone" scoped="" ref="0xb6e8be40"/>
        <function-ref name="start" scoped="" ref="0xb6e8bf20"/>
        <function-ref name="stop" scoped="" ref="0xb6e8a018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6e84d30" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6e84d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e84f08"/>
        <function-ref name="cancel" scoped="" ref="0xb6e7d010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e7d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6e7d250" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6e7d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e7d428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6e8a178" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6e8a178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e8a350"/>
        <function-ref name="cancel" scoped="" ref="0xb6e8a430"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e8a510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6e8a988" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6e8a988"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6e8ab60"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6e8ac40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e8ad20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6e8ae00"/>
        <function-ref name="headerLength" scoped="" ref="0xb6e8aee0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6e84010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb6e84150" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb6e84150"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb6e84328"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb6e84408"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb6e844e8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb6e845c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb6e84758" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb6e84758"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6e84930"/>
        <function-ref name="stopDone" scoped="" ref="0xb6e84a10"/>
        <function-ref name="start" scoped="" ref="0xb6e84af0"/>
        <function-ref name="stop" scoped="" ref="0xb6e84bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6e8a670" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6e8a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e8a848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6e7d588" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6e7d588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6e7d760"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6e7d840"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e7d920"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6e7da00"/>
        <function-ref name="headerLength" scoped="" ref="0xb6e7dae0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6e7dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb60a18c0" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb60a18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb60a1a98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb60a1b78"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb60a1c58"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb60a1d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6e792b8" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6e792b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6e79490"/>
        <function-ref name="stopDone" scoped="" ref="0xb6e79570"/>
        <function-ref name="start" scoped="" ref="0xb6e79650"/>
        <function-ref name="stop" scoped="" ref="0xb6e79730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xb6e3cc10" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6e3cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6e3cde8"/>
        <function-ref name="turnOn" scoped="" ref="0xb6e3cec8"/>
        <function-ref name="setChannel" scoped="" ref="0xb6e3b010"/>
        <function-ref name="done" scoped="" ref="0xb6e3b0f0"/>
        <function-ref name="standby" scoped="" ref="0xb6e3b1d0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6e3b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6e79890" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6e79890"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e79a68"/>
        <function-ref name="cancel" scoped="" ref="0xb6e79b48"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e79c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xb6e3b8c8" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6e3b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e3baa0"/>
        <function-ref name="header" scoped="" ref="0xb6e3bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6e79d88" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6e79d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e3c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xb6e3b3f0" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6e3b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e3b5c8"/>
        <function-ref name="ready" scoped="" ref="0xb6e3b6a8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e3b788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb6e3c150" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb6e3c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb6e3c328"/>
        <function-ref name="setChannel" scoped="" ref="0xb6e3c408"/>
        <function-ref name="getChannel" scoped="" ref="0xb6e3c4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb6e3c658" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6e3c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6e3c830"/>
        <function-ref name="suspend" scoped="" ref="0xb6e3c910"/>
        <function-ref name="resume" scoped="" ref="0xb6e3c9f0"/>
        <function-ref name="run" scoped="" ref="0xb6e3cad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb609ec88" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb609ec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb609ee60"/>
        <function-ref name="stopDone" scoped="" ref="0xb609c010"/>
        <function-ref name="start" scoped="" ref="0xb609c0f0"/>
        <function-ref name="stop" scoped="" ref="0xb609c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xb609c330" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb609c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb609c508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xb609a3a0" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb609a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb609a578"/>
        <function-ref name="turnOn" scoped="" ref="0xb609a658"/>
        <function-ref name="setChannel" scoped="" ref="0xb609a738"/>
        <function-ref name="done" scoped="" ref="0xb609a818"/>
        <function-ref name="standby" scoped="" ref="0xb609a8f8"/>
        <function-ref name="getChannel" scoped="" ref="0xb609a9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb609c668" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb609c668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb609c840"/>
        <function-ref name="cancel" scoped="" ref="0xb609c920"/>
        <function-ref name="sendDone" scoped="" ref="0xb609ca00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0xb6099e98" loc="189:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0xb6099e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb60980c0"/>
        <function-ref name="runTask" scoped="" ref="0xb60981a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xb6099628" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6099628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6099800"/>
        <function-ref name="header" scoped="" ref="0xb60998e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0xb6098320" loc="144:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0xb6098320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb60984f8"/>
        <function-ref name="runTask" scoped="" ref="0xb60985d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb609cb60" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb609cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb609cd38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0xb6099a60" loc="322:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0xb6099a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6099c38"/>
        <function-ref name="runTask" scoped="" ref="0xb6099d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xb6099150" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6099150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6099328"/>
        <function-ref name="ready" scoped="" ref="0xb6099408"/>
        <function-ref name="sendDone" scoped="" ref="0xb60994e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb609ce78" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb609ce78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb609a070"/>
        <function-ref name="setChannel" scoped="" ref="0xb609a150"/>
        <function-ref name="getChannel" scoped="" ref="0xb609a230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb609ab18" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb609ab18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb609acf0"/>
        <function-ref name="suspend" scoped="" ref="0xb609add0"/>
        <function-ref name="resume" scoped="" ref="0xb609aeb0"/>
        <function-ref name="run" scoped="" ref="0xb6099010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6e36e58" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6e36e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e15050"/>
        <function-ref name="ready" scoped="" ref="0xb6e15130"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e15210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6e15370" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6e15370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e15548"/>
        <function-ref name="header" scoped="" ref="0xb6e15628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6e15768" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6e15768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6e15940"/>
        <function-ref name="wait" scoped="" ref="0xb6e15a20"/>
        <function-ref name="cancel" scoped="" ref="0xb6e15b00"/>
        <function-ref name="isFree" scoped="" ref="0xb6e15be0"/>
        <function-ref name="getNow" scoped="" ref="0xb6e15cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6e15e20" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6e15e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb6e10010"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb6e100f0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb6e101d0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb6e102b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6e36a10" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6e36a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e36be8"/>
        <function-ref name="header" scoped="" ref="0xb6e36cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6e36538" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6e36538"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e36710"/>
        <function-ref name="ready" scoped="" ref="0xb6e367f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e368d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb607a330" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb607a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb607a508"/>
        <function-ref name="ready" scoped="" ref="0xb607a5e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb607a6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb607a828" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb607a828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb607aa00"/>
        <function-ref name="header" scoped="" ref="0xb607aae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb607ac20" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb607ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb607adf8"/>
        <function-ref name="wait" scoped="" ref="0xb607aed8"/>
        <function-ref name="cancel" scoped="" ref="0xb6079010"/>
        <function-ref name="isFree" scoped="" ref="0xb60790f0"/>
        <function-ref name="getNow" scoped="" ref="0xb60791d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb6079310" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb6079310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb60794e8"/>
        <function-ref name="rand32" scoped="" ref="0xb60795c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6079728" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6079728"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb6079900"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb60799e0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb6079ac0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb6079ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb607ded0" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb607ded0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb607a0c0"/>
        <function-ref name="header" scoped="" ref="0xb607a1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb607d9f8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb607d9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb607dbd0"/>
        <function-ref name="ready" scoped="" ref="0xb607dcb0"/>
        <function-ref name="sendDone" scoped="" ref="0xb607dd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0xb6079d20" loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0xb6079d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6079ef8"/>
        <function-ref name="runTask" scoped="" ref="0xb6078010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb6e13948" loc="46:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb6e13948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb6e13b20"/>
        <function-ref name="rand32" scoped="" ref="0xb6e13c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb6e13088" loc="45:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb6e13088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6e136b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6e17dc0" loc="44:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6e17dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6e14010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb6e0f478" loc="48:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb6e0f478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb6e0f650"/>
        <function-ref name="rand32" scoped="" ref="0xb6e0f730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb6e12b10" loc="47:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb6e12b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6e0f1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6e125f0" loc="46:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6e125f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6e127c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6e04060" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6e04060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e04238"/>
        <function-ref name="ready" scoped="" ref="0xb6e04318"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e043f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6e04558" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6e04558"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e04730"/>
        <function-ref name="header" scoped="" ref="0xb6e04810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6e04950" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6e04950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6e04b28"/>
        <function-ref name="wait" scoped="" ref="0xb6e04c08"/>
        <function-ref name="cancel" scoped="" ref="0xb6e04ce8"/>
        <function-ref name="isFree" scoped="" ref="0xb6e04dc8"/>
        <function-ref name="getNow" scoped="" ref="0xb6e04ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0xb6deb988" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0xb6deb988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6debb60"/>
        <function-ref name="get" scoped="" ref="0xb6debc40"/>
        <function-ref name="setValue" scoped="" ref="0xb6debd20"/>
        <function-ref name="set" scoped="" ref="0xb6debe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6deb030" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6deb030"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb6deb208"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb6deb2e8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6deb3c8"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb6deb4a8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb6deb588"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb6deb668"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6deb748"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6deb828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6e05720" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6e05720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e058f8"/>
        <function-ref name="header" scoped="" ref="0xb6e059d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6e05248" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6e05248"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e05420"/>
        <function-ref name="ready" scoped="" ref="0xb6e05500"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e055e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb6e05b18" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6e05b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6e05cf0"/>
        <function-ref name="noAck" scoped="" ref="0xb6e05dd0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6e05eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6de6e40" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6de6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6de5050"/>
        <function-ref name="stopDone" scoped="" ref="0xb6de5130"/>
        <function-ref name="start" scoped="" ref="0xb6de5210"/>
        <function-ref name="stop" scoped="" ref="0xb6de52f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6ddacc0" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6ddacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6ddae98"/>
        <function-ref name="request" scoped="" ref="0xb6dd9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6dd7330" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6dd7330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6dd7508"/>
        <function-ref name="ready" scoped="" ref="0xb6dd75e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6dd76c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6dd7828" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6dd7828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6dd7a00"/>
        <function-ref name="header" scoped="" ref="0xb6dd7ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6de5c20" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6de5c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6de5df8"/>
        <function-ref name="turnOn" scoped="" ref="0xb6de5ed8"/>
        <function-ref name="setChannel" scoped="" ref="0xb6dda010"/>
        <function-ref name="done" scoped="" ref="0xb6dda0f0"/>
        <function-ref name="standby" scoped="" ref="0xb6dda1d0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6dda2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6dd9150" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6dd9150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6dd9328"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6dd9408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6dd94e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6dd95c8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6dd96a8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6dd9788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb6dd8a80" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb6dd8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6dd8cd8"/>
        <function-ref name="turnOn" scoped="" ref="0xb6dd8db8"/>
        <function-ref name="setChannel" scoped="" ref="0xb6dd8e98"/>
        <function-ref name="done" scoped="" ref="0xb6dd7010"/>
        <function-ref name="standby" scoped="" ref="0xb6dd70f0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6dd71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xb6dd98e8" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6dd98e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6dd9ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6dda8c8" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6dda8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ddaaa0"/>
        <function-ref name="header" scoped="" ref="0xb6ddab80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0xb6dd8748" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0xb6dd8748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6dd8920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb6dd9c50" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb6dd9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6dd9e28"/>
        <function-ref name="stopDone" scoped="" ref="0xb6dd9f08"/>
        <function-ref name="start" scoped="" ref="0xb6dd8010"/>
        <function-ref name="stop" scoped="" ref="0xb6dd80f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6dd6090" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6dd6090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6dd6268"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6dd6348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6dd6428"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6dd6508"/>
        <function-ref name="headerLength" scoped="" ref="0xb6dd65e8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6dd66c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb6de5908" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0xb6de5908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6de5ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6dd6828" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6dd6828"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6dd6a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0xb6dd8250" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0xb6dd8250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6dd8428"/>
        <function-ref name="cancel" scoped="" ref="0xb6dd8508"/>
        <function-ref name="sendDone" scoped="" ref="0xb6dd85e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6dda3f0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6dda3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6dda5c8"/>
        <function-ref name="ready" scoped="" ref="0xb6dda6a8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6dda788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xb6dd7c40" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xb6dd7c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6dd7e18"/>
        <function-ref name="request" scoped="" ref="0xb6dd7ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb6de5430" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb6de5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6de5608"/>
        <function-ref name="cancel" scoped="" ref="0xb6de56e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6de57c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0xb6ca7338" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0xb6ca7338"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ca7510"/>
        <function-ref name="get" scoped="" ref="0xb6ca75f0"/>
        <function-ref name="setValue" scoped="" ref="0xb6ca76d0"/>
        <function-ref name="set" scoped="" ref="0xb6ca77b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6caa9f8" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6caa9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6caabd0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6caacb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6caad90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6caae70"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ca8010"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ca80f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6ca8b88" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6ca8b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ca8d60"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6ca8e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6ca8f20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6ca7018"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ca70f8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ca71d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb6caf378" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6caf378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb728ad68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6cafe78"/>
        <function-ref name="clear" scoped="" ref="0xb6caa250"/>
        <function-ref name="isValid" scoped="" ref="0xb6cafac8"/>
        <function-ref name="set" scoped="" ref="0xb6caa600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0xb6ca8310" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6ca8310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb728ad68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6ca8958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb6dd2b10" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6dd2b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6da46b8"/>
        <function-ref name="clear" scoped="" ref="0xb6da4a68"/>
        <function-ref name="isValid" scoped="" ref="0xb6da4308"/>
        <function-ref name="set" scoped="" ref="0xb6da4e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0xb604c520" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0xb604c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb604c6f8"/>
        <function-ref name="get" scoped="" ref="0xb604c7d8"/>
        <function-ref name="setValue" scoped="" ref="0xb604c8b8"/>
        <function-ref name="set" scoped="" ref="0xb604c998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb604dca8" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb604dca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb604de80"/>
        <function-ref name="payloadLength" scoped="" ref="0xb604c010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb604c0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb604c1d0"/>
        <function-ref name="headerLength" scoped="" ref="0xb604c2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb604c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb604bd38" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb604bd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb604bf10"/>
        <function-ref name="payloadLength" scoped="" ref="0xb604a010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb604a0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb604a1d0"/>
        <function-ref name="headerLength" scoped="" ref="0xb604a2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb604a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb604f610" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb604f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb728ad68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb604d150"/>
        <function-ref name="clear" scoped="" ref="0xb604d500"/>
        <function-ref name="isValid" scoped="" ref="0xb604fd60"/>
        <function-ref name="set" scoped="" ref="0xb604d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0xb604cb88" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb604cb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb728ad68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb604b200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0xb604b4c0" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0xb604b4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb604bb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb6054e38" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6054e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6050950"/>
        <function-ref name="clear" scoped="" ref="0xb6050d00"/>
        <function-ref name="isValid" scoped="" ref="0xb60505a0"/>
        <function-ref name="set" scoped="" ref="0xb604f0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6da6c50" loc="20:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6da6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6da32e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb6da0380" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb6da0380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6d9fe78"/>
        <function-ref name="fired" scoped="" ref="0xb6d9f130"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6d9f838"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6d9f5e0"/>
        <function-ref name="getdt" scoped="" ref="0xb6d9d348"/>
        <function-ref name="gett0" scoped="" ref="0xb6d9d0f0"/>
        <function-ref name="isRunning" scoped="" ref="0xb6d9f388"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6da09a8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6d9fb58"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6da0c28"/>
        <function-ref name="stop" scoped="" ref="0xb6da0ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6d9d6a8" loc="47:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6d9d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6d9dcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6da3b80" loc="45:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6da3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6da3d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0xb6d93da0" loc="29:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0xb6d93da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6d96508"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6d969f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6d96780"/>
        <function-ref name="overflow" scoped="" ref="0xb6d96c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6d9cd68" loc="27:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6d9cd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6d99010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0xb6d99400" loc="28:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0xb6d99400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6d988b8"/>
        <function-ref name="fired" scoped="" ref="0xb6d98088"/>
        <function-ref name="startAt" scoped="" ref="0xb6d98578"/>
        <function-ref name="isRunning" scoped="" ref="0xb6d98300"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6d98b30"/>
        <function-ref name="start" scoped="" ref="0xb6d99b50"/>
        <function-ref name="stop" scoped="" ref="0xb6d99df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6d064c0" loc="61:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6d064c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6d04980"/>
        <function-ref name="fired" scoped="" ref="0xb6d04150"/>
        <function-ref name="startAt" scoped="" ref="0xb6d04640"/>
        <function-ref name="isRunning" scoped="" ref="0xb6d043c8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6d04bf8"/>
        <function-ref name="start" scoped="" ref="0xb6d06c10"/>
        <function-ref name="stop" scoped="" ref="0xb6d06eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6d06088" loc="60:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6d06088"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb73915d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb73915d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6d06260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6d04f28" loc="62:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6d04f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6d03688"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6d03b78"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6d03900"/>
        <function-ref name="overflow" scoped="" ref="0xb6d03df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0xb6032758" loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6032758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6032930"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6032a10"/>
        <function-ref name="getControlA" scoped="" ref="0xb6032af0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6032bd0"/>
        <function-ref name="setControlB" scoped="" ref="0xb6032cb0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6032d90"/>
        <function-ref name="getControlB" scoped="" ref="0xb6032e70"/>
        <function-ref name="setControlA" scoped="" ref="0xb6031010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6038900" loc="61:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6038900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6037db0"/>
        <function-ref name="fired" scoped="" ref="0xb6037580"/>
        <function-ref name="startAt" scoped="" ref="0xb6037a70"/>
        <function-ref name="isRunning" scoped="" ref="0xb60377f8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6036048"/>
        <function-ref name="start" scoped="" ref="0xb6037068"/>
        <function-ref name="stop" scoped="" ref="0xb6037308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb60384c8" loc="60:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb60384c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb60386a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6036378" loc="62:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6036378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6036ac8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6035010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6036d40"/>
        <function-ref name="overflow" scoped="" ref="0xb6035288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0xb6030c20" loc="68:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb6030c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb6030df8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb6030ed8"/>
        <function-ref name="controlABusy" scoped="" ref="0xb602e010"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb602e0f0"/>
        <function-ref name="countBusy" scoped="" ref="0xb602e1d0"/>
        <function-ref name="compareABusy" scoped="" ref="0xb602e2b0"/>
        <function-ref name="getAssr" scoped="" ref="0xb602e390"/>
        <function-ref name="setAssr" scoped="" ref="0xb602e470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0xb6031200" loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb6031200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6030778"/>
        <function-ref name="fired" scoped="" ref="0xb6031d60"/>
        <function-ref name="get" scoped="" ref="0xb6031848"/>
        <function-ref name="reset" scoped="" ref="0xb6030010"/>
        <function-ref name="isOn" scoped="" ref="0xb60309f0"/>
        <function-ref name="set" scoped="" ref="0xb6031ac0"/>
        <function-ref name="start" scoped="" ref="0xb6030288"/>
        <function-ref name="stop" scoped="" ref="0xb6030500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6035578" loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6035578"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6032010"/>
        <function-ref name="test" scoped="" ref="0xb6033ad8"/>
        <function-ref name="get" scoped="" ref="0xb6035bc0"/>
        <function-ref name="setScale" scoped="" ref="0xb6032288"/>
        <function-ref name="getScale" scoped="" ref="0xb6032528"/>
        <function-ref name="reset" scoped="" ref="0xb6033370"/>
        <function-ref name="overflow" scoped="" ref="0xb60330f8"/>
        <function-ref name="isOn" scoped="" ref="0xb6033d50"/>
        <function-ref name="set" scoped="" ref="0xb6035e38"/>
        <function-ref name="start" scoped="" ref="0xb60335e8"/>
        <function-ref name="stop" scoped="" ref="0xb6033860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6d43600" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6d43600"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6d437d8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6d438b8"/>
        <function-ref name="getControlA" scoped="" ref="0xb6d43998"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6d43a78"/>
        <function-ref name="setControlB" scoped="" ref="0xb6d43b58"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6d43c38"/>
        <function-ref name="getControlB" scoped="" ref="0xb6d43d18"/>
        <function-ref name="setControlA" scoped="" ref="0xb6d43df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb6d41c60" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb6d41c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb6d41e38"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb6d41f18"/>
        <function-ref name="controlABusy" scoped="" ref="0xb6d40010"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb6d400f0"/>
        <function-ref name="countBusy" scoped="" ref="0xb6d401d0"/>
        <function-ref name="compareABusy" scoped="" ref="0xb6d402b0"/>
        <function-ref name="getAssr" scoped="" ref="0xb6d40390"/>
        <function-ref name="setAssr" scoped="" ref="0xb6d40470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6d42138" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb6d42138"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6d41690"/>
        <function-ref name="fired" scoped="" ref="0xb6d42c98"/>
        <function-ref name="get" scoped="" ref="0xb6d42780"/>
        <function-ref name="reset" scoped="" ref="0xb6d42f10"/>
        <function-ref name="isOn" scoped="" ref="0xb6d41908"/>
        <function-ref name="set" scoped="" ref="0xb6d429f8"/>
        <function-ref name="start" scoped="" ref="0xb6d411a0"/>
        <function-ref name="stop" scoped="" ref="0xb6d41418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6d46340" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6d46340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6d45d88"/>
        <function-ref name="test" scoped="" ref="0xb6d45898"/>
        <function-ref name="get" scoped="" ref="0xb6d46988"/>
        <function-ref name="setScale" scoped="" ref="0xb6d43010"/>
        <function-ref name="getScale" scoped="" ref="0xb6d432b0"/>
        <function-ref name="reset" scoped="" ref="0xb6d45130"/>
        <function-ref name="overflow" scoped="" ref="0xb6d46ea0"/>
        <function-ref name="isOn" scoped="" ref="0xb6d45b10"/>
        <function-ref name="set" scoped="" ref="0xb6d46c00"/>
        <function-ref name="start" scoped="" ref="0xb6d453a8"/>
        <function-ref name="stop" scoped="" ref="0xb6d45620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6d3a510" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6d3a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6d3a6e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6d3a7c8"/>
        <function-ref name="getControlA" scoped="" ref="0xb6d3a8a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6d3a988"/>
        <function-ref name="setControlB" scoped="" ref="0xb6d3aa68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6d3ab48"/>
        <function-ref name="getControlB" scoped="" ref="0xb6d3ac28"/>
        <function-ref name="setControlA" scoped="" ref="0xb6d3ad08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0xb6d38af8" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb6d38af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb6d38cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb6d36010" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb6d36010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb6d361e8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb6d362c8"/>
        <function-ref name="controlABusy" scoped="" ref="0xb6d363a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb6d36488"/>
        <function-ref name="countBusy" scoped="" ref="0xb6d36568"/>
        <function-ref name="compareABusy" scoped="" ref="0xb6d36648"/>
        <function-ref name="getAssr" scoped="" ref="0xb6d36728"/>
        <function-ref name="setAssr" scoped="" ref="0xb6d36808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6d39078" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb6d39078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6d385c8"/>
        <function-ref name="fired" scoped="" ref="0xb6d39bd8"/>
        <function-ref name="get" scoped="" ref="0xb6d396c0"/>
        <function-ref name="reset" scoped="" ref="0xb6d39e50"/>
        <function-ref name="isOn" scoped="" ref="0xb6d38840"/>
        <function-ref name="set" scoped="" ref="0xb6d39938"/>
        <function-ref name="start" scoped="" ref="0xb6d380d8"/>
        <function-ref name="stop" scoped="" ref="0xb6d38350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6d3d190" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6d3d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6d3bc68"/>
        <function-ref name="test" scoped="" ref="0xb6d3b778"/>
        <function-ref name="get" scoped="" ref="0xb6d3d7d8"/>
        <function-ref name="setScale" scoped="" ref="0xb6d3bee0"/>
        <function-ref name="getScale" scoped="" ref="0xb6d3a1c0"/>
        <function-ref name="reset" scoped="" ref="0xb6d3b010"/>
        <function-ref name="overflow" scoped="" ref="0xb6d3dcf0"/>
        <function-ref name="isOn" scoped="" ref="0xb6d3b9f0"/>
        <function-ref name="set" scoped="" ref="0xb6d3da50"/>
        <function-ref name="start" scoped="" ref="0xb6d3b288"/>
        <function-ref name="stop" scoped="" ref="0xb6d3b500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0xb6ce8010" loc="74:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0xb6ce8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6ce81e8"/>
        <function-ref name="runTask" scoped="" ref="0xb6ce82c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb6cea5b8" loc="49:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6cea5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6ce9ab8"/>
        <function-ref name="fired" scoped="" ref="0xb6ce9288"/>
        <function-ref name="startAt" scoped="" ref="0xb6ce9778"/>
        <function-ref name="isRunning" scoped="" ref="0xb6ce9500"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6ce9d30"/>
        <function-ref name="start" scoped="" ref="0xb6cead08"/>
        <function-ref name="stop" scoped="" ref="0xb6ce9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6d01270" loc="48:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6d01270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6cebd58"/>
        <function-ref name="fired" scoped="" ref="0xb6ceb010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6ceb718"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6ceb4c0"/>
        <function-ref name="getdt" scoped="" ref="0xb6cea268"/>
        <function-ref name="gett0" scoped="" ref="0xb6cea010"/>
        <function-ref name="isRunning" scoped="" ref="0xb6ceb268"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6d01898"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6ceba38"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6d01b18"/>
        <function-ref name="stop" scoped="" ref="0xb6d01d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0xb6cbb798" loc="71:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0xb6cbb798"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6cbb970"/>
        <function-ref name="runTask" scoped="" ref="0xb6cbba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0xb6cbe5a0" loc="49:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0xb6cbe5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6cbb098"/>
        <function-ref name="fired" scoped="" ref="0xb6cbd330"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6cbda38"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6cbd7e0"/>
        <function-ref name="getdt" scoped="" ref="0xb6cbb548"/>
        <function-ref name="gett0" scoped="" ref="0xb6cbb2f0"/>
        <function-ref name="isRunning" scoped="" ref="0xb6cbd588"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6cbebc8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6cbdd58"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6cbee48"/>
        <function-ref name="stop" scoped="" ref="0xb6cbd0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6ce5210" loc="48:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6ce5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6cc0da8"/>
        <function-ref name="fired" scoped="" ref="0xb6cc0010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6cc0748"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6cc04e0"/>
        <function-ref name="getdt" scoped="" ref="0xb6cbe2b0"/>
        <function-ref name="gett0" scoped="" ref="0xb6cbe048"/>
        <function-ref name="isRunning" scoped="" ref="0xb6cc0278"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6ce5848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6cc0a78"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6ce5ad8"/>
        <function-ref name="stop" scoped="" ref="0xb6ce5d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6cb3bc8" loc="48:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6cb3bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6cb9238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb6cb9588" loc="49:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6cb9588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6cb9cd8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6cb8288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6cb8010"/>
        <function-ref name="overflow" scoped="" ref="0xb6cb8500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb6cb1e80" loc="49:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb6cb1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6cad988"/>
        <function-ref name="fired" scoped="" ref="0xb6caec10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6cad348"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6cad0f0"/>
        <function-ref name="getdt" scoped="" ref="0xb6cade38"/>
        <function-ref name="gett0" scoped="" ref="0xb6cadbe0"/>
        <function-ref name="isRunning" scoped="" ref="0xb6caee68"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6cae4b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6cad668"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6cae738"/>
        <function-ref name="stop" scoped="" ref="0xb6cae9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6ca4650" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6ca4650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ca4828"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6ca4908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6ca49e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6ca4ac8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ca4ba8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ca4c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6ca4e18" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6ca4e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ca3010"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6ca30f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6ca31d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6ca32b0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ca3390"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ca3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0xb6ca4088" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0xb6ca4088"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ca4270"/>
        <function-ref name="get" scoped="" ref="0xb6ca4350"/>
        <function-ref name="setValue" scoped="" ref="0xb6ca4430"/>
        <function-ref name="set" scoped="" ref="0xb6ca4510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6c90618" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6c90618"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6c907f0"/>
        <function-ref name="stopDone" scoped="" ref="0xb6c908d0"/>
        <function-ref name="start" scoped="" ref="0xb6c909b0"/>
        <function-ref name="stop" scoped="" ref="0xb6c90a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6c8e548" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6c8e548"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6c8e720"/>
        <function-ref name="request" scoped="" ref="0xb6c8e800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6c8bb60" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6c8bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c8bd38"/>
        <function-ref name="ready" scoped="" ref="0xb6c8be18"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c8bef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6c8a090" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6c8a090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c8a268"/>
        <function-ref name="header" scoped="" ref="0xb6c8a348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6c8f468" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6c8f468"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6c8f640"/>
        <function-ref name="turnOn" scoped="" ref="0xb6c8f720"/>
        <function-ref name="setChannel" scoped="" ref="0xb6c8f800"/>
        <function-ref name="done" scoped="" ref="0xb6c8f8e0"/>
        <function-ref name="standby" scoped="" ref="0xb6c8f9c0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6c8faa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6c8e940" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6c8e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c8eb18"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c8ebf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c8ecd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c8edb8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c8ee98"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c8d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb6c8b348" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb6c8b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6c8b5a0"/>
        <function-ref name="turnOn" scoped="" ref="0xb6c8b680"/>
        <function-ref name="setChannel" scoped="" ref="0xb6c8b760"/>
        <function-ref name="done" scoped="" ref="0xb6c8b840"/>
        <function-ref name="standby" scoped="" ref="0xb6c8b920"/>
        <function-ref name="getChannel" scoped="" ref="0xb6c8ba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xb6c8d170" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6c8d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6c8d348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6c8e150" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6c8e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c8e328"/>
        <function-ref name="header" scoped="" ref="0xb6c8e408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0xb6c8b010" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0xb6c8b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c8b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb6c8d4d8" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb6c8d4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6c8d6b0"/>
        <function-ref name="stopDone" scoped="" ref="0xb6c8d790"/>
        <function-ref name="start" scoped="" ref="0xb6c8d870"/>
        <function-ref name="stop" scoped="" ref="0xb6c8d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6c8a8c0" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6c8a8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c8aa98"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c8ab78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c8ac58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c8ad38"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c8ae18"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c8aef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb6c8f150" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0xb6c8f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c8f328"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6c89090" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6c89090"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6c89268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0xb6c8dab0" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0xb6c8dab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c8dc88"/>
        <function-ref name="cancel" scoped="" ref="0xb6c8dd68"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c8de48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6c8fbe0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6c8fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c8fdb8"/>
        <function-ref name="ready" scoped="" ref="0xb6c8fe98"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c8e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xb6c8a4a8" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xb6c8a4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6c8a680"/>
        <function-ref name="request" scoped="" ref="0xb6c8a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb6c90bd0" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb6c90bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c90da8"/>
        <function-ref name="cancel" scoped="" ref="0xb6c90e88"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c8f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6c84b58" loc="45:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6c84b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6c84d30"/>
        <function-ref name="request" scoped="" ref="0xb6c84e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb6c82d18" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb6c82d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c808f0"/>
        <function-ref name="get" scoped="" ref="0xb6c80630"/>
        <function-ref name="isSet" scoped="" ref="0xb6c80370"/>
        <function-ref name="set" scoped="" ref="0xb6c80bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0xb6c75a08" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0xb6c75a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c75be0"/>
        <function-ref name="get" scoped="" ref="0xb6c75cc0"/>
        <function-ref name="setValue" scoped="" ref="0xb6c75da0"/>
        <function-ref name="set" scoped="" ref="0xb6c75e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb6c78b38" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6c78b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb728ad68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6c776b8"/>
        <function-ref name="clear" scoped="" ref="0xb6c77a68"/>
        <function-ref name="isValid" scoped="" ref="0xb6c77308"/>
        <function-ref name="set" scoped="" ref="0xb6c77e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6c879b8" loc="42:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6c879b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6c87b90"/>
        <function-ref name="turnOn" scoped="" ref="0xb6c87c70"/>
        <function-ref name="setChannel" scoped="" ref="0xb6c87d50"/>
        <function-ref name="done" scoped="" ref="0xb6c87e30"/>
        <function-ref name="standby" scoped="" ref="0xb6c87f10"/>
        <function-ref name="getChannel" scoped="" ref="0xb6c84010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6c74700" loc="66:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6c74700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6c748d8"/>
        <function-ref name="wait" scoped="" ref="0xb6c749b8"/>
        <function-ref name="cancel" scoped="" ref="0xb6c74a98"/>
        <function-ref name="isFree" scoped="" ref="0xb6c74b78"/>
        <function-ref name="getNow" scoped="" ref="0xb6c74c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb6c839b0" loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6c839b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c82590"/>
        <function-ref name="get" scoped="" ref="0xb6c822d0"/>
        <function-ref name="isSet" scoped="" ref="0xb6c82010"/>
        <function-ref name="set" scoped="" ref="0xb6c82850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6c83010" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6c83010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c831e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c832c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c833a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c83488"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c83568"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c83648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6c781d0" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6c781d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c78428"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c78508"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c785e8"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xb6c786c8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb6c787a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6c84708" loc="44:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6c84708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c848e0"/>
        <function-ref name="header" scoped="" ref="0xb6c849c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6c7b700" loc="55:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6c7b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb728ad68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb7288048"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6c79bd8"/>
        <function-ref name="fired" scoped="" ref="0xb6c793a8"/>
        <function-ref name="startAt" scoped="" ref="0xb6c79898"/>
        <function-ref name="isRunning" scoped="" ref="0xb6c79620"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6c79e50"/>
        <function-ref name="start" scoped="" ref="0xb6c7be50"/>
        <function-ref name="stop" scoped="" ref="0xb6c79130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb6c7f100" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6c7f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c7fcc8"/>
        <function-ref name="get" scoped="" ref="0xb6c7fa08"/>
        <function-ref name="isSet" scoped="" ref="0xb6c7f748"/>
        <function-ref name="set" scoped="" ref="0xb6c7d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb6c7cc60" loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6c7cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb728ad68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6c7b2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6c841b0" loc="43:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6c841b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c84388"/>
        <function-ref name="ready" scoped="" ref="0xb6c84468"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c84548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb6c7d520" loc="51:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6c7d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c7c0f8"/>
        <function-ref name="get" scoped="" ref="0xb6c7de28"/>
        <function-ref name="isSet" scoped="" ref="0xb6c7db68"/>
        <function-ref name="set" scoped="" ref="0xb6c7c3b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0xb6c740e0" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6c740e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c742b8"/>
        <function-ref name="get" scoped="" ref="0xb6c74398"/>
        <function-ref name="setValue" scoped="" ref="0xb6c74478"/>
        <function-ref name="set" scoped="" ref="0xb6c74558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0xb6c75370" loc="63:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6c75370"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c75548"/>
        <function-ref name="get" scoped="" ref="0xb6c75628"/>
        <function-ref name="setValue" scoped="" ref="0xb6c75708"/>
        <function-ref name="set" scoped="" ref="0xb6c757e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb6c7c768" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6c7c768"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb6c7c940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb6c74de0" loc="67:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6c74de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6c73010"/>
        <function-ref name="suspend" scoped="" ref="0xb6c730f0"/>
        <function-ref name="resume" scoped="" ref="0xb6c731d0"/>
        <function-ref name="run" scoped="" ref="0xb6c732b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6c6dd18" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6c6dd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6c6def0"/>
        <function-ref name="request" scoped="" ref="0xb6c6c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0xb6c5a840" loc="74:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb6c5a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7326010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb6c5b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb6c6bf08" loc="56:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb6c6bf08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c69af8"/>
        <function-ref name="get" scoped="" ref="0xb6c69838"/>
        <function-ref name="isSet" scoped="" ref="0xb6c69578"/>
        <function-ref name="set" scoped="" ref="0xb6c69db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0xb6c59bc0" loc="80:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0xb6c59bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c59d98"/>
        <function-ref name="get" scoped="" ref="0xb6c59e78"/>
        <function-ref name="setValue" scoped="" ref="0xb6c58010"/>
        <function-ref name="set" scoped="" ref="0xb6c580f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xb6c6e768" loc="47:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb6c6e768"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb73917d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb73917d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6c6e940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb6c58b40" loc="83:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6c58b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb728ad68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6c57750"/>
        <function-ref name="clear" scoped="" ref="0xb6c57b00"/>
        <function-ref name="isValid" scoped="" ref="0xb6c573a0"/>
        <function-ref name="set" scoped="" ref="0xb6c57eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0xb6c61e98" loc="70:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb6c61e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6c600c0"/>
        <function-ref name="isInput" scoped="" ref="0xb6c601a0"/>
        <function-ref name="toggle" scoped="" ref="0xb6c60280"/>
        <function-ref name="isOutput" scoped="" ref="0xb6c60360"/>
        <function-ref name="get" scoped="" ref="0xb6c60440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6c60520"/>
        <function-ref name="set" scoped="" ref="0xb6c60600"/>
        <function-ref name="clr" scoped="" ref="0xb6c606e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6c56928" loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6c56928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6c56b00"/>
        <function-ref name="wait" scoped="" ref="0xb6c56be0"/>
        <function-ref name="cancel" scoped="" ref="0xb6c56cc0"/>
        <function-ref name="isFree" scoped="" ref="0xb6c56da0"/>
        <function-ref name="getNow" scoped="" ref="0xb6c56e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6c6eae8" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6c6eae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6c6ecc0"/>
        <function-ref name="turnOn" scoped="" ref="0xb6c6eda0"/>
        <function-ref name="setChannel" scoped="" ref="0xb6c6ee80"/>
        <function-ref name="done" scoped="" ref="0xb6c6d010"/>
        <function-ref name="standby" scoped="" ref="0xb6c6d0f0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6c6d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0xb6c5b378" loc="75:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6c5b378"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb728ad68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6c5b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb6c6cb60" loc="55:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6c6cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c6b780"/>
        <function-ref name="get" scoped="" ref="0xb6c6b4c0"/>
        <function-ref name="isSet" scoped="" ref="0xb6c6b200"/>
        <function-ref name="set" scoped="" ref="0xb6c6ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6c6c1c0" loc="53:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6c6c1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c6c398"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6c6c478"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c6c558"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6c6c638"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c6c718"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c6c7f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0xb6c614b0" loc="69:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xb6c614b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6c61688"/>
        <function-ref name="isInput" scoped="" ref="0xb6c61768"/>
        <function-ref name="toggle" scoped="" ref="0xb6c61848"/>
        <function-ref name="isOutput" scoped="" ref="0xb6c61928"/>
        <function-ref name="get" scoped="" ref="0xb6c61a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6c61ae8"/>
        <function-ref name="set" scoped="" ref="0xb6c61bc8"/>
        <function-ref name="clr" scoped="" ref="0xb6c61ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6c5bce0" loc="77:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6c5bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6c5beb8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6c59010"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6c590f0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xb6c591d0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb6c592b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6c6d8c8" loc="51:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6c6d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6c6daa0"/>
        <function-ref name="header" scoped="" ref="0xb6c6db80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0xb6c01910" loc="856:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0xb6c01910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6c01ae8"/>
        <function-ref name="runTask" scoped="" ref="0xb6c01bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb6c68300" loc="57:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6c68300"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c68ec8"/>
        <function-ref name="get" scoped="" ref="0xb6c68c08"/>
        <function-ref name="isSet" scoped="" ref="0xb6c68948"/>
        <function-ref name="set" scoped="" ref="0xb6c661b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb6c6e108" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb6c6e108"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb73917d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb73917d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6c6e2e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb6c64858" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb6c64858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6c64a30"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6c64b10"/>
        <function-ref name="request" scoped="" ref="0xb6c64bf0"/>
        <function-ref name="granted" scoped="" ref="0xb6c64cd0"/>
        <function-ref name="isOwner" scoped="" ref="0xb6c64db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0xb6c65d58" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xb6c65d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6c64010"/>
        <function-ref name="isInput" scoped="" ref="0xb6c640f0"/>
        <function-ref name="toggle" scoped="" ref="0xb6c641d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6c642b0"/>
        <function-ref name="get" scoped="" ref="0xb6c64390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6c64470"/>
        <function-ref name="set" scoped="" ref="0xb6c64550"/>
        <function-ref name="clr" scoped="" ref="0xb6c64630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb6c666c0" loc="58:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6c666c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c652d0"/>
        <function-ref name="get" scoped="" ref="0xb6c65010"/>
        <function-ref name="isSet" scoped="" ref="0xb6c66d08"/>
        <function-ref name="set" scoped="" ref="0xb6c65590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6c6d370" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6c6d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c6d548"/>
        <function-ref name="ready" scoped="" ref="0xb6c6d628"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c6d708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0xb6c5e010" loc="72:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb6c5e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb6c5e1e8"/>
        <function-ref name="disable" scoped="" ref="0xb6c5e2c8"/>
        <function-ref name="captured" scoped="" ref="0xb6c5e3a8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb6c5e488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0xb6c5fd60" loc="67:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb6c5fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb6c61010"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb6c610f0"/>
        <function-ref name="splitRead" scoped="" ref="0xb6c611d0"/>
        <function-ref name="write" scoped="" ref="0xb6c612b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0xb6c58338" loc="81:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6c58338"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c58510"/>
        <function-ref name="get" scoped="" ref="0xb6c585f0"/>
        <function-ref name="setValue" scoped="" ref="0xb6c586d0"/>
        <function-ref name="set" scoped="" ref="0xb6c587b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0xb6c59528" loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6c59528"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6c59700"/>
        <function-ref name="get" scoped="" ref="0xb6c597e0"/>
        <function-ref name="setValue" scoped="" ref="0xb6c598c0"/>
        <function-ref name="set" scoped="" ref="0xb6c599a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb6c65940" loc="59:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6c65940"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb6c65b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb6c56308" loc="85:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6c56308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6c564e0"/>
        <function-ref name="suspend" scoped="" ref="0xb6c565c0"/>
        <function-ref name="resume" scoped="" ref="0xb6c566a0"/>
        <function-ref name="run" scoped="" ref="0xb6c56780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0xb6bdadb8" loc="46:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb6bdadb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6bd9010"/>
        <function-ref name="isInput" scoped="" ref="0xb6bd90f0"/>
        <function-ref name="toggle" scoped="" ref="0xb6bd91d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6bd92b0"/>
        <function-ref name="get" scoped="" ref="0xb6bd9390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6bd9470"/>
        <function-ref name="set" scoped="" ref="0xb6bd9550"/>
        <function-ref name="clr" scoped="" ref="0xb6bd9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0xb6bda3d0" loc="45:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xb6bda3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6bda5a8"/>
        <function-ref name="isInput" scoped="" ref="0xb6bda688"/>
        <function-ref name="toggle" scoped="" ref="0xb6bda768"/>
        <function-ref name="isOutput" scoped="" ref="0xb6bda848"/>
        <function-ref name="get" scoped="" ref="0xb6bda928"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6bdaa08"/>
        <function-ref name="set" scoped="" ref="0xb6bdaae8"/>
        <function-ref name="clr" scoped="" ref="0xb6bdabc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6bd8030" loc="49:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6bd8030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb728ad68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6bd74e0"/>
        <function-ref name="fired" scoped="" ref="0xb6bd8c98"/>
        <function-ref name="startAt" scoped="" ref="0xb6bd71a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb6bd8f10"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6bd7758"/>
        <function-ref name="start" scoped="" ref="0xb6bd8780"/>
        <function-ref name="stop" scoped="" ref="0xb6bd8a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0xb6bdb5b8" loc="42:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb6bdb5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6bdb790"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6bdb870"/>
        <function-ref name="request" scoped="" ref="0xb6bdb950"/>
        <function-ref name="granted" scoped="" ref="0xb6bdba30"/>
        <function-ref name="isOwner" scoped="" ref="0xb6bdbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0xb6bdeb08" loc="41:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xb6bdeb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6bdece0"/>
        <function-ref name="isInput" scoped="" ref="0xb6bdedc0"/>
        <function-ref name="toggle" scoped="" ref="0xb6bdeea0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6bdb010"/>
        <function-ref name="get" scoped="" ref="0xb6bdb0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6bdb1d0"/>
        <function-ref name="set" scoped="" ref="0xb6bdb2b0"/>
        <function-ref name="clr" scoped="" ref="0xb6bdb390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xb6bd9820" loc="48:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb6bd9820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb6bd99f8"/>
        <function-ref name="disable" scoped="" ref="0xb6bd9ad8"/>
        <function-ref name="captured" scoped="" ref="0xb6bd9bb8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb6bd9c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb6bdbcc0" loc="43:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb6bdbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb6bdbe98"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb6bda010"/>
        <function-ref name="splitRead" scoped="" ref="0xb6bda0f0"/>
        <function-ref name="write" scoped="" ref="0xb6bda1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb6bd7b48" loc="50:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6bd7b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb728ad68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6bd6200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0xb6bcc420" loc="46:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0xb6bcc420"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6bcc5f8"/>
        <function-ref name="isInput" scoped="" ref="0xb6bcc6d8"/>
        <function-ref name="toggle" scoped="" ref="0xb6bcc7b8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6bcc898"/>
        <function-ref name="get" scoped="" ref="0xb6bcc978"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6bcca58"/>
        <function-ref name="set" scoped="" ref="0xb6bccb38"/>
        <function-ref name="clr" scoped="" ref="0xb6bccc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0xb6bcd660" loc="45:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb6bcd660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb6bcc110"/>
        <function-ref name="test" scoped="" ref="0xb6bd0be0"/>
        <function-ref name="get" scoped="" ref="0xb6bcdca8"/>
        <function-ref name="captured" scoped="" ref="0xb6bd01d8"/>
        <function-ref name="reset" scoped="" ref="0xb6bd0478"/>
        <function-ref name="isOn" scoped="" ref="0xb6bd0e58"/>
        <function-ref name="set" scoped="" ref="0xb6bcdf20"/>
        <function-ref name="start" scoped="" ref="0xb6bd06f0"/>
        <function-ref name="stop" scoped="" ref="0xb6bd0968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0xb6bcce20" loc="47:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0xb6bcce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6bcb010"/>
        <function-ref name="isInput" scoped="" ref="0xb6bcb0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb6bcb1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6bcb2b0"/>
        <function-ref name="get" scoped="" ref="0xb6bcb390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6bcb470"/>
        <function-ref name="set" scoped="" ref="0xb6bcb550"/>
        <function-ref name="clr" scoped="" ref="0xb6bcb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb6bd2030" loc="40:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb6bd2030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6bd2208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xb6bd6980" loc="39:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb6bd6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb6bd6b58"/>
        <function-ref name="disable" scoped="" ref="0xb6bd6c38"/>
        <function-ref name="captured" scoped="" ref="0xb6bd6d18"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb6bd6df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb6bbb500" loc="84:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb6bbb500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6bbb6d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6bbb7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb6bc2aa0" loc="82:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb6bc2aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb6bc2c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6bd4d98" loc="81:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6bd4d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6bc2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb6bc2e48" loc="83:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb6bc2e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb6bc1050"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb6bc1130"/>
        <function-ref name="splitRead" scoped="" ref="0xb6bc1210"/>
        <function-ref name="write" scoped="" ref="0xb6bc12f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6bbbc50" loc="85:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6bbbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6bbbe28"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6bbbf08"/>
        <function-ref name="request" scoped="" ref="0xb6bc0010"/>
        <function-ref name="granted" scoped="" ref="0xb6bc00f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb6bc01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0xb6bb82d8" loc="95:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6bb82d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6bb84b0"/>
        <function-ref name="configure" scoped="" ref="0xb6bb8590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0xb6b95390" loc="294:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0xb6b95390"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6b95568"/>
        <function-ref name="runTask" scoped="" ref="0xb6b95648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb6bb9b38" loc="94:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb6bb9b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6bb9d10"/>
        <function-ref name="sendDone" scoped="" ref="0xb6bb9df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb6bb9198" loc="92:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb6bb9198"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb6bb9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6bc0d80" loc="91:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6bc0d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6bb9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0xb6ba71c8" loc="98:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0xb6ba71c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb6ba73a0"/>
        <function-ref name="sleep" scoped="" ref="0xb6bb77f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb6ba7560"/>
        <function-ref name="dataReady" scoped="" ref="0xb6bb78d0"/>
        <function-ref name="initMaster" scoped="" ref="0xb6ba7720"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb6ba7800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb6ba78e0"/>
        <function-ref name="read" scoped="" ref="0xb6ba79c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb6ba7aa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb6ba7b80"/>
        <function-ref name="setClock" scoped="" ref="0xb6ba7c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6ba7d40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb6ba7e20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb6bb7010"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb6bb70f0"/>
        <function-ref name="write" scoped="" ref="0xb6bb71d0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb6bb72b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb6bb7390"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb6bb7470"/>
        <function-ref name="getClock" scoped="" ref="0xb6bb7550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb6bb7630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb6ba7480"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb6ba7640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb6bb7710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb6bb9520" loc="93:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb6bb9520"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb6bb96f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb6bb97d8"/>
        <function-ref name="splitRead" scoped="" ref="0xb6bb98b8"/>
        <function-ref name="write" scoped="" ref="0xb6bb9998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xb6bb7a98" loc="99:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb6bb7a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb6bb7c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0xb6bbfe40" loc="76:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0xb6bbfe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb6b82050"/>
        <function-ref name="sleep" scoped="" ref="0xb6b81470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb6b82210"/>
        <function-ref name="dataReady" scoped="" ref="0xb6b81550"/>
        <function-ref name="initMaster" scoped="" ref="0xb6b823d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb6b824b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb6b82590"/>
        <function-ref name="read" scoped="" ref="0xb6b82670"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb6b82750"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb6b82830"/>
        <function-ref name="setClock" scoped="" ref="0xb6b82910"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6b829f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb6b82ad0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb6b82c30"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb6b82d10"/>
        <function-ref name="write" scoped="" ref="0xb6b82df0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb6b82ed0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb6b81010"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb6b810f0"/>
        <function-ref name="getClock" scoped="" ref="0xb6b811d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb6b812b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb6b82130"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb6b822f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb6b81390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0xb6b7be88" loc="81:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0xb6b7be88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6b79070"/>
        <function-ref name="isInput" scoped="" ref="0xb6b79150"/>
        <function-ref name="toggle" scoped="" ref="0xb6b79230"/>
        <function-ref name="isOutput" scoped="" ref="0xb6b79310"/>
        <function-ref name="get" scoped="" ref="0xb6b793f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6b794d0"/>
        <function-ref name="set" scoped="" ref="0xb6b795b0"/>
        <function-ref name="clr" scoped="" ref="0xb6b79690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0xb6b7c9e8" loc="79:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0xb6b7c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6b7cbc0"/>
        <function-ref name="isInput" scoped="" ref="0xb6b7cca0"/>
        <function-ref name="toggle" scoped="" ref="0xb6b7cd80"/>
        <function-ref name="isOutput" scoped="" ref="0xb6b7ce60"/>
        <function-ref name="get" scoped="" ref="0xb6b7b010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6b7b0f0"/>
        <function-ref name="set" scoped="" ref="0xb6b7b1d0"/>
        <function-ref name="clr" scoped="" ref="0xb6b7b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0xb6b7c010" loc="78:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0xb6b7c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6b7c1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb6b7c2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb6b7c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6b7c488"/>
        <function-ref name="get" scoped="" ref="0xb6b7c568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6b7c648"/>
        <function-ref name="set" scoped="" ref="0xb6b7c728"/>
        <function-ref name="clr" scoped="" ref="0xb6b7c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xb6b7aac0" loc="75:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xb6b7aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6b7ac98"/>
        <function-ref name="stop" scoped="" ref="0xb6b7ad78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0xb6b79898" loc="82:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0xb6b79898"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb6b79a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0xb6b7e1c8" loc="74:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0xb6b7e1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb6b7e3a0"/>
        <function-ref name="sleep" scoped="" ref="0xb6b7d7f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb6b7e560"/>
        <function-ref name="dataReady" scoped="" ref="0xb6b7d8d0"/>
        <function-ref name="initMaster" scoped="" ref="0xb6b7e720"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb6b7e800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb6b7e8e0"/>
        <function-ref name="read" scoped="" ref="0xb6b7e9c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb6b7eaa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb6b7eb80"/>
        <function-ref name="setClock" scoped="" ref="0xb6b7ec60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6b7ed40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb6b7ee20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb6b7d010"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb6b7d0f0"/>
        <function-ref name="write" scoped="" ref="0xb6b7d1d0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb6b7d2b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb6b7d390"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb6b7d470"/>
        <function-ref name="getClock" scoped="" ref="0xb6b7d550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb6b7d630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb6b7e480"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb6b7e640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb6b7d710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0xb6b7b4a0" loc="80:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0xb6b7b4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6b7b678"/>
        <function-ref name="isInput" scoped="" ref="0xb6b7b758"/>
        <function-ref name="toggle" scoped="" ref="0xb6b7b838"/>
        <function-ref name="isOutput" scoped="" ref="0xb6b7b918"/>
        <function-ref name="get" scoped="" ref="0xb6b7b9f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6b7bad8"/>
        <function-ref name="set" scoped="" ref="0xb6b7bbb8"/>
        <function-ref name="clr" scoped="" ref="0xb6b7bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb6b528d8" loc="86:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb6b528d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb6b52ac0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6b52ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb6b51208" loc="89:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6b51208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6b513f0"/>
        <function-ref name="configure" scoped="" ref="0xb6b514d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6b52198" loc="85:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6b52198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6b52380"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6b52460"/>
        <function-ref name="request" scoped="" ref="0xb6b52540"/>
        <function-ref name="granted" scoped="" ref="0xb6b52620"/>
        <function-ref name="isOwner" scoped="" ref="0xb6b52700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb6b52ce0" loc="87:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb6b52ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb6b52eb8"/>
        <function-ref name="userId" scoped="" ref="0xb6b51010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5fe5c98" loc="44:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb5fe5c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5fe5e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb5fe3010" loc="45:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb5fe3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5fe31e8"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5fe32c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb5fe33a8"/>
        <function-ref name="dequeue" scoped="" ref="0xb5fe3488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb5fe2750" loc="52:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb5fe2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb5fe2938"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5fe2a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb5fe1030" loc="56:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5fe1030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5fe1218"/>
        <function-ref name="configure" scoped="" ref="0xb5fe12f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb5fe1458" loc="57:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb5fe1458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5fe1630"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5fe1710"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb5fe17f0"/>
        <function-ref name="dequeue" scoped="" ref="0xb5fe18d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5fe2010" loc="51:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb5fe2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5fe21f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5fe22d8"/>
        <function-ref name="request" scoped="" ref="0xb5fe23b8"/>
        <function-ref name="granted" scoped="" ref="0xb5fe2498"/>
        <function-ref name="isOwner" scoped="" ref="0xb5fe2578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb5fe2b58" loc="53:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5fe2b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb5fe2d30"/>
        <function-ref name="userId" scoped="" ref="0xb5fe2e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb5fe1a50" loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb5fe1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5fe1c28"/>
        <function-ref name="runTask" scoped="" ref="0xb5fe1d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6b43c88" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6b43c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb6b43e60"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6b47010"/>
        <function-ref name="getControlA" scoped="" ref="0xb6b470f0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6b471d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6b472b0"/>
        <function-ref name="setControlB" scoped="" ref="0xb6b47390"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6b47470"/>
        <function-ref name="getControlB" scoped="" ref="0xb6b47550"/>
        <function-ref name="setControlC" scoped="" ref="0xb6b47630"/>
        <function-ref name="setControlA" scoped="" ref="0xb6b47710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6b47a48" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb6b47a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb6b41500"/>
        <function-ref name="test" scoped="" ref="0xb6b41010"/>
        <function-ref name="get" scoped="" ref="0xb6b460a8"/>
        <function-ref name="captured" scoped="" ref="0xb6b465c0"/>
        <function-ref name="reset" scoped="" ref="0xb6b46860"/>
        <function-ref name="isOn" scoped="" ref="0xb6b41288"/>
        <function-ref name="set" scoped="" ref="0xb6b46320"/>
        <function-ref name="start" scoped="" ref="0xb6b46ad8"/>
        <function-ref name="stop" scoped="" ref="0xb6b46d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6b41c10" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb6b41c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6b3e1a0"/>
        <function-ref name="fired" scoped="" ref="0xb6b40790"/>
        <function-ref name="get" scoped="" ref="0xb6b40278"/>
        <function-ref name="reset" scoped="" ref="0xb6b40a08"/>
        <function-ref name="isOn" scoped="" ref="0xb6b3e418"/>
        <function-ref name="set" scoped="" ref="0xb6b404f0"/>
        <function-ref name="start" scoped="" ref="0xb6b40c80"/>
        <function-ref name="stop" scoped="" ref="0xb6b40ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6b4b328" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6b4b328"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6b4ad68"/>
        <function-ref name="test" scoped="" ref="0xb6b4a878"/>
        <function-ref name="get" scoped="" ref="0xb6b4b970"/>
        <function-ref name="setScale" scoped="" ref="0xb6b48010"/>
        <function-ref name="getScale" scoped="" ref="0xb6b482b0"/>
        <function-ref name="reset" scoped="" ref="0xb6b4a110"/>
        <function-ref name="overflow" scoped="" ref="0xb6b4be88"/>
        <function-ref name="isOn" scoped="" ref="0xb6b4aaf0"/>
        <function-ref name="set" scoped="" ref="0xb6b4bbe8"/>
        <function-ref name="start" scoped="" ref="0xb6b4a388"/>
        <function-ref name="stop" scoped="" ref="0xb6b4a600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6b383c8" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6b383c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb6b385a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6b38680"/>
        <function-ref name="getControlA" scoped="" ref="0xb6b38760"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6b38840"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6b38920"/>
        <function-ref name="setControlB" scoped="" ref="0xb6b38a00"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6b38ae0"/>
        <function-ref name="getControlB" scoped="" ref="0xb6b38bc0"/>
        <function-ref name="setControlC" scoped="" ref="0xb6b38ca0"/>
        <function-ref name="setControlA" scoped="" ref="0xb6b38d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xb6b35010" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xb6b35010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6b33578"/>
        <function-ref name="fired" scoped="" ref="0xb6b35b70"/>
        <function-ref name="get" scoped="" ref="0xb6b35658"/>
        <function-ref name="reset" scoped="" ref="0xb6b35de8"/>
        <function-ref name="isOn" scoped="" ref="0xb6b337f0"/>
        <function-ref name="set" scoped="" ref="0xb6b358d0"/>
        <function-ref name="start" scoped="" ref="0xb6b33088"/>
        <function-ref name="stop" scoped="" ref="0xb6b33300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6b370f0" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb6b370f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb6b36b80"/>
        <function-ref name="test" scoped="" ref="0xb6b36690"/>
        <function-ref name="get" scoped="" ref="0xb6b37738"/>
        <function-ref name="captured" scoped="" ref="0xb6b37c50"/>
        <function-ref name="reset" scoped="" ref="0xb6b37ef0"/>
        <function-ref name="isOn" scoped="" ref="0xb6b36908"/>
        <function-ref name="set" scoped="" ref="0xb6b379b0"/>
        <function-ref name="start" scoped="" ref="0xb6b361a0"/>
        <function-ref name="stop" scoped="" ref="0xb6b36418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xb6b33c08" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xb6b33c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6b311a0"/>
        <function-ref name="fired" scoped="" ref="0xb6b32790"/>
        <function-ref name="get" scoped="" ref="0xb6b32278"/>
        <function-ref name="reset" scoped="" ref="0xb6b32a08"/>
        <function-ref name="isOn" scoped="" ref="0xb6b31418"/>
        <function-ref name="set" scoped="" ref="0xb6b324f0"/>
        <function-ref name="start" scoped="" ref="0xb6b32c80"/>
        <function-ref name="stop" scoped="" ref="0xb6b32ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xb6b31830" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xb6b31830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6b2fd90"/>
        <function-ref name="fired" scoped="" ref="0xb6b2f3b0"/>
        <function-ref name="get" scoped="" ref="0xb6b31e78"/>
        <function-ref name="reset" scoped="" ref="0xb6b2f628"/>
        <function-ref name="isOn" scoped="" ref="0xb6b2e048"/>
        <function-ref name="set" scoped="" ref="0xb6b2f110"/>
        <function-ref name="start" scoped="" ref="0xb6b2f8a0"/>
        <function-ref name="stop" scoped="" ref="0xb6b2fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6b3b0e0" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6b3b0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6b3ab30"/>
        <function-ref name="test" scoped="" ref="0xb6b3a640"/>
        <function-ref name="get" scoped="" ref="0xb6b3b728"/>
        <function-ref name="setScale" scoped="" ref="0xb6b3ada8"/>
        <function-ref name="getScale" scoped="" ref="0xb6b38068"/>
        <function-ref name="reset" scoped="" ref="0xb6b3beb8"/>
        <function-ref name="overflow" scoped="" ref="0xb6b3bc40"/>
        <function-ref name="isOn" scoped="" ref="0xb6b3a8b8"/>
        <function-ref name="set" scoped="" ref="0xb6b3b9a0"/>
        <function-ref name="start" scoped="" ref="0xb6b3a150"/>
        <function-ref name="stop" scoped="" ref="0xb6b3a3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6aed850" loc="30:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6aed850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7300db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6abed58"/>
        <function-ref name="fired" scoped="" ref="0xb6abe528"/>
        <function-ref name="startAt" scoped="" ref="0xb6abea18"/>
        <function-ref name="isRunning" scoped="" ref="0xb6abe7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6abd010"/>
        <function-ref name="start" scoped="" ref="0xb6abe010"/>
        <function-ref name="stop" scoped="" ref="0xb6abe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6ae6480" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6ae6480"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb73915d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb73915d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6ae6658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6ae6868" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6ae6868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6adc2e0"/>
        <function-ref name="test" scoped="" ref="0xb6adddd0"/>
        <function-ref name="get" scoped="" ref="0xb6ae6eb0"/>
        <function-ref name="setScale" scoped="" ref="0xb6adc558"/>
        <function-ref name="getScale" scoped="" ref="0xb6adc7f8"/>
        <function-ref name="reset" scoped="" ref="0xb6add668"/>
        <function-ref name="overflow" scoped="" ref="0xb6add3f0"/>
        <function-ref name="isOn" scoped="" ref="0xb6adc068"/>
        <function-ref name="set" scoped="" ref="0xb6add150"/>
        <function-ref name="start" scoped="" ref="0xb6add8e0"/>
        <function-ref name="stop" scoped="" ref="0xb6addb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb5fcbc78" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb5fcbc78"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0xb73913d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0xb73913d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7300db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb5fc9150"/>
        <function-ref name="fired" scoped="" ref="0xb5fca908"/>
        <function-ref name="startAt" scoped="" ref="0xb5fcadf8"/>
        <function-ref name="isRunning" scoped="" ref="0xb5fcab80"/>
        <function-ref name="getAlarm" scoped="" ref="0xb5fc93c8"/>
        <function-ref name="start" scoped="" ref="0xb5fca3f0"/>
        <function-ref name="stop" scoped="" ref="0xb5fca690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0xb5fbd978" loc="58:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0xb5fbd978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb5fbcf08"/>
        <function-ref name="fired" scoped="" ref="0xb5fbc528"/>
        <function-ref name="get" scoped="" ref="0xb5fbc010"/>
        <function-ref name="reset" scoped="" ref="0xb5fbc7a0"/>
        <function-ref name="isOn" scoped="" ref="0xb5fba1a0"/>
        <function-ref name="set" scoped="" ref="0xb5fbc288"/>
        <function-ref name="start" scoped="" ref="0xb5fbca18"/>
        <function-ref name="stop" scoped="" ref="0xb5fbcc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0xb5fc9688" loc="57:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0xb5fc9688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb5fbd1a0"/>
        <function-ref name="test" scoped="" ref="0xb5fbec90"/>
        <function-ref name="get" scoped="" ref="0xb5fc9cd0"/>
        <function-ref name="setScale" scoped="" ref="0xb5fbd418"/>
        <function-ref name="getScale" scoped="" ref="0xb5fbd6b8"/>
        <function-ref name="reset" scoped="" ref="0xb5fbe528"/>
        <function-ref name="overflow" scoped="" ref="0xb5fbe2b0"/>
        <function-ref name="isOn" scoped="" ref="0xb5fbef08"/>
        <function-ref name="set" scoped="" ref="0xb5fbe010"/>
        <function-ref name="start" scoped="" ref="0xb5fbe7a0"/>
        <function-ref name="stop" scoped="" ref="0xb5fbea18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6aba1d0" loc="39:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6aba1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7326010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6aba818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6ab73a0" loc="24:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6ab73a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7300db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6ab7af0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6ab6010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6ab7d68"/>
        <function-ref name="overflow" scoped="" ref="0xb6ab6288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6ab4b30" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6ab4b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7300db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6ab3308"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6ab37f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6ab3580"/>
        <function-ref name="overflow" scoped="" ref="0xb6ab3a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6ab3d50" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6ab3d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6aa77f0"/>
        <function-ref name="test" scoped="" ref="0xb6aa7300"/>
        <function-ref name="get" scoped="" ref="0xb6aa93e0"/>
        <function-ref name="setScale" scoped="" ref="0xb6aa7a68"/>
        <function-ref name="getScale" scoped="" ref="0xb6aa7d08"/>
        <function-ref name="reset" scoped="" ref="0xb6aa9b70"/>
        <function-ref name="overflow" scoped="" ref="0xb6aa98f8"/>
        <function-ref name="isOn" scoped="" ref="0xb6aa7578"/>
        <function-ref name="set" scoped="" ref="0xb6aa9658"/>
        <function-ref name="start" scoped="" ref="0xb6aa9de8"/>
        <function-ref name="stop" scoped="" ref="0xb6aa7088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb6a950e0" loc="63:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xb6a950e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7326010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6a95830"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6a95d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6a95aa8"/>
        <function-ref name="overflow" scoped="" ref="0xb6a93010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6ab8e60" loc="62:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6ab8e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7326010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6aa55e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6aa5ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6aa5858"/>
        <function-ref name="overflow" scoped="" ref="0xb6aa5d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6a93f18" loc="48:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6a93f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7326010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6a92578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb6a928c8" loc="49:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6a928c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7326010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6a91048"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6a91538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6a912c0"/>
        <function-ref name="overflow" scoped="" ref="0xb6a917b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0xb6a8c010" loc="36:/home/wsn/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb6a8c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7326010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb6a8c760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6a5bd50" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6a5bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a5bf28"/>
        <function-ref name="getPayload" scoped="" ref="0xb67ff018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb67ff0f8"/>
        <function-ref name="cancel" scoped="" ref="0xb67ff1d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb67ff2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb67ff3f8" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb67ff3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb67ff5d0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb67ff6b0"/>
        <function-ref name="getPayload" scoped="" ref="0xb67ff790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb67ff870"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb67ff950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb67ffa90" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb67ffa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb67ffc68"/>
        <function-ref name="source" scoped="" ref="0xb67ffd48"/>
        <function-ref name="address" scoped="" ref="0xb67ffe28"/>
        <function-ref name="destination" scoped="" ref="0xb67fff08"/>
        <function-ref name="setSource" scoped="" ref="0xb67fe010"/>
        <function-ref name="setDestination" scoped="" ref="0xb67fe0f0"/>
        <function-ref name="type" scoped="" ref="0xb67fe1d0"/>
        <function-ref name="setType" scoped="" ref="0xb67fe2b0"/>
        <function-ref name="isForMe" scoped="" ref="0xb67fe390"/>
        <function-ref name="setGroup" scoped="" ref="0xb67fe470"/>
        <function-ref name="localGroup" scoped="" ref="0xb67fe550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb67fe6b0" loc="52:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb67fe6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb67fe888"/>
        <function-ref name="noAck" scoped="" ref="0xb67fe968"/>
        <function-ref name="wasAcked" scoped="" ref="0xb67fea48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb5fa3a18" loc="44:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb5fa3a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5fa3bf0"/>
        <function-ref name="getPayload" scoped="" ref="0xb5fa3cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5fa3db0"/>
        <function-ref name="cancel" scoped="" ref="0xb5fa3e90"/>
        <function-ref name="sendDone" scoped="" ref="0xb5fa0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xb5fa0180" loc="46:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb5fa0180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5fa0358"/>
        <function-ref name="getPayload" scoped="" ref="0xb5fa0438"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5fa0518"/>
        <function-ref name="cancel" scoped="" ref="0xb5fa05f8"/>
        <function-ref name="sendDone" scoped="" ref="0xb5fa06d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb5fa0818" loc="47:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb5fa0818"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb5fa09f0"/>
        <function-ref name="source" scoped="" ref="0xb5fa0ad0"/>
        <function-ref name="address" scoped="" ref="0xb5fa0bb0"/>
        <function-ref name="destination" scoped="" ref="0xb5fa0c90"/>
        <function-ref name="setSource" scoped="" ref="0xb5fa0d70"/>
        <function-ref name="setDestination" scoped="" ref="0xb5fa0e50"/>
        <function-ref name="type" scoped="" ref="0xb5f9f010"/>
        <function-ref name="setType" scoped="" ref="0xb5f9f0f0"/>
        <function-ref name="isForMe" scoped="" ref="0xb5f9f1d0"/>
        <function-ref name="setGroup" scoped="" ref="0xb5f9f2b0"/>
        <function-ref name="localGroup" scoped="" ref="0xb5f9f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6a4c990" loc="44:/home/wsn/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6a4c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a4cb68"/>
        <function-ref name="getPayload" scoped="" ref="0xb6a4cc48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a4cd28"/>
        <function-ref name="cancel" scoped="" ref="0xb6a4ce08"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a4cee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb6a1f0a8" loc="48:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6a1f0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a1f290"/>
        <function-ref name="getPayload" scoped="" ref="0xb6a1f370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a1f450"/>
        <function-ref name="cancel" scoped="" ref="0xb6a1f530"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a1f610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6a47908" loc="46:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6a47908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a47af0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6a47bd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a47cb0"/>
        <function-ref name="cancel" scoped="" ref="0xb6a47d90"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a47e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb6a1e3f0" loc="50:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6a1e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a1e5c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a1e6a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6a1e788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a1e868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a1e948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0xb6a1eac8" loc="169:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0xb6a1eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6a1eca0"/>
        <function-ref name="runTask" scoped="" ref="0xb6a1ed80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0xb6a1ef00" loc="126:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0xb6a1ef00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6a1d0f0"/>
        <function-ref name="runTask" scoped="" ref="0xb6a1d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb6a1f750" loc="49:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6a1f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6a1f928"/>
        <function-ref name="source" scoped="" ref="0xb6a1fa08"/>
        <function-ref name="address" scoped="" ref="0xb6a1fae8"/>
        <function-ref name="destination" scoped="" ref="0xb6a1fbc8"/>
        <function-ref name="setSource" scoped="" ref="0xb6a1fca8"/>
        <function-ref name="setDestination" scoped="" ref="0xb6a1fd88"/>
        <function-ref name="type" scoped="" ref="0xb6a1fe68"/>
        <function-ref name="setType" scoped="" ref="0xb6a1e010"/>
        <function-ref name="isForMe" scoped="" ref="0xb6a1e0f0"/>
        <function-ref name="setGroup" scoped="" ref="0xb6a1e1d0"/>
        <function-ref name="localGroup" scoped="" ref="0xb6a1e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6a1a2e0" loc="46:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6a1a2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6a1a4b8"/>
        <function-ref name="stopDone" scoped="" ref="0xb6a1a598"/>
        <function-ref name="start" scoped="" ref="0xb6a1a678"/>
        <function-ref name="stop" scoped="" ref="0xb6a1a758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6a1abb8" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6a1abb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a1ad90"/>
        <function-ref name="getPayload" scoped="" ref="0xb6a1ae70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a19010"/>
        <function-ref name="cancel" scoped="" ref="0xb6a190f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a191d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6a19990" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6a19990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a19b68"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a19c48"/>
        <function-ref name="getPayload" scoped="" ref="0xb6a19d28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a19e08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a19ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6a19638" loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6a19638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a19810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6a17370" loc="53:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6a17370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6a17548"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6a17628"/>
        <function-ref name="led1On" scoped="" ref="0xb6a17708"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb6a177e8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6a178c8"/>
        <function-ref name="get" scoped="" ref="0xb6a179a8"/>
        <function-ref name="led1Off" scoped="" ref="0xb6a17a88"/>
        <function-ref name="led2Off" scoped="" ref="0xb6a17e08"/>
        <function-ref name="set" scoped="" ref="0xb6a17b68"/>
        <function-ref name="led0On" scoped="" ref="0xb6a17c48"/>
        <function-ref name="led2On" scoped="" ref="0xb6a17d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb6a18d70" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6a18d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6a17010"/>
        <function-ref name="noAck" scoped="" ref="0xb6a170f0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6a171d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6a180b8" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6a180b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6a18290"/>
        <function-ref name="source" scoped="" ref="0xb6a18370"/>
        <function-ref name="address" scoped="" ref="0xb6a18450"/>
        <function-ref name="destination" scoped="" ref="0xb6a18530"/>
        <function-ref name="setSource" scoped="" ref="0xb6a18610"/>
        <function-ref name="setDestination" scoped="" ref="0xb6a186f0"/>
        <function-ref name="type" scoped="" ref="0xb6a187d0"/>
        <function-ref name="setType" scoped="" ref="0xb6a188b0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6a18990"/>
        <function-ref name="setGroup" scoped="" ref="0xb6a18a70"/>
        <function-ref name="localGroup" scoped="" ref="0xb6a18b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb69e39f8" loc="54:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb69e39f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb69e3bd0"/>
        <function-ref name="getPayload" scoped="" ref="0xb69e3cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb69e3d90"/>
        <function-ref name="cancel" scoped="" ref="0xb69e3e70"/>
        <function-ref name="sendDone" scoped="" ref="0xb69e2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb69e2170" loc="55:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb69e2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb69e2348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6a15738" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6a15738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a15920"/>
        <function-ref name="getPayload" scoped="" ref="0xb6a15a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a15ae0"/>
        <function-ref name="cancel" scoped="" ref="0xb6a15bc0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a15ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6a14d88" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6a14d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb69e3010"/>
        <function-ref name="payloadLength" scoped="" ref="0xb69e30f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb69e31d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb69e32b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb69e3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6a15e78" loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6a15e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a14070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb69e34d0" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb69e34d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb69e36a8"/>
        <function-ref name="noAck" scoped="" ref="0xb69e3788"/>
        <function-ref name="wasAcked" scoped="" ref="0xb69e3868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6a141b0" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6a141b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6a14388"/>
        <function-ref name="source" scoped="" ref="0xb6a14468"/>
        <function-ref name="address" scoped="" ref="0xb6a14548"/>
        <function-ref name="destination" scoped="" ref="0xb6a14628"/>
        <function-ref name="setSource" scoped="" ref="0xb6a14708"/>
        <function-ref name="setDestination" scoped="" ref="0xb6a147e8"/>
        <function-ref name="type" scoped="" ref="0xb6a148c8"/>
        <function-ref name="setType" scoped="" ref="0xb6a149a8"/>
        <function-ref name="isForMe" scoped="" ref="0xb6a14a88"/>
        <function-ref name="setGroup" scoped="" ref="0xb6a14b68"/>
        <function-ref name="localGroup" scoped="" ref="0xb6a14c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb69e18f0" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb69e18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb69e1ac8"/>
        <function-ref name="stopDone" scoped="" ref="0xb69e1ba8"/>
        <function-ref name="start" scoped="" ref="0xb69e1c88"/>
        <function-ref name="stop" scoped="" ref="0xb69e1d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb69de7e0" loc="52:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb69de7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb7279cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb69de9b8"/>
        <function-ref name="getPayload" scoped="" ref="0xb69dea98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb69deb78"/>
        <function-ref name="cancel" scoped="" ref="0xb69dec58"/>
        <function-ref name="sendDone" scoped="" ref="0xb69ded38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb69e1558" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb69e1558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb69e1730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb69de1d8" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb69de1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb7279cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb69de3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb69dc3f0" loc="56:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb69dc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb69dc5c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb69dc6a8"/>
        <function-ref name="led1On" scoped="" ref="0xb69dc788"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb69dc868"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb69dc948"/>
        <function-ref name="get" scoped="" ref="0xb69dca28"/>
        <function-ref name="led1Off" scoped="" ref="0xb69dcb08"/>
        <function-ref name="led2Off" scoped="" ref="0xb69dce88"/>
        <function-ref name="set" scoped="" ref="0xb69dcbe8"/>
        <function-ref name="led0On" scoped="" ref="0xb69dccc8"/>
        <function-ref name="led2On" scoped="" ref="0xb69dcda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0xb69daea8" loc="55:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0xb69daea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb7279cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb69dc0c0"/>
        <function-ref name="offset" scoped="" ref="0xb69dc1a0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb69dc280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb69c8978" loc="66:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb69c8978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb69c8b50"/>
        <function-ref name="stopDone" scoped="" ref="0xb69c8c30"/>
        <function-ref name="start" scoped="" ref="0xb69c8d10"/>
        <function-ref name="stop" scoped="" ref="0xb69c8df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0xb698d9d0" loc="332:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0xb698d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb698dba8"/>
        <function-ref name="runTask" scoped="" ref="0xb698dc88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0xb69c5a40" loc="74:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0xb69c5a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb69c5c18"/>
        <function-ref name="stop" scoped="" ref="0xb69c5cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0xb69add40" loc="191:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0xb69add40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb69adf18"/>
        <function-ref name="runTask" scoped="" ref="0xb69ac010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb69c85e0" loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb69c85e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb69c87b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0xb69c2a40" loc="75:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0xb69c2a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0xb69c2c18"/>
        <function-ref name="flush" scoped="" ref="0xb69c2cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0xb698f220" loc="322:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0xb698f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb698f3f8"/>
        <function-ref name="runTask" scoped="" ref="0xb698f4d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0xb69bd400" loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0xb69bd400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0xb69bd5d8"/>
        <function-ref name="resetSend" scoped="" ref="0xb69bd6b8"/>
        <function-ref name="dataReceived" scoped="" ref="0xb69bd798"/>
        <function-ref name="resetReceive" scoped="" ref="0xb69bd878"/>
        <function-ref name="putData" scoped="" ref="0xb69bd958"/>
        <function-ref name="putDone" scoped="" ref="0xb69bda38"/>
        <function-ref name="delimiterReceived" scoped="" ref="0xb69bdb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb69bdc88" loc="73:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb69bdc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb69bde60"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb69c5010"/>
        <function-ref name="led1On" scoped="" ref="0xb69c50f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb69c51d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb69c52b0"/>
        <function-ref name="get" scoped="" ref="0xb69c5390"/>
        <function-ref name="led1Off" scoped="" ref="0xb69c5470"/>
        <function-ref name="led2Off" scoped="" ref="0xb69c57f0"/>
        <function-ref name="set" scoped="" ref="0xb69c5550"/>
        <function-ref name="led0On" scoped="" ref="0xb69c5630"/>
        <function-ref name="led2On" scoped="" ref="0xb69c5710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0xb698b610" loc="341:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0xb698b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb698b7e8"/>
        <function-ref name="runTask" scoped="" ref="0xb698b8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0xb69c3098" loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0xb69c3098"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0xb69c3270"/>
        <function-ref name="nextByte" scoped="" ref="0xb69c3350"/>
        <function-ref name="startSend" scoped="" ref="0xb69c3430"/>
        <function-ref name="sendCompleted" scoped="" ref="0xb69c3510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0xb69c02a8" loc="68:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb69c02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0xb69c0480"/>
        <function-ref name="byteReceived" scoped="" ref="0xb69c0560"/>
        <function-ref name="endPacket" scoped="" ref="0xb69c0640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0xb6918e48" loc="275:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0xb6918e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6916050"/>
        <function-ref name="runTask" scoped="" ref="0xb6916130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6952a90" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6952a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb7279cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6952c78"/>
        <function-ref name="getPayload" scoped="" ref="0xb6952d58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6952e38"/>
        <function-ref name="cancel" scoped="" ref="0xb6952f18"/>
        <function-ref name="sendDone" scoped="" ref="0xb6919010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0xb69162b0" loc="158:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0xb69162b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6916488"/>
        <function-ref name="runTask" scoped="" ref="0xb6916568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb69526d0" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb69526d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb7279cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb69528b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0xb6919238" loc="54:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0xb6919238"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb7279cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb6919420"/>
        <function-ref name="offset" scoped="" ref="0xb6919500"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb69195e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6918230" loc="57:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6918230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6918408"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb69184e8"/>
        <function-ref name="led1On" scoped="" ref="0xb69185c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb69186a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6918788"/>
        <function-ref name="get" scoped="" ref="0xb6918868"/>
        <function-ref name="led1Off" scoped="" ref="0xb6918948"/>
        <function-ref name="led2On" scoped="" ref="0xb6918cc8"/>
        <function-ref name="set" scoped="" ref="0xb6918b08"/>
        <function-ref name="led2Off" scoped="" ref="0xb6918a28"/>
        <function-ref name="led0On" scoped="" ref="0xb6918be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0xb6919bf8" loc="56:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0xb6919bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0xb6919dd0"/>
        <function-ref name="nextByte" scoped="" ref="0xb6919eb0"/>
        <function-ref name="startSend" scoped="" ref="0xb6918010"/>
        <function-ref name="sendCompleted" scoped="" ref="0xb69180f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0xb6919720" loc="55:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb6919720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0xb69198f8"/>
        <function-ref name="byteReceived" scoped="" ref="0xb69199d8"/>
        <function-ref name="endPacket" scoped="" ref="0xb6919ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0xb690b990" loc="50:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb690b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb690bb68"/>
        <function-ref name="receivedByte" scoped="" ref="0xb690bc48"/>
        <function-ref name="receive" scoped="" ref="0xb690bd28"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb690be08"/>
        <function-ref name="receiveDone" scoped="" ref="0xb690bee8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb6911010"/>
        <function-ref name="sendDone" scoped="" ref="0xb69110f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0xb69156a8" loc="48:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0xb69156a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0xb6915880"/>
        <function-ref name="resetSend" scoped="" ref="0xb6915960"/>
        <function-ref name="dataReceived" scoped="" ref="0xb6915a40"/>
        <function-ref name="resetReceive" scoped="" ref="0xb6915b20"/>
        <function-ref name="putData" scoped="" ref="0xb6915c00"/>
        <function-ref name="putDone" scoped="" ref="0xb6915ce0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0xb6915dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6911260" loc="51:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6911260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6911438"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6911518"/>
        <function-ref name="led1On" scoped="" ref="0xb69115f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb69116d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb69117b8"/>
        <function-ref name="get" scoped="" ref="0xb6911898"/>
        <function-ref name="led1Off" scoped="" ref="0xb6911978"/>
        <function-ref name="led2Off" scoped="" ref="0xb6911cf8"/>
        <function-ref name="set" scoped="" ref="0xb6911a58"/>
        <function-ref name="led0On" scoped="" ref="0xb6911b38"/>
        <function-ref name="led2On" scoped="" ref="0xb6911c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb68f8488" loc="42:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xb68f8488"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb68f8660"/>
        <function-ref name="receive" scoped="" ref="0xb68f8740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb68fd5e8" loc="41:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb68fd5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb68fd7c0"/>
        <function-ref name="receivedByte" scoped="" ref="0xb68fd8a0"/>
        <function-ref name="receive" scoped="" ref="0xb68fd980"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb68fda60"/>
        <function-ref name="receiveDone" scoped="" ref="0xb68fdb40"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb68fdc20"/>
        <function-ref name="sendDone" scoped="" ref="0xb68fdd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb68fd168" loc="40:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb68fd168"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb68fd340"/>
        <function-ref name="stop" scoped="" ref="0xb68fd420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb68f7308" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xb68f7308"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb68f74e0"/>
        <function-ref name="receive" scoped="" ref="0xb68f75c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb68f7788" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb68f7788"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb68f7960"/>
        <function-ref name="receivedByte" scoped="" ref="0xb68f7a40"/>
        <function-ref name="receive" scoped="" ref="0xb68f7b20"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb68f7c00"/>
        <function-ref name="receiveDone" scoped="" ref="0xb68f7ce0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb68f7dc0"/>
        <function-ref name="sendDone" scoped="" ref="0xb68f7ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb68f6218" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb68f6218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7326010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68f6968"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68f6e58"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68f6be0"/>
        <function-ref name="overflow" scoped="" ref="0xb68f5110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb68f8e88" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb68f8e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb68f7070"/>
        <function-ref name="stop" scoped="" ref="0xb68f7150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb68f4ae8" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xb68f4ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb68f4cc0"/>
        <function-ref name="receive" scoped="" ref="0xb68f4da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0xb68f37b0" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0xb68f37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb68f3988"/>
        <function-ref name="stop" scoped="" ref="0xb68f3a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb68f4398" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb68f4398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68f4570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb68f4f00" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb68f4f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb68f30f0"/>
        <function-ref name="receivedByte" scoped="" ref="0xb68f31d0"/>
        <function-ref name="receive" scoped="" ref="0xb68f32b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb68f3390"/>
        <function-ref name="receiveDone" scoped="" ref="0xb68f3470"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb68f3550"/>
        <function-ref name="sendDone" scoped="" ref="0xb68f3630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb68ccc88" loc="56:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb68ccc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7326010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68cb3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68cb8e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68cb668"/>
        <function-ref name="overflow" scoped="" ref="0xb68cbb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0xb68cc050" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0xb68cc050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb68cc228"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb68cc308"/>
        <function-ref name="rxDone" scoped="" ref="0xb68cc3e8"/>
        <function-ref name="txDone" scoped="" ref="0xb68cc4c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb68cc5a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb68cc688"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb68cc768"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb68cc848"/>
        <function-ref name="tx" scoped="" ref="0xb68cc928"/>
        <function-ref name="rx" scoped="" ref="0xb68cca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb68f46d0" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb68f46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb68f48a8"/>
        <function-ref name="stop" scoped="" ref="0xb68f4988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0xb68f3be8" loc="54:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0xb68f3be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb68f3dc0"/>
        <function-ref name="stop" scoped="" ref="0xb68f3ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0xb68b80b8" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0xb68b80b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb68b8290"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb68b8370"/>
        <function-ref name="rxDone" scoped="" ref="0xb68b8450"/>
        <function-ref name="txDone" scoped="" ref="0xb68b8530"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb68b8610"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb68b86f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb68b87d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb68b88b0"/>
        <function-ref name="tx" scoped="" ref="0xb68b8990"/>
        <function-ref name="rx" scoped="" ref="0xb68b8a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0xb68b7760" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0xb68b7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb68b7938"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb68b7a18"/>
        <function-ref name="rxDone" scoped="" ref="0xb68b7af8"/>
        <function-ref name="txDone" scoped="" ref="0xb68b7bd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb68b7cb8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb68b7d98"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb68b7e78"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb68b6010"/>
        <function-ref name="tx" scoped="" ref="0xb68b60f0"/>
        <function-ref name="rx" scoped="" ref="0xb68b61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0xb68b9b98" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0xb68b9b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb68b9d70"/>
        <function-ref name="stop" scoped="" ref="0xb68b9e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0xb68b8cc8" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0xb68b8cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb68b8ea0"/>
        <function-ref name="stop" scoped="" ref="0xb68b7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0xb68b7268" loc="52:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0xb68b7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb68b7440"/>
        <function-ref name="stop" scoped="" ref="0xb68b7520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0xb68b9688" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0xb68b9688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb68b9860"/>
        <function-ref name="stop" scoped="" ref="0xb68b9940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0xb68b6a00" loc="114:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0xb68b6a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68b6bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0xb68b38c0" loc="117:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0xb68b38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb68b3a98"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb68b3b78"/>
        <function-ref name="rxDone" scoped="" ref="0xb68b3c58"/>
        <function-ref name="txDone" scoped="" ref="0xb68b3d38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb68b3e18"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb68b3ef8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb68b2010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb68b20f0"/>
        <function-ref name="tx" scoped="" ref="0xb68b21d0"/>
        <function-ref name="rx" scoped="" ref="0xb68b22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0xb68b24c0" loc="119:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0xb68b24c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68b2698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0xb68b1390" loc="122:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0xb68b1390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb68b1568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb68b1648"/>
        <function-ref name="rxDone" scoped="" ref="0xb68b1728"/>
        <function-ref name="txDone" scoped="" ref="0xb68b1808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb68b18e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb68b19c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb68b1aa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb68b1b88"/>
        <function-ref name="tx" scoped="" ref="0xb68b1c68"/>
        <function-ref name="rx" scoped="" ref="0xb68b1d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0xb68b33a8" loc="116:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0xb68b33a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb68b3580"/>
        <function-ref name="stop" scoped="" ref="0xb68b3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0xb68b2910" loc="120:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0xb68b2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb68b2ae8"/>
        <function-ref name="stop" scoped="" ref="0xb68b2bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0xb68b2e40" loc="121:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0xb68b2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb68b1050"/>
        <function-ref name="stop" scoped="" ref="0xb68b1130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0xb68b0010" loc="124:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb68b0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb68b01e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb68b02c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb68b03a8"/>
        <function-ref name="actualMicro" scoped="" ref="0xb68b0488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb68b0568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xb68b0750" loc="125:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb68b0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb68b0928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0xb68b6e50" loc="115:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0xb68b6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb68b3050"/>
        <function-ref name="stop" scoped="" ref="0xb68b3130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb687d628" loc="24:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb687d628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7326010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb687dd78"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6879288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6879010"/>
        <function-ref name="overflow" scoped="" ref="0xb6879500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6876088" loc="24:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6876088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TThree" ref="0xb72fe010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68767d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6876cc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6876a50"/>
        <function-ref name="overflow" scoped="" ref="0xb6875010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6871db0" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6871db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb686f010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb686f0f0"/>
        <function-ref name="getControlA" scoped="" ref="0xb686f1d0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb686f2b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb686f390"/>
        <function-ref name="setControlB" scoped="" ref="0xb686f470"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb686f550"/>
        <function-ref name="getControlB" scoped="" ref="0xb686f630"/>
        <function-ref name="setControlC" scoped="" ref="0xb686f710"/>
        <function-ref name="setControlA" scoped="" ref="0xb686f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb686fb28" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb686fb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb686d640"/>
        <function-ref name="test" scoped="" ref="0xb686d150"/>
        <function-ref name="get" scoped="" ref="0xb686e200"/>
        <function-ref name="captured" scoped="" ref="0xb686e718"/>
        <function-ref name="reset" scoped="" ref="0xb686e9b8"/>
        <function-ref name="isOn" scoped="" ref="0xb686d3c8"/>
        <function-ref name="set" scoped="" ref="0xb686e478"/>
        <function-ref name="start" scoped="" ref="0xb686ec30"/>
        <function-ref name="stop" scoped="" ref="0xb686eea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb686dd50" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb686dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb686a300"/>
        <function-ref name="fired" scoped="" ref="0xb686c8f8"/>
        <function-ref name="get" scoped="" ref="0xb686c3e0"/>
        <function-ref name="reset" scoped="" ref="0xb686cb70"/>
        <function-ref name="isOn" scoped="" ref="0xb686a578"/>
        <function-ref name="set" scoped="" ref="0xb686c658"/>
        <function-ref name="start" scoped="" ref="0xb686cde8"/>
        <function-ref name="stop" scoped="" ref="0xb686a088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6875aa8" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6875aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6871538"/>
        <function-ref name="test" scoped="" ref="0xb6871048"/>
        <function-ref name="get" scoped="" ref="0xb6872120"/>
        <function-ref name="setScale" scoped="" ref="0xb68717b0"/>
        <function-ref name="getScale" scoped="" ref="0xb6871a50"/>
        <function-ref name="reset" scoped="" ref="0xb68728b0"/>
        <function-ref name="overflow" scoped="" ref="0xb6872638"/>
        <function-ref name="isOn" scoped="" ref="0xb68712c0"/>
        <function-ref name="set" scoped="" ref="0xb6872398"/>
        <function-ref name="start" scoped="" ref="0xb6872b28"/>
        <function-ref name="stop" scoped="" ref="0xb6872da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6864530" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6864530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb6864708"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb68647e8"/>
        <function-ref name="getControlA" scoped="" ref="0xb68648c8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb68649a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6864a88"/>
        <function-ref name="setControlB" scoped="" ref="0xb6864b68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6864c48"/>
        <function-ref name="getControlB" scoped="" ref="0xb6864d28"/>
        <function-ref name="setControlC" scoped="" ref="0xb6864e08"/>
        <function-ref name="setControlA" scoped="" ref="0xb6864ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xb6860128" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xb6860128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb685f690"/>
        <function-ref name="fired" scoped="" ref="0xb6860c88"/>
        <function-ref name="get" scoped="" ref="0xb6860770"/>
        <function-ref name="reset" scoped="" ref="0xb6860f00"/>
        <function-ref name="isOn" scoped="" ref="0xb685f908"/>
        <function-ref name="set" scoped="" ref="0xb68609e8"/>
        <function-ref name="start" scoped="" ref="0xb685f1a0"/>
        <function-ref name="stop" scoped="" ref="0xb685f418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6863258" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb6863258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb6862cc0"/>
        <function-ref name="test" scoped="" ref="0xb68627d0"/>
        <function-ref name="get" scoped="" ref="0xb68638a0"/>
        <function-ref name="captured" scoped="" ref="0xb6863db8"/>
        <function-ref name="reset" scoped="" ref="0xb6862068"/>
        <function-ref name="isOn" scoped="" ref="0xb6862a48"/>
        <function-ref name="set" scoped="" ref="0xb6863b18"/>
        <function-ref name="start" scoped="" ref="0xb68622e0"/>
        <function-ref name="stop" scoped="" ref="0xb6862558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xb685fd20" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xb685fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb685d2c0"/>
        <function-ref name="fired" scoped="" ref="0xb685e8a8"/>
        <function-ref name="get" scoped="" ref="0xb685e390"/>
        <function-ref name="reset" scoped="" ref="0xb685eb20"/>
        <function-ref name="isOn" scoped="" ref="0xb685d538"/>
        <function-ref name="set" scoped="" ref="0xb685e608"/>
        <function-ref name="start" scoped="" ref="0xb685ed98"/>
        <function-ref name="stop" scoped="" ref="0xb685d048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xb685d950" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xb685d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb685bf08"/>
        <function-ref name="fired" scoped="" ref="0xb685b528"/>
        <function-ref name="get" scoped="" ref="0xb685b010"/>
        <function-ref name="reset" scoped="" ref="0xb685b7a0"/>
        <function-ref name="isOn" scoped="" ref="0xb685a1a0"/>
        <function-ref name="set" scoped="" ref="0xb685b288"/>
        <function-ref name="start" scoped="" ref="0xb685ba18"/>
        <function-ref name="stop" scoped="" ref="0xb685bc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6867230" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6867230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6866ca0"/>
        <function-ref name="test" scoped="" ref="0xb68667b0"/>
        <function-ref name="get" scoped="" ref="0xb6867878"/>
        <function-ref name="setScale" scoped="" ref="0xb6866f18"/>
        <function-ref name="getScale" scoped="" ref="0xb68641d0"/>
        <function-ref name="reset" scoped="" ref="0xb6866048"/>
        <function-ref name="overflow" scoped="" ref="0xb6867d90"/>
        <function-ref name="isOn" scoped="" ref="0xb6866a28"/>
        <function-ref name="set" scoped="" ref="0xb6867af0"/>
        <function-ref name="start" scoped="" ref="0xb68662c0"/>
        <function-ref name="stop" scoped="" ref="0xb6866538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6818440" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6818440"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb73915d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb73915d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6818618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6818828" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6818828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb68152c0"/>
        <function-ref name="test" scoped="" ref="0xb6816d90"/>
        <function-ref name="get" scoped="" ref="0xb6818e70"/>
        <function-ref name="setScale" scoped="" ref="0xb6815538"/>
        <function-ref name="getScale" scoped="" ref="0xb68157d8"/>
        <function-ref name="reset" scoped="" ref="0xb6816628"/>
        <function-ref name="overflow" scoped="" ref="0xb68163b0"/>
        <function-ref name="isOn" scoped="" ref="0xb6815048"/>
        <function-ref name="set" scoped="" ref="0xb6816110"/>
        <function-ref name="start" scoped="" ref="0xb68168a0"/>
        <function-ref name="stop" scoped="" ref="0xb6816b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb681aa68" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb681aa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TThree" ref="0xb72fe010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6813200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68136f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6813478"/>
        <function-ref name="overflow" scoped="" ref="0xb6813968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6813c48" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6813c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb68116a0"/>
        <function-ref name="test" scoped="" ref="0xb68111b0"/>
        <function-ref name="get" scoped="" ref="0xb68122a8"/>
        <function-ref name="setScale" scoped="" ref="0xb6811918"/>
        <function-ref name="getScale" scoped="" ref="0xb6811bb8"/>
        <function-ref name="reset" scoped="" ref="0xb6812a38"/>
        <function-ref name="overflow" scoped="" ref="0xb68127c0"/>
        <function-ref name="isOn" scoped="" ref="0xb6811428"/>
        <function-ref name="set" scoped="" ref="0xb6812520"/>
        <function-ref name="start" scoped="" ref="0xb6812cb0"/>
        <function-ref name="stop" scoped="" ref="0xb6812f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb680ecd8" loc="63:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xb680ecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TThree" ref="0xb72fe010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb680c478"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb680c968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb680c6f0"/>
        <function-ref name="overflow" scoped="" ref="0xb680cbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6877a10" loc="62:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6877a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7326010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb680e200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb680e6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb680e478"/>
        <function-ref name="overflow" scoped="" ref="0xb680e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0xb680a728" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0xb680a728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb680a900"/>
        <function-ref name="offset" scoped="" ref="0xb680a9e0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb680aac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0xb67fc448" loc="43:/home/wsn/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb67fc448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0xb67fb3e8"/>
        <function-ref name="enqueue" scoped="" ref="0xb67fbac8"/>
        <function-ref name="element" scoped="" ref="0xb67fbe18"/>
        <function-ref name="full" scoped="" ref="0xb67fccc8"/>
        <function-ref name="maxSize" scoped="" ref="0xb67fb190"/>
        <function-ref name="dequeue" scoped="" ref="0xb67fb758"/>
        <function-ref name="empty" scoped="" ref="0xb67fca70"/>
        <function-ref name="size" scoped="" ref="0xb67fcf20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb67e2eb0" loc="93:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb67e2eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0xb67e1e48"/>
        <function-ref name="enqueue" scoped="" ref="0xb67df540"/>
        <function-ref name="element" scoped="" ref="0xb67df890"/>
        <function-ref name="full" scoped="" ref="0xb67e1740"/>
        <function-ref name="maxSize" scoped="" ref="0xb67e1bf0"/>
        <function-ref name="dequeue" scoped="" ref="0xb67df1d0"/>
        <function-ref name="empty" scoped="" ref="0xb67e14e8"/>
        <function-ref name="size" scoped="" ref="0xb67e1998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb67dfc20" loc="94:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb67dfc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb67dfdf8"/>
        <function-ref name="getPayload" scoped="" ref="0xb67dfed8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb67de010"/>
        <function-ref name="cancel" scoped="" ref="0xb67de0f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb67de1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb67de350" loc="95:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb67de350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb67de528"/>
        <function-ref name="payloadLength" scoped="" ref="0xb67de608"/>
        <function-ref name="getPayload" scoped="" ref="0xb67de6e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb67de7c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb67de8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0xb67da100" loc="114:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="retrySend" scoped="" ref="0xb67da100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb67da2d8"/>
        <function-ref name="runTask" scoped="" ref="0xb67da3b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb67e6bf8" loc="89:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb67e6bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb67e6dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb67dea18" loc="96:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb67dea18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb67debf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb67decd0"/>
        <function-ref name="led1On" scoped="" ref="0xb67dedb0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb67dee90"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb67dd010"/>
        <function-ref name="get" scoped="" ref="0xb67dd0f0"/>
        <function-ref name="led1Off" scoped="" ref="0xb67dd1d0"/>
        <function-ref name="led2Off" scoped="" ref="0xb67dd550"/>
        <function-ref name="set" scoped="" ref="0xb67dd2b0"/>
        <function-ref name="led0On" scoped="" ref="0xb67dd390"/>
        <function-ref name="led2On" scoped="" ref="0xb67dd470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0xb67e29f0" loc="90:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0xb67e29f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0xb67e2bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0xb67e4760" loc="43:/home/wsn/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0xb67e4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0xb67e4938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb67c8a08" loc="94:/home/wsn/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb67c8a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb67c8be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0xb67c8d88" loc="95:/home/wsn/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0xb67c8d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0xb67c7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xb67c3010" loc="39:/home/wsn/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb67c3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb67c31e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0xb67c3450" loc="40:/home/wsn/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0xb67c3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb67c3628"/>
        <function-ref name="stopDone" scoped="" ref="0xb67c3708"/>
        <function-ref name="start" scoped="" ref="0xb67c37e8"/>
        <function-ref name="stop" scoped="" ref="0xb67c38c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0xb679fa30" loc="59:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0xb679fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0xb679fc08"/>
        <function-ref name="setRoot" scoped="" ref="0xb679fce8"/>
        <function-ref name="unsetRoot" scoped="" ref="0xb679fdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0xb67b12d8" loc="54:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0xb67b12d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb67b14b0"/>
        <function-ref name="setOrigin" scoped="" ref="0xb67b1590"/>
        <function-ref name="setType" scoped="" ref="0xb67b1670"/>
        <function-ref name="getOrigin" scoped="" ref="0xb67b1750"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb67b1830"/>
        <function-ref name="getType" scoped="" ref="0xb67b1910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0xb6797550" loc="65:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0xb6797550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0xb6797728"/>
        <function-ref name="logEventMsg" scoped="" ref="0xb6797808"/>
        <function-ref name="logEventSimple" scoped="" ref="0xb67978e8"/>
        <function-ref name="logEventRoute" scoped="" ref="0xb67979c8"/>
        <function-ref name="logEventDbg" scoped="" ref="0xb6797aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0xb67b6c10" loc="51:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0xb67b6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0xb67cba08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0xb67b6de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb67b8010" loc="53:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb67b8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb67b81e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb67b82c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb67b83a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb67b8488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb67b8568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb67baef8" loc="50:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb67baef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0xb67cba08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb67b90e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb67bbe08" loc="48:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb67bbe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb67ba010"/>
        <function-ref name="getPayload" scoped="" ref="0xb67ba0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb67ba1d0"/>
        <function-ref name="cancel" scoped="" ref="0xb67ba2b0"/>
        <function-ref name="sendDone" scoped="" ref="0xb67ba390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0xb67a1be0" loc="57:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0xb67a1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0xb67a1db8"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0xb67a1e98"/>
        <function-ref name="numNeighbors" scoped="" ref="0xb67b5010"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0xb67b50f0"/>
        <function-ref name="getEtx" scoped="" ref="0xb67b51d0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0xb67b52b0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0xb67b5390"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0xb67b5470"/>
        <function-ref name="getParent" scoped="" ref="0xb67b5550"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0xb67b5630"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0xb67b5710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb67ba848" loc="49:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb67ba848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0xb67cba08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb67baa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0xb679f5c8" loc="58:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0xb679f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0xb679f7a0"/>
        <function-ref name="setClientCongested" scoped="" ref="0xb679f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnicastNameFreeRouting" ref="0xb679d510" loc="60:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0xb679d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0xb679d6e8"/>
        <function-ref name="routeFound" scoped="" ref="0xb679d7c8"/>
        <function-ref name="nextHop" scoped="" ref="0xb679d8a8"/>
        <function-ref name="noRoute" scoped="" ref="0xb679d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0xb67a77a0" loc="55:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0xb67a77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb67a7978"/>
        <function-ref name="option" scoped="" ref="0xb67a7a58"/>
        <function-ref name="setEtx" scoped="" ref="0xb67a7b38"/>
        <function-ref name="setOrigin" scoped="" ref="0xb67a7c18"/>
        <function-ref name="clearOption" scoped="" ref="0xb67a7cf8"/>
        <function-ref name="getEtx" scoped="" ref="0xb67a7dd8"/>
        <function-ref name="getOrigin" scoped="" ref="0xb67a7eb8"/>
        <function-ref name="setType" scoped="" ref="0xb67b7010"/>
        <function-ref name="setOption" scoped="" ref="0xb67b70f0"/>
        <function-ref name="matchPacket" scoped="" ref="0xb67b71d0"/>
        <function-ref name="getThl" scoped="" ref="0xb67b72b0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb67b7390"/>
        <function-ref name="matchInstance" scoped="" ref="0xb67b7470"/>
        <function-ref name="getType" scoped="" ref="0xb67b75d0"/>
        <function-ref name="setThl" scoped="" ref="0xb67b76b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb67bb6d8" loc="47:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb67bb6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb67bb8b0"/>
        <function-ref name="stop" scoped="" ref="0xb67bb990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0xb679b6c8" loc="64:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0xb679b6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0xb679b920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0xb678f1c0" loc="92:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0xb678f1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0xb678f398"/>
        <function-ref name="setRoot" scoped="" ref="0xb678f478"/>
        <function-ref name="unsetRoot" scoped="" ref="0xb678f558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0xb6793bf0" loc="86:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0xb6793bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb6793dc8"/>
        <function-ref name="setOrigin" scoped="" ref="0xb6793ea8"/>
        <function-ref name="setType" scoped="" ref="0xb6792010"/>
        <function-ref name="getOrigin" scoped="" ref="0xb67920f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb67921d0"/>
        <function-ref name="getType" scoped="" ref="0xb67922b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0xb6789178" loc="90:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0xb6789178"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getLinkQuality" scoped="" ref="0xb6789b30"/>
        <function-ref name="txAck" scoped="" ref="0xb6789430"/>
        <function-ref name="pinNeighbor" scoped="" ref="0xb6789510"/>
        <function-ref name="txNoAck" scoped="" ref="0xb67895f0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0xb67896d0"/>
        <function-ref name="evicted" scoped="" ref="0xb67897b0"/>
        <function-ref name="clearDLQ" scoped="" ref="0xb6789890"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0xb6789970"/>
        <function-ref name="getForwardQuality" scoped="" ref="0xb6789a50"/>
        <function-ref name="getReverseQuality" scoped="" ref="0xb6789350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0xb678e568" loc="98:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0xb678e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0xb678e740"/>
        <function-ref name="logEventMsg" scoped="" ref="0xb678e820"/>
        <function-ref name="logEventSimple" scoped="" ref="0xb678e900"/>
        <function-ref name="logEventRoute" scoped="" ref="0xb678e9e0"/>
        <function-ref name="logEventDbg" scoped="" ref="0xb678eac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0xb6793158" loc="83:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0xb6793158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0xb67cba08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0xb6793330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb67934b0" loc="85:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb67934b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6793688"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6793768"/>
        <function-ref name="getPayload" scoped="" ref="0xb6793848"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6793928"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6793a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb6794a88" loc="82:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb6794a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0xb67cba08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6794c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6796970" loc="80:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6796970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6796b48"/>
        <function-ref name="getPayload" scoped="" ref="0xb6796c28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6796d08"/>
        <function-ref name="cancel" scoped="" ref="0xb6796de8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6796ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0xb67914b8" loc="89:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0xb67914b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0xb6791690"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0xb6791770"/>
        <function-ref name="numNeighbors" scoped="" ref="0xb6791850"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0xb6791930"/>
        <function-ref name="getEtx" scoped="" ref="0xb6791a10"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0xb6791af0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0xb6791bd0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0xb6791cb0"/>
        <function-ref name="getParent" scoped="" ref="0xb6791d90"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0xb6791e70"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0xb6790010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb67943d8" loc="81:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb67943d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0xb67cba08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb67945b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0xb6789cf8" loc="91:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0xb6789cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0xb6789ed0"/>
        <function-ref name="setClientCongested" scoped="" ref="0xb678f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnicastNameFreeRouting" ref="0xb678f778" loc="93:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0xb678f778"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0xb678f9d0"/>
        <function-ref name="routeFound" scoped="" ref="0xb678fab0"/>
        <function-ref name="nextHop" scoped="" ref="0xb678fb90"/>
        <function-ref name="noRoute" scoped="" ref="0xb678fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0xb6792450" loc="87:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0xb6792450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb6792628"/>
        <function-ref name="option" scoped="" ref="0xb6792708"/>
        <function-ref name="setEtx" scoped="" ref="0xb67927e8"/>
        <function-ref name="setOrigin" scoped="" ref="0xb67928c8"/>
        <function-ref name="clearOption" scoped="" ref="0xb67929a8"/>
        <function-ref name="getEtx" scoped="" ref="0xb6792a88"/>
        <function-ref name="getOrigin" scoped="" ref="0xb6792b68"/>
        <function-ref name="setType" scoped="" ref="0xb6792c48"/>
        <function-ref name="setOption" scoped="" ref="0xb6792d28"/>
        <function-ref name="matchPacket" scoped="" ref="0xb6792e08"/>
        <function-ref name="getThl" scoped="" ref="0xb6792ee8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb6791010"/>
        <function-ref name="matchInstance" scoped="" ref="0xb67910f0"/>
        <function-ref name="getType" scoped="" ref="0xb6791250"/>
        <function-ref name="setThl" scoped="" ref="0xb6791330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb6796240" loc="79:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb6796240"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6796418"/>
        <function-ref name="stop" scoped="" ref="0xb67964f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0xb678e1b8" loc="97:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0xb678e1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0xb678e390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb66c1a18" loc="142:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb66c1a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb66c1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0xb66c0c50" loc="145:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0xb66c0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0xb66c0e28"/>
        <function-ref name="setRoot" scoped="" ref="0xb66c0f08"/>
        <function-ref name="unsetRoot" scoped="" ref="0xb66bf010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb66cec38" loc="126:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb66cec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb66cee10"/>
        <function-ref name="getPayload" scoped="" ref="0xb66ceef0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb66cd010"/>
        <function-ref name="cancel" scoped="" ref="0xb66cd0f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb66cd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0xb66bc230" loc="156:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0xb66bc230"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0xb66bc408"/>
        <function-ref name="logEventMsg" scoped="" ref="0xb66bc4e8"/>
        <function-ref name="logEventSimple" scoped="" ref="0xb66bc5c8"/>
        <function-ref name="logEventRoute" scoped="" ref="0xb66bc6a8"/>
        <function-ref name="logEventDbg" scoped="" ref="0xb66bc788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0xb66cf078" loc="116:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0xb66cf078"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb66cf250"/>
        <function-ref name="setOrigin" scoped="" ref="0xb66cf330"/>
        <function-ref name="setType" scoped="" ref="0xb66cf410"/>
        <function-ref name="getOrigin" scoped="" ref="0xb66cf4f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb66cf5d0"/>
        <function-ref name="getType" scoped="" ref="0xb66cf6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0xb66cbb88" loc="129:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0xb66cbb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getReverseQuality" scoped="" ref="0xb66c9558"/>
        <function-ref name="txAck" scoped="" ref="0xb66cbe40"/>
        <function-ref name="pinNeighbor" scoped="" ref="0xb66cbf20"/>
        <function-ref name="txNoAck" scoped="" ref="0xb66c9018"/>
        <function-ref name="insertNeighbor" scoped="" ref="0xb66c90f8"/>
        <function-ref name="evicted" scoped="" ref="0xb66c91d8"/>
        <function-ref name="clearDLQ" scoped="" ref="0xb66c92b8"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0xb66c9398"/>
        <function-ref name="getForwardQuality" scoped="" ref="0xb66c9478"/>
        <function-ref name="getLinkQuality" scoped="" ref="0xb66cbd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0xb66c3ca8" loc="140:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0xb66c3ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
              <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0xb66c12e8"/>
        <function-ref name="flush" scoped="" ref="0xb66c17e8"/>
        <function-ref name="lookup" scoped="" ref="0xb66c1568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0xb66d06a8" loc="114:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0xb66d06a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0xb67cba08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0xb66d0890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb66d09d0" loc="115:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb66d09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb66d0ba8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb66d0c88"/>
        <function-ref name="getPayload" scoped="" ref="0xb66d0d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb66d0e48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb66d0f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb66d02e8" loc="113:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb66d02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0xb67cba08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb66d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb66bee08" loc="149:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb66bee08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb66bc010"/>
        <function-ref name="rand32" scoped="" ref="0xb66bc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb66d27b8" loc="111:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb66d27b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb66d29a0"/>
        <function-ref name="getPayload" scoped="" ref="0xb66d2a80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb66d2b60"/>
        <function-ref name="cancel" scoped="" ref="0xb66d2c40"/>
        <function-ref name="sendDone" scoped="" ref="0xb66d2d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0xb66cd898" loc="128:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0xb66cd898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb66cb4c8"/>
        <function-ref name="fired" scoped="" ref="0xb66cc768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb66cce70"/>
        <function-ref name="isOneShot" scoped="" ref="0xb66ccc18"/>
        <function-ref name="getdt" scoped="" ref="0xb66cb978"/>
        <function-ref name="gett0" scoped="" ref="0xb66cb720"/>
        <function-ref name="isRunning" scoped="" ref="0xb66cc9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb66cc010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb66cb1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb66cc290"/>
        <function-ref name="stop" scoped="" ref="0xb66cc510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0xb66bc8e8" loc="162:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0xb66bc8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb66bcac0"/>
        <function-ref name="stopDone" scoped="" ref="0xb66bcba0"/>
        <function-ref name="start" scoped="" ref="0xb66bcc80"/>
        <function-ref name="stop" scoped="" ref="0xb66bcd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0xb66bcee0" loc="234:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0xb66bcee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb66bb0e0"/>
        <function-ref name="runTask" scoped="" ref="0xb66bb1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0xb66c83e8" loc="137:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0xb66c83e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0xb6782608"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0xb6782890"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0xb66c7388"/>
        <function-ref name="enqueue" scoped="" ref="0xb66c7a68"/>
        <function-ref name="element" scoped="" ref="0xb66c7db8"/>
        <function-ref name="full" scoped="" ref="0xb66c8c68"/>
        <function-ref name="maxSize" scoped="" ref="0xb66c7130"/>
        <function-ref name="dequeue" scoped="" ref="0xb66c76f8"/>
        <function-ref name="empty" scoped="" ref="0xb66c8a10"/>
        <function-ref name="size" scoped="" ref="0xb66c8ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0xb66c0078" loc="144:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0xb66c0078"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0xb66c0250"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0xb66c0330"/>
        <function-ref name="numNeighbors" scoped="" ref="0xb66c0410"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0xb66c04f0"/>
        <function-ref name="getEtx" scoped="" ref="0xb66c05d0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0xb66c06b0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0xb66c0790"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0xb66c0870"/>
        <function-ref name="getParent" scoped="" ref="0xb66c0950"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0xb66c0a30"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0xb66c0b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb66c9c70" loc="131:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb66c9c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb66c9e48"/>
        <function-ref name="payloadLength" scoped="" ref="0xb66c9f28"/>
        <function-ref name="getPayload" scoped="" ref="0xb66c8018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb66c80f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb66c81d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb66d2010" loc="109:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb66d2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb66d21e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb66d2ef8" loc="112:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb66d2ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0xb67cba08"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb66d00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0xb66ce7f0" loc="118:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0xb66ce7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0xb66ce9c8"/>
        <function-ref name="setClientCongested" scoped="" ref="0xb66ceaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0xb66c9698" loc="130:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0xb66c9698"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0xb66c9870"/>
        <function-ref name="routeFound" scoped="" ref="0xb66c9950"/>
        <function-ref name="nextHop" scoped="" ref="0xb66c9a30"/>
        <function-ref name="noRoute" scoped="" ref="0xb66c9b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb66be230" loc="148:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb66be230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb66be408"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb66be4e8"/>
        <function-ref name="led1On" scoped="" ref="0xb66be5c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb66be6a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb66be788"/>
        <function-ref name="get" scoped="" ref="0xb66be868"/>
        <function-ref name="led1Off" scoped="" ref="0xb66be948"/>
        <function-ref name="led2On" scoped="" ref="0xb66becc8"/>
        <function-ref name="set" scoped="" ref="0xb66beb08"/>
        <function-ref name="led2Off" scoped="" ref="0xb66bea28"/>
        <function-ref name="led0On" scoped="" ref="0xb66bebe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xb66cd310" loc="127:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb66cd310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb66cd4e8"/>
        <function-ref name="noAck" scoped="" ref="0xb66cd5c8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb66cd6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0xb66cf7f0" loc="117:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0xb66cf7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb66cf9c8"/>
        <function-ref name="option" scoped="" ref="0xb66cfaa8"/>
        <function-ref name="setEtx" scoped="" ref="0xb66cfb88"/>
        <function-ref name="setOrigin" scoped="" ref="0xb66cfc68"/>
        <function-ref name="clearOption" scoped="" ref="0xb66cfd48"/>
        <function-ref name="getEtx" scoped="" ref="0xb66cfe28"/>
        <function-ref name="getOrigin" scoped="" ref="0xb66cff08"/>
        <function-ref name="setType" scoped="" ref="0xb66ce010"/>
        <function-ref name="setOption" scoped="" ref="0xb66ce0f0"/>
        <function-ref name="matchPacket" scoped="" ref="0xb66ce1d0"/>
        <function-ref name="getThl" scoped="" ref="0xb66ce2b0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb66ce390"/>
        <function-ref name="matchInstance" scoped="" ref="0xb66ce470"/>
        <function-ref name="getType" scoped="" ref="0xb66ce5d0"/>
        <function-ref name="setThl" scoped="" ref="0xb66ce6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0xb66c51e0" loc="138:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0xb66c51e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0xb6782608"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0xb6782890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb66c42b8"/>
        <function-ref name="maxSize" scoped="" ref="0xb66c5cb8"/>
        <function-ref name="empty" scoped="" ref="0xb66c5808"/>
        <function-ref name="put" scoped="" ref="0xb66c5f10"/>
        <function-ref name="size" scoped="" ref="0xb66c5a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb66bf610" loc="147:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb66bf610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb66bf7e8"/>
        <function-ref name="source" scoped="" ref="0xb66bf8c8"/>
        <function-ref name="address" scoped="" ref="0xb66bf9a8"/>
        <function-ref name="destination" scoped="" ref="0xb66bfa88"/>
        <function-ref name="setSource" scoped="" ref="0xb66bfb68"/>
        <function-ref name="setDestination" scoped="" ref="0xb66bfc48"/>
        <function-ref name="type" scoped="" ref="0xb66bfd28"/>
        <function-ref name="setType" scoped="" ref="0xb66bfe08"/>
        <function-ref name="isForMe" scoped="" ref="0xb66bfee8"/>
        <function-ref name="setGroup" scoped="" ref="0xb66be010"/>
        <function-ref name="localGroup" scoped="" ref="0xb66be0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb66d2328" loc="110:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb66d2328"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb66d2500"/>
        <function-ref name="stop" scoped="" ref="0xb66d25e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0xb66c1d50" loc="143:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0xb66c1d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb66c1f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0xb66c46f0" loc="139:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0xb66c46f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
            <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb66c3850"/>
        <function-ref name="maxSize" scoped="" ref="0xb66c3268"/>
        <function-ref name="empty" scoped="" ref="0xb66c4d18"/>
        <function-ref name="put" scoped="" ref="0xb66c34c0"/>
        <function-ref name="size" scoped="" ref="0xb66c3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0xb66bf1e8" loc="146:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0xb66bf1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0xb66bf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0xb66b65b0" loc="42:/home/wsn/tinyos-main/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0xb66b65b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
            <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb66b56a0"/>
        <function-ref name="maxSize" scoped="" ref="0xb66b50b8"/>
        <function-ref name="empty" scoped="" ref="0xb66b6bd8"/>
        <function-ref name="put" scoped="" ref="0xb66b5310"/>
        <function-ref name="size" scoped="" ref="0xb66b6e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0xb5ea3868" loc="56:/home/wsn/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0xb5ea3868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
            <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5ea2950"/>
        <function-ref name="maxSize" scoped="" ref="0xb5ea2368"/>
        <function-ref name="empty" scoped="" ref="0xb5ea3e90"/>
        <function-ref name="put" scoped="" ref="0xb5ea25c0"/>
        <function-ref name="size" scoped="" ref="0xb5ea2110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5ea34c0" loc="55:/home/wsn/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb5ea34c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5ea3698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0xb669f9b8" loc="42:/home/wsn/tinyos-main/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0xb669f9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0xb6782608"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0xb6782890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb669eaa8"/>
        <function-ref name="maxSize" scoped="" ref="0xb669e4c0"/>
        <function-ref name="empty" scoped="" ref="0xb669e010"/>
        <function-ref name="put" scoped="" ref="0xb669e718"/>
        <function-ref name="size" scoped="" ref="0xb669e268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0xb5e99010" loc="56:/home/wsn/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0xb5e99010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0xb6782608"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0xb6782890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb5e970e8"/>
        <function-ref name="maxSize" scoped="" ref="0xb5e99ae8"/>
        <function-ref name="empty" scoped="" ref="0xb5e99638"/>
        <function-ref name="put" scoped="" ref="0xb5e99d40"/>
        <function-ref name="size" scoped="" ref="0xb5e99890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5e9bc18" loc="55:/home/wsn/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb5e9bc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5e9bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0xb669c2d0" loc="43:/home/wsn/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb669c2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0xb6782608"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0xb6782890"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0xb669a268"/>
        <function-ref name="enqueue" scoped="" ref="0xb669a948"/>
        <function-ref name="element" scoped="" ref="0xb669ac98"/>
        <function-ref name="full" scoped="" ref="0xb669cb50"/>
        <function-ref name="maxSize" scoped="" ref="0xb669a010"/>
        <function-ref name="dequeue" scoped="" ref="0xb669a5d8"/>
        <function-ref name="empty" scoped="" ref="0xb669c8f8"/>
        <function-ref name="size" scoped="" ref="0xb669cda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0xb6697ea0" loc="39:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0xb6697ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
              <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0xb667d4d8"/>
        <function-ref name="flush" scoped="" ref="0xb667d9d8"/>
        <function-ref name="lookup" scoped="" ref="0xb667d758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0xb5e89200" loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0xb5e89200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
              <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0xb5e89828"/>
        <function-ref name="flush" scoped="" ref="0xb5e89d28"/>
        <function-ref name="lookup" scoped="" ref="0xb5e89aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5e8be10" loc="45:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb5e8be10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5e89010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0xb5e88010" loc="49:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0xb5e88010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb5e881e8"/>
        <function-ref name="option" scoped="" ref="0xb5e882c8"/>
        <function-ref name="setEtx" scoped="" ref="0xb5e883a8"/>
        <function-ref name="setOrigin" scoped="" ref="0xb5e88488"/>
        <function-ref name="clearOption" scoped="" ref="0xb5e88568"/>
        <function-ref name="getEtx" scoped="" ref="0xb5e88648"/>
        <function-ref name="getOrigin" scoped="" ref="0xb5e88728"/>
        <function-ref name="setType" scoped="" ref="0xb5e88808"/>
        <function-ref name="setOption" scoped="" ref="0xb5e888e8"/>
        <function-ref name="matchPacket" scoped="" ref="0xb5e889c8"/>
        <function-ref name="getThl" scoped="" ref="0xb5e88aa8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb5e88b88"/>
        <function-ref name="matchInstance" scoped="" ref="0xb5e88c68"/>
        <function-ref name="getType" scoped="" ref="0xb5e88dc8"/>
        <function-ref name="setThl" scoped="" ref="0xb5e88ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb667b680" loc="45:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb667b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6675170"/>
        <function-ref name="fired" scoped="" ref="0xb667a410"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb667ab18"/>
        <function-ref name="isOneShot" scoped="" ref="0xb667a8c0"/>
        <function-ref name="getdt" scoped="" ref="0xb6675620"/>
        <function-ref name="gett0" scoped="" ref="0xb66753c8"/>
        <function-ref name="isRunning" scoped="" ref="0xb667a668"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb667bca8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb667ae38"/>
        <function-ref name="startOneShot" scoped="" ref="0xb667bf28"/>
        <function-ref name="stop" scoped="" ref="0xb667a1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6674458" loc="45:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6674458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6671010"/>
        <function-ref name="fired" scoped="" ref="0xb6672268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6672970"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6672718"/>
        <function-ref name="getdt" scoped="" ref="0xb66714c0"/>
        <function-ref name="gett0" scoped="" ref="0xb6671268"/>
        <function-ref name="isRunning" scoped="" ref="0xb66724c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6674a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6672c90"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6674d00"/>
        <function-ref name="stop" scoped="" ref="0xb6672010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6665978" loc="57:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6665978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6665b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0xb6669f18" loc="47:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0xb6669f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getLinkQuality" scoped="" ref="0xb66688e8"/>
        <function-ref name="txAck" scoped="" ref="0xb66681e8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0xb66682c8"/>
        <function-ref name="txNoAck" scoped="" ref="0xb66683a8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0xb6668488"/>
        <function-ref name="evicted" scoped="" ref="0xb6668568"/>
        <function-ref name="clearDLQ" scoped="" ref="0xb6668648"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0xb6668728"/>
        <function-ref name="getForwardQuality" scoped="" ref="0xb6668808"/>
        <function-ref name="getReverseQuality" scoped="" ref="0xb6668108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6668db0" loc="49:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6668db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6667010"/>
        <function-ref name="payloadLength" scoped="" ref="0xb66670f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb66671d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb66672b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6667390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb6664ce0" loc="54:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6664ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6664eb8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6666010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb66660f0"/>
        <function-ref name="cancel" scoped="" ref="0xb66661d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb66662b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6669498" loc="45:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6669498"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6669670"/>
        <function-ref name="getPayload" scoped="" ref="0xb6669750"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6669830"/>
        <function-ref name="cancel" scoped="" ref="0xb6669910"/>
        <function-ref name="sendDone" scoped="" ref="0xb66699f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb66630b8" loc="59:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb66630b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb6663310"/>
        <function-ref name="rand32" scoped="" ref="0xb66633f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6665210" loc="56:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6665210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb66653e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb66654c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb66655a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6665688"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6665768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6668a58" loc="48:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6668a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6668c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0xb66664d8" loc="55:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0xb66664d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb66666b0"/>
        <function-ref name="source" scoped="" ref="0xb6666790"/>
        <function-ref name="address" scoped="" ref="0xb6666870"/>
        <function-ref name="destination" scoped="" ref="0xb6666950"/>
        <function-ref name="setSource" scoped="" ref="0xb6666a30"/>
        <function-ref name="setDestination" scoped="" ref="0xb6666b10"/>
        <function-ref name="type" scoped="" ref="0xb6666bf0"/>
        <function-ref name="setType" scoped="" ref="0xb6666cd0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6666db0"/>
        <function-ref name="setGroup" scoped="" ref="0xb6666e90"/>
        <function-ref name="localGroup" scoped="" ref="0xb6665010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6669b78" loc="46:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6669b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6669d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0xb6664948" loc="50:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0xb6664948"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0xb6664b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb6669010" loc="44:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb6669010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb66691e8"/>
        <function-ref name="stop" scoped="" ref="0xb66692c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0xb6665d48" loc="58:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6665d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb6665f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb65ec6a0" loc="49:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb65ec6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb65ec878"/>
        <function-ref name="getPayload" scoped="" ref="0xb65ec958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65eca38"/>
        <function-ref name="cancel" scoped="" ref="0xb65ecb18"/>
        <function-ref name="sendDone" scoped="" ref="0xb65ecbf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb65ecd38" loc="50:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb65ecd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb65ecf10"/>
        <function-ref name="payloadLength" scoped="" ref="0xb65d3010"/>
        <function-ref name="getPayload" scoped="" ref="0xb65d30f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65d31d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb65d32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb65d33f0" loc="51:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb65d33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb65d35c8"/>
        <function-ref name="source" scoped="" ref="0xb65d36a8"/>
        <function-ref name="address" scoped="" ref="0xb65d3788"/>
        <function-ref name="destination" scoped="" ref="0xb65d3868"/>
        <function-ref name="setSource" scoped="" ref="0xb65d3948"/>
        <function-ref name="setDestination" scoped="" ref="0xb65d3a28"/>
        <function-ref name="type" scoped="" ref="0xb65d3b08"/>
        <function-ref name="setType" scoped="" ref="0xb65d3be8"/>
        <function-ref name="isForMe" scoped="" ref="0xb65d3cc8"/>
        <function-ref name="setGroup" scoped="" ref="0xb65d3da8"/>
        <function-ref name="localGroup" scoped="" ref="0xb65d3e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb65d2010" loc="52:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb65d2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb65d21e8"/>
        <function-ref name="noAck" scoped="" ref="0xb65d22c8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb65d23a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb5e71200" loc="49:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb5e71200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5e713d8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5e714b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5e71598"/>
        <function-ref name="cancel" scoped="" ref="0xb5e71678"/>
        <function-ref name="sendDone" scoped="" ref="0xb5e71758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb5e71898" loc="50:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb5e71898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5e71a70"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5e71b50"/>
        <function-ref name="getPayload" scoped="" ref="0xb5e71c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5e71d10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5e71df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb5e70010" loc="51:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb5e70010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb5e701e8"/>
        <function-ref name="source" scoped="" ref="0xb5e702c8"/>
        <function-ref name="address" scoped="" ref="0xb5e703a8"/>
        <function-ref name="destination" scoped="" ref="0xb5e70488"/>
        <function-ref name="setSource" scoped="" ref="0xb5e70568"/>
        <function-ref name="setDestination" scoped="" ref="0xb5e70648"/>
        <function-ref name="type" scoped="" ref="0xb5e70728"/>
        <function-ref name="setType" scoped="" ref="0xb5e70808"/>
        <function-ref name="isForMe" scoped="" ref="0xb5e708e8"/>
        <function-ref name="setGroup" scoped="" ref="0xb5e709c8"/>
        <function-ref name="localGroup" scoped="" ref="0xb5e70aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb5e70c08" loc="52:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb5e70c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb5e70de0"/>
        <function-ref name="noAck" scoped="" ref="0xb5e70ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb5e6f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb5e6d8a0" loc="44:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb5e6d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5e6da78"/>
        <function-ref name="getPayload" scoped="" ref="0xb5e6db58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5e6dc38"/>
        <function-ref name="cancel" scoped="" ref="0xb5e6dd18"/>
        <function-ref name="sendDone" scoped="" ref="0xb5e6ddf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xb5e69010" loc="46:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb5e69010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5e691e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5e692c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5e693a8"/>
        <function-ref name="cancel" scoped="" ref="0xb5e69488"/>
        <function-ref name="sendDone" scoped="" ref="0xb5e69568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb5e696a8" loc="47:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb5e696a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb5e69880"/>
        <function-ref name="source" scoped="" ref="0xb5e69960"/>
        <function-ref name="address" scoped="" ref="0xb5e69a40"/>
        <function-ref name="destination" scoped="" ref="0xb5e69b20"/>
        <function-ref name="setSource" scoped="" ref="0xb5e69c00"/>
        <function-ref name="setDestination" scoped="" ref="0xb5e69ce0"/>
        <function-ref name="type" scoped="" ref="0xb5e69dc0"/>
        <function-ref name="setType" scoped="" ref="0xb5e69ea0"/>
        <function-ref name="isForMe" scoped="" ref="0xb5e68010"/>
        <function-ref name="setGroup" scoped="" ref="0xb5e680f0"/>
        <function-ref name="localGroup" scoped="" ref="0xb5e681d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb65e2dd0" loc="43:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb65e2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb65df010"/>
        <function-ref name="getPayload" scoped="" ref="0xb65df0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65df1d0"/>
        <function-ref name="cancel" scoped="" ref="0xb65df2b0"/>
        <function-ref name="sendDone" scoped="" ref="0xb65df390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb65ddc68" loc="48:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb65ddc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb65dde50"/>
        <function-ref name="getPayload" scoped="" ref="0xb65dc010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65dc0f0"/>
        <function-ref name="cancel" scoped="" ref="0xb65dc1d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb65dc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb65dd4f8" loc="46:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb65dd4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb65dd6e0"/>
        <function-ref name="getPayload" scoped="" ref="0xb65dd7c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65dd8a0"/>
        <function-ref name="cancel" scoped="" ref="0xb65dd980"/>
        <function-ref name="sendDone" scoped="" ref="0xb65dda60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb65db010" loc="50:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb65db010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb65db1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb65db2c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb65db3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65db488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb65db568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0xb65db6e8" loc="169:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0xb65db6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb65db8c0"/>
        <function-ref name="runTask" scoped="" ref="0xb65db9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0xb65dbb20" loc="126:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0xb65dbb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb65dbcf8"/>
        <function-ref name="runTask" scoped="" ref="0xb65dbdd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb65dc3f0" loc="49:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb65dc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb65dc5c8"/>
        <function-ref name="source" scoped="" ref="0xb65dc6a8"/>
        <function-ref name="address" scoped="" ref="0xb65dc788"/>
        <function-ref name="destination" scoped="" ref="0xb65dc868"/>
        <function-ref name="setSource" scoped="" ref="0xb65dc948"/>
        <function-ref name="setDestination" scoped="" ref="0xb65dca28"/>
        <function-ref name="type" scoped="" ref="0xb65dcb08"/>
        <function-ref name="setType" scoped="" ref="0xb65dcbe8"/>
        <function-ref name="isForMe" scoped="" ref="0xb65dccc8"/>
        <function-ref name="setGroup" scoped="" ref="0xb65dcda8"/>
        <function-ref name="localGroup" scoped="" ref="0xb65dce88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb65d0d60" loc="46:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb65d0d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb65cf010"/>
        <function-ref name="payloadLength" scoped="" ref="0xb65cf0f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb65cf1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65cf2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb65cf390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb65d0a48" loc="45:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb65d0a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb65d0c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb65cf4d0" loc="47:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb65cf4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb65cf6a8"/>
        <function-ref name="source" scoped="" ref="0xb65cf788"/>
        <function-ref name="address" scoped="" ref="0xb65cf868"/>
        <function-ref name="destination" scoped="" ref="0xb65cf948"/>
        <function-ref name="setSource" scoped="" ref="0xb65cfa28"/>
        <function-ref name="setDestination" scoped="" ref="0xb65cfb08"/>
        <function-ref name="type" scoped="" ref="0xb65cfbe8"/>
        <function-ref name="setType" scoped="" ref="0xb65cfcc8"/>
        <function-ref name="isForMe" scoped="" ref="0xb65cfda8"/>
        <function-ref name="setGroup" scoped="" ref="0xb65cfe88"/>
        <function-ref name="localGroup" scoped="" ref="0xb65cc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb65ca8d8" loc="47:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb65ca8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb65caab0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb65cab90"/>
        <function-ref name="getPayload" scoped="" ref="0xb65cac70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb65cad50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb65cae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb65ca5c0" loc="46:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb65ca5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb65ca798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb65c6010" loc="48:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb65c6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb65c61e8"/>
        <function-ref name="source" scoped="" ref="0xb65c62c8"/>
        <function-ref name="address" scoped="" ref="0xb65c63a8"/>
        <function-ref name="destination" scoped="" ref="0xb65c6488"/>
        <function-ref name="setSource" scoped="" ref="0xb65c6568"/>
        <function-ref name="setDestination" scoped="" ref="0xb65c6648"/>
        <function-ref name="type" scoped="" ref="0xb65c6728"/>
        <function-ref name="setType" scoped="" ref="0xb65c6808"/>
        <function-ref name="isForMe" scoped="" ref="0xb65c68e8"/>
        <function-ref name="setGroup" scoped="" ref="0xb65c69c8"/>
        <function-ref name="localGroup" scoped="" ref="0xb65c6aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0xb6535430" loc="110:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0xb6535430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0xb6535608"/>
        <function-ref name="setRoot" scoped="" ref="0xb65356e8"/>
        <function-ref name="unsetRoot" scoped="" ref="0xb65357c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0xb65299c0" loc="269:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0xb65299c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6529b98"/>
        <function-ref name="runTask" scoped="" ref="0xb6529c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0xb652a6f8" loc="125:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0xb652a6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0xb652a8d0"/>
        <function-ref name="logEventMsg" scoped="" ref="0xb652a9b0"/>
        <function-ref name="logEventSimple" scoped="" ref="0xb652aa90"/>
        <function-ref name="logEventRoute" scoped="" ref="0xb652ab70"/>
        <function-ref name="logEventDbg" scoped="" ref="0xb652ac50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0xb6532070" loc="119:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0xb6532070"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getReverseQuality" scoped="" ref="0xb6532a28"/>
        <function-ref name="txAck" scoped="" ref="0xb6532328"/>
        <function-ref name="pinNeighbor" scoped="" ref="0xb6532408"/>
        <function-ref name="txNoAck" scoped="" ref="0xb65324e8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0xb65325c8"/>
        <function-ref name="evicted" scoped="" ref="0xb65326a8"/>
        <function-ref name="clearDLQ" scoped="" ref="0xb6532788"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0xb6532868"/>
        <function-ref name="getForwardQuality" scoped="" ref="0xb6532948"/>
        <function-ref name="getLinkQuality" scoped="" ref="0xb6532248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0xb65349a8" loc="113:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0xb65349a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0xb6534b80"/>
        <function-ref name="setEtx" scoped="" ref="0xb6534c60"/>
        <function-ref name="clearOption" scoped="" ref="0xb6534d40"/>
        <function-ref name="getEtx" scoped="" ref="0xb6534e20"/>
        <function-ref name="setOption" scoped="" ref="0xb6534f00"/>
        <function-ref name="setParent" scoped="" ref="0xb6533010"/>
        <function-ref name="getParent" scoped="" ref="0xb65330f0"/>
        <function-ref name="getOption" scoped="" ref="0xb65331d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0xb6531790" loc="121:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0xb6531790"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6531968"/>
        <function-ref name="stopDone" scoped="" ref="0xb6531a48"/>
        <function-ref name="start" scoped="" ref="0xb6531b28"/>
        <function-ref name="stop" scoped="" ref="0xb6531c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb652a300" loc="124:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb652a300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb652a4d8"/>
        <function-ref name="rand32" scoped="" ref="0xb652a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0xb6535908" loc="111:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0xb6535908"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0xb6535ae0"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0xb6535bc0"/>
        <function-ref name="numNeighbors" scoped="" ref="0xb6535ca0"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0xb6535d80"/>
        <function-ref name="getEtx" scoped="" ref="0xb6535e60"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0xb6534010"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0xb65340f0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0xb65341d0"/>
        <function-ref name="getParent" scoped="" ref="0xb65342b0"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0xb6534390"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0xb6534470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0xb6529588" loc="388:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0xb6529588"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6529760"/>
        <function-ref name="runTask" scoped="" ref="0xb6529840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6533310" loc="114:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6533310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb65334e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0xb6533678" loc="117:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0xb6533678"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6533850"/>
        <function-ref name="getPayload" scoped="" ref="0xb6533930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6533a10"/>
        <function-ref name="cancel" scoped="" ref="0xb6533af0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6533bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0xb6531df8" loc="122:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0xb6531df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb652e900"/>
        <function-ref name="fired" scoped="" ref="0xb652fba0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb652e2c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb652e068"/>
        <function-ref name="getdt" scoped="" ref="0xb652edb0"/>
        <function-ref name="gett0" scoped="" ref="0xb652eb58"/>
        <function-ref name="isRunning" scoped="" ref="0xb652fdf8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb652f448"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb652e5e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb652f6c8"/>
        <function-ref name="stop" scoped="" ref="0xb652f948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0xb652d0c0" loc="123:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0xb652d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb652cc20"/>
        <function-ref name="fired" scoped="" ref="0xb652dec0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb652c5e0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb652c388"/>
        <function-ref name="getdt" scoped="" ref="0xb652a0f0"/>
        <function-ref name="gett0" scoped="" ref="0xb652ce78"/>
        <function-ref name="isRunning" scoped="" ref="0xb652c130"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb652d768"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb652c900"/>
        <function-ref name="startOneShot" scoped="" ref="0xb652d9e8"/>
        <function-ref name="stop" scoped="" ref="0xb652dc68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0xb652ad90" loc="126:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0xb652ad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0xb6529010"/>
        <function-ref name="setClientCongested" scoped="" ref="0xb65290f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0xb6529230" loc="128:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0xb6529230"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0xb6529408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0xb6533d30" loc="118:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0xb6533d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6533f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb6532b68" loc="120:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6532b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6532d40"/>
        <function-ref name="source" scoped="" ref="0xb6532e20"/>
        <function-ref name="address" scoped="" ref="0xb6532f00"/>
        <function-ref name="destination" scoped="" ref="0xb6531010"/>
        <function-ref name="setSource" scoped="" ref="0xb65310f0"/>
        <function-ref name="setDestination" scoped="" ref="0xb65311d0"/>
        <function-ref name="type" scoped="" ref="0xb65312b0"/>
        <function-ref name="setType" scoped="" ref="0xb6531390"/>
        <function-ref name="isForMe" scoped="" ref="0xb6531470"/>
        <function-ref name="setGroup" scoped="" ref="0xb6531550"/>
        <function-ref name="localGroup" scoped="" ref="0xb6531630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb65345b0" loc="112:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb65345b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6534788"/>
        <function-ref name="stop" scoped="" ref="0xb6534868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0xb6536e30" loc="109:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0xb6536e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0xb6535050"/>
        <function-ref name="routeFound" scoped="" ref="0xb6535130"/>
        <function-ref name="nextHop" scoped="" ref="0xb6535210"/>
        <function-ref name="noRoute" scoped="" ref="0xb65352f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6524d90" loc="45:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6524d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb65228a8"/>
        <function-ref name="fired" scoped="" ref="0xb6523b38"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6522268"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6522010"/>
        <function-ref name="getdt" scoped="" ref="0xb6522d58"/>
        <function-ref name="gett0" scoped="" ref="0xb6522b00"/>
        <function-ref name="isRunning" scoped="" ref="0xb6523d90"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb65233e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6522588"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6523660"/>
        <function-ref name="stop" scoped="" ref="0xb65238e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb651d1f8" loc="49:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb651d1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb651d3d0"/>
        <function-ref name="getPayload" scoped="" ref="0xb651d4b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb651d590"/>
        <function-ref name="cancel" scoped="" ref="0xb651d670"/>
        <function-ref name="sendDone" scoped="" ref="0xb651d750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb651d890" loc="50:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb651d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb651da68"/>
        <function-ref name="payloadLength" scoped="" ref="0xb651db48"/>
        <function-ref name="getPayload" scoped="" ref="0xb651dc28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb651dd08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb651dde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb651df28" loc="51:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb651df28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb651c110"/>
        <function-ref name="source" scoped="" ref="0xb651c1f0"/>
        <function-ref name="address" scoped="" ref="0xb651c2d0"/>
        <function-ref name="destination" scoped="" ref="0xb651c3b0"/>
        <function-ref name="setSource" scoped="" ref="0xb651c490"/>
        <function-ref name="setDestination" scoped="" ref="0xb651c570"/>
        <function-ref name="type" scoped="" ref="0xb651c650"/>
        <function-ref name="setType" scoped="" ref="0xb651c730"/>
        <function-ref name="isForMe" scoped="" ref="0xb651c810"/>
        <function-ref name="setGroup" scoped="" ref="0xb651c8f0"/>
        <function-ref name="localGroup" scoped="" ref="0xb651c9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb651cb30" loc="52:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb651cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb651cd08"/>
        <function-ref name="noAck" scoped="" ref="0xb651cde8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb651cec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb5dfb680" loc="49:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb5dfb680"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5dfb858"/>
        <function-ref name="getPayload" scoped="" ref="0xb5dfb938"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5dfba18"/>
        <function-ref name="cancel" scoped="" ref="0xb5dfbaf8"/>
        <function-ref name="sendDone" scoped="" ref="0xb5dfbbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb5dfbd18" loc="50:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb5dfbd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5dfbef0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5dfa010"/>
        <function-ref name="getPayload" scoped="" ref="0xb5dfa0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5dfa1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5dfa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb5dfa3f0" loc="51:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb5dfa3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb5dfa5c8"/>
        <function-ref name="source" scoped="" ref="0xb5dfa6a8"/>
        <function-ref name="address" scoped="" ref="0xb5dfa788"/>
        <function-ref name="destination" scoped="" ref="0xb5dfa868"/>
        <function-ref name="setSource" scoped="" ref="0xb5dfa948"/>
        <function-ref name="setDestination" scoped="" ref="0xb5dfaa28"/>
        <function-ref name="type" scoped="" ref="0xb5dfab08"/>
        <function-ref name="setType" scoped="" ref="0xb5dfabe8"/>
        <function-ref name="isForMe" scoped="" ref="0xb5dfacc8"/>
        <function-ref name="setGroup" scoped="" ref="0xb5dfada8"/>
        <function-ref name="localGroup" scoped="" ref="0xb5dfae88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb5df9010" loc="52:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb5df9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb5df91e8"/>
        <function-ref name="noAck" scoped="" ref="0xb5df92c8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb5df93a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb5df7d30" loc="44:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb5df7d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5df7f08"/>
        <function-ref name="getPayload" scoped="" ref="0xb5df4010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5df40f0"/>
        <function-ref name="cancel" scoped="" ref="0xb5df41d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb5df42b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xb5df4420" loc="46:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb5df4420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5df45f8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5df46d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5df47b8"/>
        <function-ref name="cancel" scoped="" ref="0xb5df4898"/>
        <function-ref name="sendDone" scoped="" ref="0xb5df4978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb5df4ab8" loc="47:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb5df4ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb5df4c90"/>
        <function-ref name="source" scoped="" ref="0xb5df4d70"/>
        <function-ref name="address" scoped="" ref="0xb5df4e50"/>
        <function-ref name="destination" scoped="" ref="0xb5df2010"/>
        <function-ref name="setSource" scoped="" ref="0xb5df20f0"/>
        <function-ref name="setDestination" scoped="" ref="0xb5df21d0"/>
        <function-ref name="type" scoped="" ref="0xb5df22b0"/>
        <function-ref name="setType" scoped="" ref="0xb5df2390"/>
        <function-ref name="isForMe" scoped="" ref="0xb5df2470"/>
        <function-ref name="setGroup" scoped="" ref="0xb5df2550"/>
        <function-ref name="localGroup" scoped="" ref="0xb5df2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb651a510" loc="46:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb651a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb651a6e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb651a7c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb651a8a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb651a988"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb651aa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb651a1f8" loc="45:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb651a1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb651a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb651aba8" loc="47:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb651aba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb651ad80"/>
        <function-ref name="source" scoped="" ref="0xb651ae60"/>
        <function-ref name="address" scoped="" ref="0xb6519010"/>
        <function-ref name="destination" scoped="" ref="0xb65190f0"/>
        <function-ref name="setSource" scoped="" ref="0xb65191d0"/>
        <function-ref name="setDestination" scoped="" ref="0xb65192b0"/>
        <function-ref name="type" scoped="" ref="0xb6519390"/>
        <function-ref name="setType" scoped="" ref="0xb6519470"/>
        <function-ref name="isForMe" scoped="" ref="0xb6519550"/>
        <function-ref name="setGroup" scoped="" ref="0xb6519630"/>
        <function-ref name="localGroup" scoped="" ref="0xb6519710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6504010" loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="Collection2SerialAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6504010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb65041e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb65042c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb65043a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6504488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6504568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb65058a0" loc="45:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="Collection2SerialAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb65058a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6505a78"/>
        <function-ref name="getPayload" scoped="" ref="0xb6505b58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6505c38"/>
        <function-ref name="cancel" scoped="" ref="0xb6505d18"/>
        <function-ref name="sendDone" scoped="" ref="0xb6505df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb5de58a8" loc="38:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="Collection2SerialAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb5de58a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5de5a80"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5de5b60"/>
        <function-ref name="getPayload" scoped="" ref="0xb5de5c40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5de5d20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5de5e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5de5210" loc="37:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="Collection2SerialAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb5de5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5de53e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5de54c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5de55a8"/>
        <function-ref name="cancel" scoped="" ref="0xb5de5688"/>
        <function-ref name="sendDone" scoped="" ref="0xb5de5768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0xb5de3a30" loc="46:/home/wsn/tinyos-main/tos/lib/net/CollectionIdP.nc">
      <component-ref qname="Collection2SerialAppC.CollectionSenderC.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0xb5de3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0xb5de3c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb64f81f8" loc="45:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Collection2SerialAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb64f81f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb64f7d58"/>
        <function-ref name="fired" scoped="" ref="0xb64f7010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb64f7718"/>
        <function-ref name="isOneShot" scoped="" ref="0xb64f74c0"/>
        <function-ref name="getdt" scoped="" ref="0xb64f6268"/>
        <function-ref name="gett0" scoped="" ref="0xb64f6010"/>
        <function-ref name="isRunning" scoped="" ref="0xb64f7268"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb64f8820"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb64f7a38"/>
        <function-ref name="startOneShot" scoped="" ref="0xb64f8aa0"/>
        <function-ref name="stop" scoped="" ref="0xb64f8d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb64f53b8" loc="19:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoC.nc">
      <component-ref qname="Collection2SerialAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0xb64f53b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb64f59e0"/>
        <function-ref name="readDone" scoped="" ref="0xb64f5c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb64f2af0" loc="3:/home/wsn/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <component-ref qname="ArbitratedPhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0xb64f2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb64ef1e0"/>
        <function-ref name="readDone" scoped="" ref="0xb64ef438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemp" ref="0xb64e77f8" loc="8:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemp" scoped="" ref="0xb64e77f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb64e7e20"/>
        <function-ref name="readDone" scoped="" ref="0xb64e6098"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PhotoResource" ref="0xb64e9100" loc="5:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoResource" scoped="" ref="0xb64e9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb64e92d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb64e93b8"/>
        <function-ref name="request" scoped="" ref="0xb64e9498"/>
        <function-ref name="granted" scoped="" ref="0xb64e9578"/>
        <function-ref name="isOwner" scoped="" ref="0xb64e9658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempResource" ref="0xb64e9bb8" loc="6:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0xb64e9bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb64e9d90"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb64e9e70"/>
        <function-ref name="request" scoped="" ref="0xb64e8010"/>
        <function-ref name="granted" scoped="" ref="0xb64e80f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb64e81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPhoto" ref="0xb64e87d0" loc="7:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPhoto" scoped="" ref="0xb64e87d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb64e8df8"/>
        <function-ref name="readDone" scoped="" ref="0xb64e7068"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0xb64da368" loc="36:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0xb64da368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb64da540"/>
        <function-ref name="disable" scoped="" ref="0xb64da620"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb64da700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb64da7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0xb64d5010" loc="45:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0xb64d5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0xb64d51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0xb64e1850" loc="23:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0xb64e1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64e1a28"/>
        <function-ref name="isInput" scoped="" ref="0xb64e1b08"/>
        <function-ref name="toggle" scoped="" ref="0xb64e1be8"/>
        <function-ref name="isOutput" scoped="" ref="0xb64e1cc8"/>
        <function-ref name="get" scoped="" ref="0xb64e1da8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64e1e88"/>
        <function-ref name="set" scoped="" ref="0xb64e0010"/>
        <function-ref name="clr" scoped="" ref="0xb64e00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0xb64df730" loc="26:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0xb64df730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64df908"/>
        <function-ref name="isInput" scoped="" ref="0xb64df9e8"/>
        <function-ref name="toggle" scoped="" ref="0xb64dfac8"/>
        <function-ref name="isOutput" scoped="" ref="0xb64dfba8"/>
        <function-ref name="get" scoped="" ref="0xb64dfc88"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64dfd68"/>
        <function-ref name="set" scoped="" ref="0xb64dfe48"/>
        <function-ref name="clr" scoped="" ref="0xb64dff28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0xb64d5b80" loc="48:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0xb64d5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0xb64d5d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0xb64d33e0" loc="50:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0xb64d33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0xb64d36b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0xb64dd580" loc="30:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0xb64dd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64dd758"/>
        <function-ref name="isInput" scoped="" ref="0xb64dd838"/>
        <function-ref name="toggle" scoped="" ref="0xb64dd918"/>
        <function-ref name="isOutput" scoped="" ref="0xb64dd9f8"/>
        <function-ref name="get" scoped="" ref="0xb64ddad8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64ddbb8"/>
        <function-ref name="set" scoped="" ref="0xb64ddc98"/>
        <function-ref name="clr" scoped="" ref="0xb64ddd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0xb64d7d38" loc="42:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0xb64d7d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64d7f10"/>
        <function-ref name="isInput" scoped="" ref="0xb64d6010"/>
        <function-ref name="toggle" scoped="" ref="0xb64d60f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb64d61d0"/>
        <function-ref name="get" scoped="" ref="0xb64d62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64d6390"/>
        <function-ref name="set" scoped="" ref="0xb64d6470"/>
        <function-ref name="clr" scoped="" ref="0xb64d6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0xb64e2490" loc="21:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0xb64e2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64e2668"/>
        <function-ref name="isInput" scoped="" ref="0xb64e2748"/>
        <function-ref name="toggle" scoped="" ref="0xb64e2828"/>
        <function-ref name="isOutput" scoped="" ref="0xb64e2908"/>
        <function-ref name="get" scoped="" ref="0xb64e29e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64e2ac8"/>
        <function-ref name="set" scoped="" ref="0xb64e2ba8"/>
        <function-ref name="clr" scoped="" ref="0xb64e2c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0xb64e02d0" loc="24:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0xb64e02d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64e04a8"/>
        <function-ref name="isInput" scoped="" ref="0xb64e0588"/>
        <function-ref name="toggle" scoped="" ref="0xb64e0668"/>
        <function-ref name="isOutput" scoped="" ref="0xb64e0748"/>
        <function-ref name="get" scoped="" ref="0xb64e0828"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64e0908"/>
        <function-ref name="set" scoped="" ref="0xb64e09e8"/>
        <function-ref name="clr" scoped="" ref="0xb64e0ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0xb64d9198" loc="38:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0xb64d9198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb64d9370"/>
        <function-ref name="disable" scoped="" ref="0xb64d9450"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb64d9530"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb64d9610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0xb64d53e0" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0xb64d53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0xb64d55b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0xb64d7318" loc="41:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0xb64d7318"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64d74f0"/>
        <function-ref name="isInput" scoped="" ref="0xb64d75d0"/>
        <function-ref name="toggle" scoped="" ref="0xb64d76b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb64d7790"/>
        <function-ref name="get" scoped="" ref="0xb64d7870"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64d7950"/>
        <function-ref name="set" scoped="" ref="0xb64d7a30"/>
        <function-ref name="clr" scoped="" ref="0xb64d7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0xb64de118" loc="27:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0xb64de118"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64de2f0"/>
        <function-ref name="isInput" scoped="" ref="0xb64de3d0"/>
        <function-ref name="toggle" scoped="" ref="0xb64de4b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb64de590"/>
        <function-ref name="get" scoped="" ref="0xb64de670"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64de750"/>
        <function-ref name="set" scoped="" ref="0xb64de830"/>
        <function-ref name="clr" scoped="" ref="0xb64de910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0xb64d8b98" loc="35:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0xb64d8b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb64d8df0"/>
        <function-ref name="disable" scoped="" ref="0xb64d8ed0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb64da010"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb64da0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0xb64d38b0" loc="51:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0xb64d38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0xb64d3a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0xb64dc010" loc="31:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0xb64dc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64dc1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb64dc2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb64dc3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb64dc488"/>
        <function-ref name="get" scoped="" ref="0xb64dc568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64dc648"/>
        <function-ref name="set" scoped="" ref="0xb64dc728"/>
        <function-ref name="clr" scoped="" ref="0xb64dc808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0xb64e2e68" loc="22:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0xb64e2e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64e1050"/>
        <function-ref name="isInput" scoped="" ref="0xb64e1130"/>
        <function-ref name="toggle" scoped="" ref="0xb64e1210"/>
        <function-ref name="isOutput" scoped="" ref="0xb64e12f0"/>
        <function-ref name="get" scoped="" ref="0xb64e13d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64e14b0"/>
        <function-ref name="set" scoped="" ref="0xb64e1590"/>
        <function-ref name="clr" scoped="" ref="0xb64e1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0xb64e0ca8" loc="25:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0xb64e0ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64e0e80"/>
        <function-ref name="isInput" scoped="" ref="0xb64df010"/>
        <function-ref name="toggle" scoped="" ref="0xb64df0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb64df1d0"/>
        <function-ref name="get" scoped="" ref="0xb64df2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64df390"/>
        <function-ref name="set" scoped="" ref="0xb64df470"/>
        <function-ref name="clr" scoped="" ref="0xb64df550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0xb64d57b0" loc="47:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0xb64d57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0xb64d5988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0xb64d3010" loc="49:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0xb64d3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0xb64d31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0xb64deb00" loc="29:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0xb64deb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64decd8"/>
        <function-ref name="isInput" scoped="" ref="0xb64dedb8"/>
        <function-ref name="toggle" scoped="" ref="0xb64dee98"/>
        <function-ref name="isOutput" scoped="" ref="0xb64dd010"/>
        <function-ref name="get" scoped="" ref="0xb64dd0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64dd1d0"/>
        <function-ref name="set" scoped="" ref="0xb64dd2b0"/>
        <function-ref name="clr" scoped="" ref="0xb64dd390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0xb64daa58" loc="37:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0xb64daa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb64dac30"/>
        <function-ref name="disable" scoped="" ref="0xb64dad10"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb64dadf0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb64daed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0xb64d9838" loc="40:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0xb64d9838"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64d9a10"/>
        <function-ref name="isInput" scoped="" ref="0xb64d9af0"/>
        <function-ref name="toggle" scoped="" ref="0xb64d9bd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb64d9cb0"/>
        <function-ref name="get" scoped="" ref="0xb64d9d90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64d9e70"/>
        <function-ref name="set" scoped="" ref="0xb64d7010"/>
        <function-ref name="clr" scoped="" ref="0xb64d70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0xb64d3c80" loc="52:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0xb64d3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0xb64d3e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0xb64e69e0" loc="20:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0xb64e69e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64e6bb8"/>
        <function-ref name="isInput" scoped="" ref="0xb64e6c98"/>
        <function-ref name="toggle" scoped="" ref="0xb64e6d78"/>
        <function-ref name="isOutput" scoped="" ref="0xb64e6e58"/>
        <function-ref name="get" scoped="" ref="0xb64e2010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64e20f0"/>
        <function-ref name="set" scoped="" ref="0xb64e21d0"/>
        <function-ref name="clr" scoped="" ref="0xb64e22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0xb64dc9f8" loc="32:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0xb64dc9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64dcbd0"/>
        <function-ref name="isInput" scoped="" ref="0xb64dccb0"/>
        <function-ref name="toggle" scoped="" ref="0xb64dcd90"/>
        <function-ref name="isOutput" scoped="" ref="0xb64dce70"/>
        <function-ref name="get" scoped="" ref="0xb64db010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64db0f0"/>
        <function-ref name="set" scoped="" ref="0xb64db1d0"/>
        <function-ref name="clr" scoped="" ref="0xb64db2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0xb64d27d8" loc="18:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0xb64d27d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0xb64d29b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0xb64cf3e0" loc="21:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0xb64cf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0xb64cf5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0xb64cfb80" loc="23:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0xb64cfb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0xb64cfd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0xb64d2ba8" loc="19:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0xb64d2ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0xb64d2d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0xb64ce010" loc="24:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0xb64ce010"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0xb64ce1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0xb64cf010" loc="20:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0xb64cf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0xb64cf1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0xb64cf7b0" loc="22:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0xb64cf7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0xb64cf988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0xb64ce3e0" loc="25:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0xb64ce3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0xb64ce5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0xb64c1168" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0xb64c1168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb64c1340"/>
        <function-ref name="fired" scoped="" ref="0xb64c1420"/>
        <function-ref name="disable" scoped="" ref="0xb64c1500"/>
        <function-ref name="edge" scoped="" ref="0xb64c15e0"/>
        <function-ref name="enable" scoped="" ref="0xb64c16c0"/>
        <function-ref name="getValue" scoped="" ref="0xb64c17a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0xb64c65d8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0xb64c65d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb64c67b0"/>
        <function-ref name="fired" scoped="" ref="0xb64c6890"/>
        <function-ref name="disable" scoped="" ref="0xb64c6970"/>
        <function-ref name="edge" scoped="" ref="0xb64c6a50"/>
        <function-ref name="enable" scoped="" ref="0xb64c6b30"/>
        <function-ref name="getValue" scoped="" ref="0xb64c6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0xb64c2010" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0xb64c2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb64c21e8"/>
        <function-ref name="fired" scoped="" ref="0xb64c22c8"/>
        <function-ref name="disable" scoped="" ref="0xb64c23a8"/>
        <function-ref name="edge" scoped="" ref="0xb64c2488"/>
        <function-ref name="enable" scoped="" ref="0xb64c2568"/>
        <function-ref name="getValue" scoped="" ref="0xb64c2648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0xb64c19e8" loc="52:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0xb64c19e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb64c1bc0"/>
        <function-ref name="fired" scoped="" ref="0xb64c1ca0"/>
        <function-ref name="disable" scoped="" ref="0xb64c1d80"/>
        <function-ref name="edge" scoped="" ref="0xb64c1e60"/>
        <function-ref name="enable" scoped="" ref="0xb64c0010"/>
        <function-ref name="getValue" scoped="" ref="0xb64c00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0xb64c6e58" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0xb64c6e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb64c5050"/>
        <function-ref name="fired" scoped="" ref="0xb64c5130"/>
        <function-ref name="disable" scoped="" ref="0xb64c5210"/>
        <function-ref name="edge" scoped="" ref="0xb64c52f0"/>
        <function-ref name="enable" scoped="" ref="0xb64c53d0"/>
        <function-ref name="getValue" scoped="" ref="0xb64c54b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0xb64c2890" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0xb64c2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb64c2a68"/>
        <function-ref name="fired" scoped="" ref="0xb64c2b48"/>
        <function-ref name="disable" scoped="" ref="0xb64c2c28"/>
        <function-ref name="edge" scoped="" ref="0xb64c2d08"/>
        <function-ref name="enable" scoped="" ref="0xb64c2de8"/>
        <function-ref name="getValue" scoped="" ref="0xb64c2ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0xb64c3ce0" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0xb64c3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb64c3eb8"/>
        <function-ref name="fired" scoped="" ref="0xb64c6010"/>
        <function-ref name="disable" scoped="" ref="0xb64c60f0"/>
        <function-ref name="edge" scoped="" ref="0xb64c61d0"/>
        <function-ref name="enable" scoped="" ref="0xb64c62b0"/>
        <function-ref name="getValue" scoped="" ref="0xb64c6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0xb64c56f8" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0xb64c56f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb64c58d0"/>
        <function-ref name="fired" scoped="" ref="0xb64c59b0"/>
        <function-ref name="disable" scoped="" ref="0xb64c5a90"/>
        <function-ref name="edge" scoped="" ref="0xb64c5b70"/>
        <function-ref name="enable" scoped="" ref="0xb64c5c50"/>
        <function-ref name="getValue" scoped="" ref="0xb64c5d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0xb64ba1a0" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0xb64ba1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb64ba378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0xb64bba60" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0xb64bba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb64bbc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0xb64bd7d8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0xb64bd7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb64bd9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0xb64ba618" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0xb64ba618"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb64ba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0xb64bbed8" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0xb64bbed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb64bd0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0xb64bdc50" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0xb64bdc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb64bde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0xb64bb5e8" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0xb64bb5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb64bb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0xb64bd360" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0xb64bd360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb64bd538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb64be570" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb64be570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb64be748"/>
        <function-ref name="fired" scoped="" ref="0xb64be828"/>
        <function-ref name="disable" scoped="" ref="0xb64be908"/>
        <function-ref name="edge" scoped="" ref="0xb64be9e8"/>
        <function-ref name="enable" scoped="" ref="0xb64beac8"/>
        <function-ref name="getValue" scoped="" ref="0xb64beba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb64bed28" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb64bed28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb64bef00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb649f6c0" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb649f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb649f898"/>
        <function-ref name="fired" scoped="" ref="0xb649f978"/>
        <function-ref name="disable" scoped="" ref="0xb649fa58"/>
        <function-ref name="edge" scoped="" ref="0xb649fb38"/>
        <function-ref name="enable" scoped="" ref="0xb649fc18"/>
        <function-ref name="getValue" scoped="" ref="0xb649fcf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb649fe78" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb649fe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb649e070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb649c7a8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb649c7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb649c980"/>
        <function-ref name="fired" scoped="" ref="0xb649ca60"/>
        <function-ref name="disable" scoped="" ref="0xb649cb40"/>
        <function-ref name="edge" scoped="" ref="0xb649cc20"/>
        <function-ref name="enable" scoped="" ref="0xb649cd00"/>
        <function-ref name="getValue" scoped="" ref="0xb649cde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb649b010" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb649b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb649b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb649a920" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb649a920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb649aaf8"/>
        <function-ref name="fired" scoped="" ref="0xb649abd8"/>
        <function-ref name="disable" scoped="" ref="0xb649acb8"/>
        <function-ref name="edge" scoped="" ref="0xb649ad98"/>
        <function-ref name="enable" scoped="" ref="0xb649ae78"/>
        <function-ref name="getValue" scoped="" ref="0xb6499010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb6499190" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb6499190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6499368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb6498b68" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb6498b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6498d40"/>
        <function-ref name="fired" scoped="" ref="0xb6498e20"/>
        <function-ref name="disable" scoped="" ref="0xb6498f00"/>
        <function-ref name="edge" scoped="" ref="0xb6497010"/>
        <function-ref name="enable" scoped="" ref="0xb64970f0"/>
        <function-ref name="getValue" scoped="" ref="0xb64971d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb6497350" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb6497350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6497528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb6496c70" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb6496c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6496e48"/>
        <function-ref name="fired" scoped="" ref="0xb6496f28"/>
        <function-ref name="disable" scoped="" ref="0xb6495018"/>
        <function-ref name="edge" scoped="" ref="0xb64950f8"/>
        <function-ref name="enable" scoped="" ref="0xb64951d8"/>
        <function-ref name="getValue" scoped="" ref="0xb64952b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb6495438" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb6495438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6495610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb6494d60" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb6494d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6492010"/>
        <function-ref name="fired" scoped="" ref="0xb64920f0"/>
        <function-ref name="disable" scoped="" ref="0xb64921d0"/>
        <function-ref name="edge" scoped="" ref="0xb64922b0"/>
        <function-ref name="enable" scoped="" ref="0xb6492390"/>
        <function-ref name="getValue" scoped="" ref="0xb6492470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb64925f0" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb64925f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb64927c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0xb6490010" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0xb6490010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb64901e8"/>
        <function-ref name="fired" scoped="" ref="0xb64902c8"/>
        <function-ref name="disable" scoped="" ref="0xb64903a8"/>
        <function-ref name="edge" scoped="" ref="0xb6490488"/>
        <function-ref name="enable" scoped="" ref="0xb6490568"/>
        <function-ref name="getValue" scoped="" ref="0xb6490648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0xb64907c8" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0xb64907c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb64909a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0xb6488050" loc="9:/home/wsn/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0xb6488050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6488228"/>
        <function-ref name="fired" scoped="" ref="0xb6488308"/>
        <function-ref name="disable" scoped="" ref="0xb64883e8"/>
        <function-ref name="edge" scoped="" ref="0xb64884c8"/>
        <function-ref name="enable" scoped="" ref="0xb64885a8"/>
        <function-ref name="getValue" scoped="" ref="0xb6488688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0xb6489a28" loc="8:/home/wsn/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0xb6489a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6489c00"/>
        <function-ref name="disable" scoped="" ref="0xb6489ce0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb6489dc0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb6489ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0xb6480190" loc="9:/home/wsn/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0xb6480190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6480368"/>
        <function-ref name="fired" scoped="" ref="0xb6480448"/>
        <function-ref name="disable" scoped="" ref="0xb6480528"/>
        <function-ref name="edge" scoped="" ref="0xb6480608"/>
        <function-ref name="enable" scoped="" ref="0xb64806e8"/>
        <function-ref name="getValue" scoped="" ref="0xb64807c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0xb6481ae0" loc="8:/home/wsn/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0xb6481ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6481cb8"/>
        <function-ref name="disable" scoped="" ref="0xb6481d98"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb6481e78"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb6480010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0xb647d270" loc="9:/home/wsn/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0xb647d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb647d448"/>
        <function-ref name="fired" scoped="" ref="0xb647d528"/>
        <function-ref name="disable" scoped="" ref="0xb647d608"/>
        <function-ref name="edge" scoped="" ref="0xb647d6e8"/>
        <function-ref name="enable" scoped="" ref="0xb647d7c8"/>
        <function-ref name="getValue" scoped="" ref="0xb647d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0xb647ec30" loc="8:/home/wsn/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0xb647ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb647ee08"/>
        <function-ref name="disable" scoped="" ref="0xb647eee8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb647d010"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb647d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0xb647b358" loc="9:/home/wsn/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0xb647b358"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb647b530"/>
        <function-ref name="fired" scoped="" ref="0xb647b610"/>
        <function-ref name="disable" scoped="" ref="0xb647b6f0"/>
        <function-ref name="edge" scoped="" ref="0xb647b7d0"/>
        <function-ref name="enable" scoped="" ref="0xb647b8b0"/>
        <function-ref name="getValue" scoped="" ref="0xb647b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0xb647cd48" loc="8:/home/wsn/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0xb647cd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb647cf20"/>
        <function-ref name="disable" scoped="" ref="0xb647b018"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0xb647b0f8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0xb647b1d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempAdc" ref="0xb6470278" loc="17:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempAdc" scoped="" ref="0xb6470278"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0xb6470450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0xb646ec08" loc="16:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0xb646ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0xb646ede0"/>
        <function-ref name="getChannel" scoped="" ref="0xb646eec0"/>
        <function-ref name="getPrescaler" scoped="" ref="0xb6470010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb642ab60" loc="92:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb642ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb642ad48"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb642ae28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb6429b58" loc="96:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6429b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6429d40"/>
        <function-ref name="configure" scoped="" ref="0xb6429e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb6429010" loc="93:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6429010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb64291e8"/>
        <function-ref name="requested" scoped="" ref="0xb64292c8"/>
        <function-ref name="granted" scoped="" ref="0xb64293a8"/>
        <function-ref name="isOwner" scoped="" ref="0xb6429488"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6429568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb642a420" loc="91:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb642a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb642a608"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb642a6e8"/>
        <function-ref name="request" scoped="" ref="0xb642a7c8"/>
        <function-ref name="granted" scoped="" ref="0xb642a8a8"/>
        <function-ref name="isOwner" scoped="" ref="0xb642a988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb64296a8" loc="94:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb64296a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb6429880"/>
        <function-ref name="userId" scoped="" ref="0xb6429960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5da5208" loc="44:/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb5da5208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5da53e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0xb5da5540" loc="45:/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0xb5da5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5da5718"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5da57f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb5da58d8"/>
        <function-ref name="dequeue" scoped="" ref="0xb5da59b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb5da3e28" loc="55:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb5da3e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb5da2050"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5da2130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb5da2dc8" loc="60:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5da2dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5da1010"/>
        <function-ref name="configure" scoped="" ref="0xb5da10f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb5da1250" loc="61:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb5da1250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5da1428"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5da1508"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb5da15e8"/>
        <function-ref name="dequeue" scoped="" ref="0xb5da16c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb5da2270" loc="56:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5da2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5da2448"/>
        <function-ref name="requested" scoped="" ref="0xb5da2528"/>
        <function-ref name="granted" scoped="" ref="0xb5da2608"/>
        <function-ref name="isOwner" scoped="" ref="0xb5da26e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5da27c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5da1808" loc="62:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb5da1808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5da19e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5da1ac0"/>
        <function-ref name="led1On" scoped="" ref="0xb5da1ba0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5da1c80"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5da1d60"/>
        <function-ref name="get" scoped="" ref="0xb5da1e40"/>
        <function-ref name="led1Off" scoped="" ref="0xb5da1f20"/>
        <function-ref name="led0On" scoped="" ref="0xb5da02b8"/>
        <function-ref name="set" scoped="" ref="0xb5da00f8"/>
        <function-ref name="led2On" scoped="" ref="0xb5da0018"/>
        <function-ref name="led2Off" scoped="" ref="0xb5da01d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5da36e8" loc="54:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb5da36e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5da38d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5da39b0"/>
        <function-ref name="request" scoped="" ref="0xb5da3a90"/>
        <function-ref name="granted" scoped="" ref="0xb5da3b70"/>
        <function-ref name="isOwner" scoped="" ref="0xb5da3c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb5da2908" loc="57:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5da2908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb5da2ae0"/>
        <function-ref name="userId" scoped="" ref="0xb5da2bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb5da0438" loc="75:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb5da0438"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5da0610"/>
        <function-ref name="runTask" scoped="" ref="0xb5da06f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb64279f8" loc="92:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb64279f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb6427be0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6427cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb6426980" loc="96:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6426980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6426b68"/>
        <function-ref name="configure" scoped="" ref="0xb6426c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb6427e00" loc="93:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6427e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6426010"/>
        <function-ref name="requested" scoped="" ref="0xb64260f0"/>
        <function-ref name="granted" scoped="" ref="0xb64261d0"/>
        <function-ref name="isOwner" scoped="" ref="0xb64262b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6426390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb64272b8" loc="91:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb64272b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb64274a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6427580"/>
        <function-ref name="request" scoped="" ref="0xb6427660"/>
        <function-ref name="granted" scoped="" ref="0xb6427740"/>
        <function-ref name="isOwner" scoped="" ref="0xb6427820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb64264d0" loc="94:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb64264d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb64266a8"/>
        <function-ref name="userId" scoped="" ref="0xb6426788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5d84340" loc="44:/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb5d84340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5d84518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0xb5d84678" loc="45:/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0xb5d84678"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5d84850"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5d84930"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb5d84a10"/>
        <function-ref name="dequeue" scoped="" ref="0xb5d84af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb5d82010" loc="55:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb5d82010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb5d821f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5d822d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb5d81010" loc="60:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5d81010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5d811f8"/>
        <function-ref name="configure" scoped="" ref="0xb5d812d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb5d81438" loc="61:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb5d81438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5d81610"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5d816f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb5d817d0"/>
        <function-ref name="dequeue" scoped="" ref="0xb5d818b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb5d82418" loc="56:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5d82418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5d825f0"/>
        <function-ref name="requested" scoped="" ref="0xb5d826d0"/>
        <function-ref name="granted" scoped="" ref="0xb5d827b0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5d82890"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5d82970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5d819f0" loc="62:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb5d819f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5d81bc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5d81ca8"/>
        <function-ref name="led1On" scoped="" ref="0xb5d81d88"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5d81e68"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5d80010"/>
        <function-ref name="get" scoped="" ref="0xb5d800f0"/>
        <function-ref name="led1Off" scoped="" ref="0xb5d801d0"/>
        <function-ref name="led0On" scoped="" ref="0xb5d80550"/>
        <function-ref name="set" scoped="" ref="0xb5d80390"/>
        <function-ref name="led2On" scoped="" ref="0xb5d802b0"/>
        <function-ref name="led2Off" scoped="" ref="0xb5d80470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5d837f0" loc="54:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb5d837f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5d839d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5d83ab8"/>
        <function-ref name="request" scoped="" ref="0xb5d83b98"/>
        <function-ref name="granted" scoped="" ref="0xb5d83c78"/>
        <function-ref name="isOwner" scoped="" ref="0xb5d83d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb5d82ab0" loc="57:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5d82ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb5d82c88"/>
        <function-ref name="userId" scoped="" ref="0xb5d82d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb5d806d0" loc="75:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb5d806d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5d808a8"/>
        <function-ref name="runTask" scoped="" ref="0xb5d80988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb6423750" loc="92:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb6423750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb6423938"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6423a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb64226e0" loc="96:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb64226e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb64228c8"/>
        <function-ref name="configure" scoped="" ref="0xb64229a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb6423b58" loc="93:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6423b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6423d30"/>
        <function-ref name="requested" scoped="" ref="0xb6423e10"/>
        <function-ref name="granted" scoped="" ref="0xb6423ef0"/>
        <function-ref name="isOwner" scoped="" ref="0xb6422010"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb64220f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6423010" loc="91:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6423010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb64231f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb64232d8"/>
        <function-ref name="request" scoped="" ref="0xb64233b8"/>
        <function-ref name="granted" scoped="" ref="0xb6423498"/>
        <function-ref name="isOwner" scoped="" ref="0xb6423578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb6422230" loc="94:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb6422230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb6422408"/>
        <function-ref name="userId" scoped="" ref="0xb64224e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5d64530" loc="44:/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb5d64530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5d64708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0xb5d64868" loc="45:/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0xb5d64868"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5d64a40"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5d64b20"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb5d64c00"/>
        <function-ref name="dequeue" scoped="" ref="0xb5d64ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb5d611e8" loc="55:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb5d611e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb5d613d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5d614b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb5d60218" loc="60:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5d60218"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5d60400"/>
        <function-ref name="configure" scoped="" ref="0xb5d604e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb5d60640" loc="61:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb5d60640"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5d60818"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5d608f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb5d609d8"/>
        <function-ref name="dequeue" scoped="" ref="0xb5d60ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb5d615f0" loc="56:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5d615f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5d617c8"/>
        <function-ref name="requested" scoped="" ref="0xb5d618a8"/>
        <function-ref name="granted" scoped="" ref="0xb5d61988"/>
        <function-ref name="isOwner" scoped="" ref="0xb5d61a68"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5d61b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5d60bf8" loc="62:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb5d60bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5d60dd0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5d60eb0"/>
        <function-ref name="led1On" scoped="" ref="0xb5d5f010"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5d5f0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5d5f1d0"/>
        <function-ref name="get" scoped="" ref="0xb5d5f2b0"/>
        <function-ref name="led1Off" scoped="" ref="0xb5d5f390"/>
        <function-ref name="led0On" scoped="" ref="0xb5d5f710"/>
        <function-ref name="set" scoped="" ref="0xb5d5f550"/>
        <function-ref name="led2On" scoped="" ref="0xb5d5f470"/>
        <function-ref name="led2Off" scoped="" ref="0xb5d5f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5d63a78" loc="54:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb5d63a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5d63c60"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5d63d40"/>
        <function-ref name="request" scoped="" ref="0xb5d63e20"/>
        <function-ref name="granted" scoped="" ref="0xb5d63f00"/>
        <function-ref name="isOwner" scoped="" ref="0xb5d61010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb5d61c88" loc="57:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5d61c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb5d61e60"/>
        <function-ref name="userId" scoped="" ref="0xb5d60010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb5d5f890" loc="75:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb5d5f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5d5fa68"/>
        <function-ref name="runTask" scoped="" ref="0xb5d5fb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0xb64200b0" loc="69:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb64200b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6420288"/>
        <function-ref name="stopDone" scoped="" ref="0xb6420368"/>
        <function-ref name="start" scoped="" ref="0xb6420448"/>
        <function-ref name="stop" scoped="" ref="0xb6420528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0xb6420668" loc="71:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0xb6420668"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0xb6420840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0xb6420980" loc="72:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6420980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6420b58"/>
        <function-ref name="requested" scoped="" ref="0xb6420c38"/>
        <function-ref name="granted" scoped="" ref="0xb6420d18"/>
        <function-ref name="isOwner" scoped="" ref="0xb6420df8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6420ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb641f030" loc="73:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb641f030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb641f208"/>
        <function-ref name="userId" scoped="" ref="0xb641f2e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0xb5d447a8" loc="61:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb5d447a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb5d44980"/>
        <function-ref name="stopDone" scoped="" ref="0xb5d44a60"/>
        <function-ref name="start" scoped="" ref="0xb5d44b40"/>
        <function-ref name="stop" scoped="" ref="0xb5d44c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0xb5d44d60" loc="63:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0xb5d44d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0xb5d43010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0xb5d43c20" loc="78:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0xb5d43c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5d43df8"/>
        <function-ref name="runTask" scoped="" ref="0xb5d43ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0xb5d43150" loc="64:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5d43150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5d43328"/>
        <function-ref name="requested" scoped="" ref="0xb5d43408"/>
        <function-ref name="granted" scoped="" ref="0xb5d434e8"/>
        <function-ref name="isOwner" scoped="" ref="0xb5d435c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5d436a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0xb5d42080" loc="73:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0xb5d42080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5d42258"/>
        <function-ref name="runTask" scoped="" ref="0xb5d42338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0xb5d443b0" loc="60:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb5d443b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5d44588"/>
        <function-ref name="stop" scoped="" ref="0xb5d44668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb5d437e8" loc="65:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5d437e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb5d439c0"/>
        <function-ref name="userId" scoped="" ref="0xb5d43aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0xb6405118" loc="69:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6405118"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb64052f0"/>
        <function-ref name="stopDone" scoped="" ref="0xb64053d0"/>
        <function-ref name="start" scoped="" ref="0xb64054b0"/>
        <function-ref name="stop" scoped="" ref="0xb6405590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0xb64056d0" loc="71:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0xb64056d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0xb64058a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0xb64059e8" loc="72:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb64059e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6405bc0"/>
        <function-ref name="requested" scoped="" ref="0xb6405ca0"/>
        <function-ref name="granted" scoped="" ref="0xb6405d80"/>
        <function-ref name="isOwner" scoped="" ref="0xb6405e60"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6404010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb6404150" loc="73:/home/wsn/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb6404150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb6404328"/>
        <function-ref name="userId" scoped="" ref="0xb6404408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0xb5d37408" loc="61:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb5d37408"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb5d375e0"/>
        <function-ref name="stopDone" scoped="" ref="0xb5d376c0"/>
        <function-ref name="start" scoped="" ref="0xb5d377a0"/>
        <function-ref name="stop" scoped="" ref="0xb5d37880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0xb5d379c0" loc="63:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0xb5d379c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0xb5d37b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0xb5d36828" loc="78:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0xb5d36828"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5d36a00"/>
        <function-ref name="runTask" scoped="" ref="0xb5d36ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0xb5d37cd8" loc="64:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5d37cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5d37eb0"/>
        <function-ref name="requested" scoped="" ref="0xb5d36010"/>
        <function-ref name="granted" scoped="" ref="0xb5d360f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5d361d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5d362b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0xb5d36c60" loc="73:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0xb5d36c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5d36e38"/>
        <function-ref name="runTask" scoped="" ref="0xb5d36f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0xb5d37010" loc="60:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb5d37010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5d371e8"/>
        <function-ref name="stop" scoped="" ref="0xb5d372c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb5d363f0" loc="65:/home/wsn/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5d363f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb5d365c8"/>
        <function-ref name="userId" scoped="" ref="0xb5d366a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6403b10" loc="4:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6403b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6403ce8"/>
        <function-ref name="stopDone" scoped="" ref="0xb6403dc8"/>
        <function-ref name="start" scoped="" ref="0xb6403ea8"/>
        <function-ref name="stop" scoped="" ref="0xb6402010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0xb6402e50" loc="8:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0xb6402e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb63ef050"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb63ef130"/>
        <function-ref name="request" scoped="" ref="0xb63ef210"/>
        <function-ref name="granted" scoped="" ref="0xb63ef2f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb63ef3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb6402278" loc="5:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0xb6402278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb64028b0"/>
        <function-ref name="readDone" scoped="" ref="0xb6402b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0xb63ebd98" loc="32:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0xb63ebd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb63ea010"/>
        <function-ref name="runTask" scoped="" ref="0xb63ea0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0xb63ec778" loc="10:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0xb63ec778"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb63ec950"/>
        <function-ref name="isInput" scoped="" ref="0xb63eca30"/>
        <function-ref name="toggle" scoped="" ref="0xb63ecb10"/>
        <function-ref name="isOutput" scoped="" ref="0xb63ecbf0"/>
        <function-ref name="get" scoped="" ref="0xb63eccd0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb63ecdb0"/>
        <function-ref name="set" scoped="" ref="0xb63ece90"/>
        <function-ref name="clr" scoped="" ref="0xb63eb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0xb63eb200" loc="11:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0xb63eb200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb63eb828"/>
        <function-ref name="readDone" scoped="" ref="0xb63eba80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb63ef5a0" loc="9:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb63ef5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb63ec098"/>
        <function-ref name="fired" scoped="" ref="0xb63ee330"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb63eea38"/>
        <function-ref name="isOneShot" scoped="" ref="0xb63ee7e0"/>
        <function-ref name="getdt" scoped="" ref="0xb63ec548"/>
        <function-ref name="gett0" scoped="" ref="0xb63ec2f0"/>
        <function-ref name="isRunning" scoped="" ref="0xb63ee588"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb63efbc8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb63eed58"/>
        <function-ref name="startOneShot" scoped="" ref="0xb63efe48"/>
        <function-ref name="stop" scoped="" ref="0xb63ee0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb63e94d0" loc="4:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb63e94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb63e96a8"/>
        <function-ref name="stopDone" scoped="" ref="0xb63e9788"/>
        <function-ref name="start" scoped="" ref="0xb63e9868"/>
        <function-ref name="stop" scoped="" ref="0xb63e9948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0xb63e87b8" loc="8:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0xb63e87b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb63e8990"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb63e8a70"/>
        <function-ref name="request" scoped="" ref="0xb63e8b50"/>
        <function-ref name="granted" scoped="" ref="0xb63e8c30"/>
        <function-ref name="isOwner" scoped="" ref="0xb63e8d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb63e9bb0" loc="5:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0xb63e9bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb63e8218"/>
        <function-ref name="readDone" scoped="" ref="0xb63e8480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0xb63e3750" loc="32:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0xb63e3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb63e3928"/>
        <function-ref name="runTask" scoped="" ref="0xb63e3a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0xb63e4128" loc="10:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0xb63e4128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb63e4300"/>
        <function-ref name="isInput" scoped="" ref="0xb63e43e0"/>
        <function-ref name="toggle" scoped="" ref="0xb63e44c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb63e45a0"/>
        <function-ref name="get" scoped="" ref="0xb63e4680"/>
        <function-ref name="makeOutput" scoped="" ref="0xb63e4760"/>
        <function-ref name="set" scoped="" ref="0xb63e4840"/>
        <function-ref name="clr" scoped="" ref="0xb63e4920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0xb63e4b10" loc="11:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0xb63e4b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb63e31e0"/>
        <function-ref name="readDone" scoped="" ref="0xb63e3438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb63e8ee0" loc="9:/home/wsn/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb63e8ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb63e5a18"/>
        <function-ref name="fired" scoped="" ref="0xb63e7cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb63e53d8"/>
        <function-ref name="isOneShot" scoped="" ref="0xb63e5180"/>
        <function-ref name="getdt" scoped="" ref="0xb63e5ec8"/>
        <function-ref name="gett0" scoped="" ref="0xb63e5c70"/>
        <function-ref name="isRunning" scoped="" ref="0xb63e7f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb63e7558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb63e56f8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb63e77d8"/>
        <function-ref name="stop" scoped="" ref="0xb63e7a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb63e2d90" loc="45:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="PhotoTempDeviceC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb63e2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328340"/>
            <typename><typedef-ref name="TMilli" ref="0xb7328508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb63df8a8"/>
        <function-ref name="fired" scoped="" ref="0xb63e1b38"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb63df268"/>
        <function-ref name="isOneShot" scoped="" ref="0xb63df010"/>
        <function-ref name="getdt" scoped="" ref="0xb63dfd58"/>
        <function-ref name="gett0" scoped="" ref="0xb63dfb00"/>
        <function-ref name="isRunning" scoped="" ref="0xb63e1d90"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb63e13e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb63df588"/>
        <function-ref name="startOneShot" scoped="" ref="0xb63e1660"/>
        <function-ref name="stop" scoped="" ref="0xb63e18e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb63dca80" loc="25:/home/wsn/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb63dca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb63dcc58"/>
        <function-ref name="configure" scoped="" ref="0xb63dcd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb63dd9e0" loc="22:/home/wsn/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0xb63dd9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb63dc048"/>
        <function-ref name="readDone" scoped="" ref="0xb63dc2a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0xb63dc5a8" loc="24:/home/wsn/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0xb63dc5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0xb63dc780"/>
        <function-ref name="getChannel" scoped="" ref="0xb63dc860"/>
        <function-ref name="getPrescaler" scoped="" ref="0xb63dc940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb63dac48" loc="19:/home/wsn/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0xb63dac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb63d7288"/>
        <function-ref name="readDone" scoped="" ref="0xb63d74e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0xb63d6100" loc="20:/home/wsn/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0xb63d6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb63d6748"/>
        <function-ref name="readDone" scoped="" ref="0xb63d69c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0xb63d5100" loc="23:/home/wsn/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0xb63d5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0xb63d52d8"/>
        <function-ref name="getChannel" scoped="" ref="0xb63d53b8"/>
        <function-ref name="getPrescaler" scoped="" ref="0xb63d5498"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb63d5938" loc="24:/home/wsn/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb63d5938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb63d5b10"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb63d5bf0"/>
        <function-ref name="request" scoped="" ref="0xb63d5cd0"/>
        <function-ref name="granted" scoped="" ref="0xb63d5db0"/>
        <function-ref name="isOwner" scoped="" ref="0xb63d5e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb63ce100" loc="58:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb63ce100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb63ce2d8"/>
        <function-ref name="configure" scoped="" ref="0xb63ce3b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0xb63c7870" loc="56:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0xb63c7870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb63c7a48"/>
        <function-ref name="dataReady" scoped="" ref="0xb63c7b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0xb63ca300" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0xb63ca300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb63ca4d8"/>
        <function-ref name="cancel" scoped="" ref="0xb63ca5b8"/>
        <function-ref name="dataReady" scoped="" ref="0xb63ca698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb63d28f8" loc="54:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb63d28f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb63d2ad0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb63d2bb0"/>
        <function-ref name="request" scoped="" ref="0xb63d2c90"/>
        <function-ref name="granted" scoped="" ref="0xb63d2d70"/>
        <function-ref name="isOwner" scoped="" ref="0xb63d2e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb63ced78" loc="54:/home/wsn/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb63ced78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb63c5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0xb63c5c00" loc="57:/home/wsn/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0xb63c5c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb63c5dd8"/>
        <function-ref name="dataReady" scoped="" ref="0xb63c5eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0xb63c5678" loc="56:/home/wsn/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0xb63c5678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb63c5850"/>
        <function-ref name="cancel" scoped="" ref="0xb63c5930"/>
        <function-ref name="dataReady" scoped="" ref="0xb63c5a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0xb63ba498" loc="60:/home/wsn/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0xb63ba498"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0xb63ba670"/>
        <function-ref name="getAdmux" scoped="" ref="0xb63ba750"/>
        <function-ref name="setPrescaler" scoped="" ref="0xb63ba830"/>
        <function-ref name="isEnabled" scoped="" ref="0xb63ba910"/>
        <function-ref name="enableAdc" scoped="" ref="0xb63ba9f0"/>
        <function-ref name="setAdmux" scoped="" ref="0xb63baad0"/>
        <function-ref name="enableInterruption" scoped="" ref="0xb63babb0"/>
        <function-ref name="isComplete" scoped="" ref="0xb63bac90"/>
        <function-ref name="cancel" scoped="" ref="0xb63bad70"/>
        <function-ref name="disableAdc" scoped="" ref="0xb63bae50"/>
        <function-ref name="resetInterrupt" scoped="" ref="0xb63c2010"/>
        <function-ref name="disableInterruption" scoped="" ref="0xb63c20f0"/>
        <function-ref name="startConversion" scoped="" ref="0xb63c21d0"/>
        <function-ref name="isStarted" scoped="" ref="0xb63c2330"/>
        <function-ref name="setAdcsra" scoped="" ref="0xb63c2410"/>
        <function-ref name="setContinuous" scoped="" ref="0xb63c24f0"/>
        <function-ref name="getAdcsra" scoped="" ref="0xb63c25d0"/>
        <function-ref name="getValue" scoped="" ref="0xb63c26b0"/>
        <function-ref name="dataReady" scoped="" ref="0xb63c2790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xb63c51e8" loc="55:/home/wsn/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xb63c51e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb63c53c0"/>
        <function-ref name="stop" scoped="" ref="0xb63c54a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0xb63c2968" loc="61:/home/wsn/tinyos-main/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb63c2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb63c2b40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb63c2c20"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb63c2d00"/>
        <function-ref name="actualMicro" scoped="" ref="0xb63c2de0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb63c2ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0xb63cd648" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0xb63cd648"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0xb63cd820"/>
        <function-ref name="getAdmux" scoped="" ref="0xb63cd900"/>
        <function-ref name="setPrescaler" scoped="" ref="0xb63cd9e0"/>
        <function-ref name="isEnabled" scoped="" ref="0xb63cdac0"/>
        <function-ref name="enableAdc" scoped="" ref="0xb63cdba0"/>
        <function-ref name="setAdmux" scoped="" ref="0xb63cdc80"/>
        <function-ref name="enableInterruption" scoped="" ref="0xb63cdd60"/>
        <function-ref name="isComplete" scoped="" ref="0xb63cde40"/>
        <function-ref name="cancel" scoped="" ref="0xb63cdf20"/>
        <function-ref name="disableAdc" scoped="" ref="0xb639d018"/>
        <function-ref name="resetInterrupt" scoped="" ref="0xb639d0f8"/>
        <function-ref name="disableInterruption" scoped="" ref="0xb639d1d8"/>
        <function-ref name="startConversion" scoped="" ref="0xb639d2b8"/>
        <function-ref name="isStarted" scoped="" ref="0xb639d418"/>
        <function-ref name="setAdcsra" scoped="" ref="0xb639d4f8"/>
        <function-ref name="setContinuous" scoped="" ref="0xb639d5d8"/>
        <function-ref name="getAdcsra" scoped="" ref="0xb639d6b8"/>
        <function-ref name="getValue" scoped="" ref="0xb639d798"/>
        <function-ref name="dataReady" scoped="" ref="0xb639d878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0xb639a2b8" loc="48:/home/wsn/tinyos-main/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0xb639a2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0xb639a490"/>
        <function-ref name="getAdmux" scoped="" ref="0xb639a570"/>
        <function-ref name="setPrescaler" scoped="" ref="0xb639a650"/>
        <function-ref name="isEnabled" scoped="" ref="0xb639a730"/>
        <function-ref name="enableAdc" scoped="" ref="0xb639a810"/>
        <function-ref name="setAdmux" scoped="" ref="0xb639a8f0"/>
        <function-ref name="enableInterruption" scoped="" ref="0xb639a9d0"/>
        <function-ref name="isComplete" scoped="" ref="0xb639aab0"/>
        <function-ref name="cancel" scoped="" ref="0xb639ab90"/>
        <function-ref name="disableAdc" scoped="" ref="0xb639ac70"/>
        <function-ref name="resetInterrupt" scoped="" ref="0xb639ad50"/>
        <function-ref name="disableInterruption" scoped="" ref="0xb639ae30"/>
        <function-ref name="startConversion" scoped="" ref="0xb639af10"/>
        <function-ref name="isStarted" scoped="" ref="0xb6398090"/>
        <function-ref name="setAdcsra" scoped="" ref="0xb6398170"/>
        <function-ref name="setContinuous" scoped="" ref="0xb6398250"/>
        <function-ref name="getAdcsra" scoped="" ref="0xb6398330"/>
        <function-ref name="getValue" scoped="" ref="0xb6398410"/>
        <function-ref name="dataReady" scoped="" ref="0xb63984f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xb63986d8" loc="49:/home/wsn/tinyos-main/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb63986d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb63988b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb639e848" loc="92:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb639e848"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb639ea30"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb639eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb637b7c0" loc="96:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb637b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb637b9a8"/>
        <function-ref name="configure" scoped="" ref="0xb637ba88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb639ec50" loc="93:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb639ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb639ee28"/>
        <function-ref name="requested" scoped="" ref="0xb639ef08"/>
        <function-ref name="granted" scoped="" ref="0xb637b010"/>
        <function-ref name="isOwner" scoped="" ref="0xb637b0f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb637b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb639e108" loc="91:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb639e108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb639e2f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb639e3d0"/>
        <function-ref name="request" scoped="" ref="0xb639e4b0"/>
        <function-ref name="granted" scoped="" ref="0xb639e590"/>
        <function-ref name="isOwner" scoped="" ref="0xb639e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb637b310" loc="94:/home/wsn/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb637b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb637b4e8"/>
        <function-ref name="userId" scoped="" ref="0xb637b5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb5d16d40" loc="44:/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb5d16d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb5d16f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0xb5d14090" loc="45:/home/wsn/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0xb5d14090"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5d14268"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5d14348"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb5d14428"/>
        <function-ref name="dequeue" scoped="" ref="0xb5d14508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb5d139d0" loc="55:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb5d139d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb5d13bb8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5d13c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb5d12990" loc="60:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb5d12990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb5d12b78"/>
        <function-ref name="configure" scoped="" ref="0xb5d12c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb5d12db8" loc="61:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb5d12db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb5d10010"/>
        <function-ref name="isEmpty" scoped="" ref="0xb5d100f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb5d101d0"/>
        <function-ref name="dequeue" scoped="" ref="0xb5d102b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0xb5d13dd8" loc="56:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5d13dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5d12010"/>
        <function-ref name="requested" scoped="" ref="0xb5d120f0"/>
        <function-ref name="granted" scoped="" ref="0xb5d121d0"/>
        <function-ref name="isOwner" scoped="" ref="0xb5d122b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5d12390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb5d103f0" loc="62:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb5d103f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb5d105c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb5d106a8"/>
        <function-ref name="led1On" scoped="" ref="0xb5d10788"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb5d10868"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb5d10948"/>
        <function-ref name="get" scoped="" ref="0xb5d10a28"/>
        <function-ref name="led1Off" scoped="" ref="0xb5d10b08"/>
        <function-ref name="led0On" scoped="" ref="0xb5d10e88"/>
        <function-ref name="set" scoped="" ref="0xb5d10cc8"/>
        <function-ref name="led2On" scoped="" ref="0xb5d10be8"/>
        <function-ref name="led2Off" scoped="" ref="0xb5d10da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb5d13290" loc="54:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb5d13290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5d13478"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb5d13558"/>
        <function-ref name="request" scoped="" ref="0xb5d13638"/>
        <function-ref name="granted" scoped="" ref="0xb5d13718"/>
        <function-ref name="isOwner" scoped="" ref="0xb5d137f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb5d124d0" loc="57:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5d124d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb5d126a8"/>
        <function-ref name="userId" scoped="" ref="0xb5d12788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb5d0f030" loc="75:/home/wsn/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb5d0f030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb5d0f208"/>
        <function-ref name="runTask" scoped="" ref="0xb5d0f2e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0xb6379930" loc="72:/home/wsn/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0xb6379930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0xb6379b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0xb6379c48" loc="73:/home/wsn/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb6379c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6379e20"/>
        <function-ref name="requested" scoped="" ref="0xb6379f00"/>
        <function-ref name="granted" scoped="" ref="0xb6378010"/>
        <function-ref name="isOwner" scoped="" ref="0xb63780f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb63781d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0xb6379538" loc="70:/home/wsn/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xb6379538"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6379710"/>
        <function-ref name="stop" scoped="" ref="0xb63797f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb6378310" loc="74:/home/wsn/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb6378310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb63784e8"/>
        <function-ref name="userId" scoped="" ref="0xb63785c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0xb5cf6db0" loc="62:/home/wsn/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0xb5cf6db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0xb5cf4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0xb5cf4150" loc="63:/home/wsn/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0xb5cf4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb5cf4328"/>
        <function-ref name="requested" scoped="" ref="0xb5cf4408"/>
        <function-ref name="granted" scoped="" ref="0xb5cf44e8"/>
        <function-ref name="isOwner" scoped="" ref="0xb5cf45c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb5cf46a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0xb5cf69b8" loc="60:/home/wsn/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xb5cf69b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb5cf6b90"/>
        <function-ref name="stop" scoped="" ref="0xb5cf6c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb5cf47e8" loc="64:/home/wsn/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb5cf47e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb5cf49c0"/>
        <function-ref name="userId" scoped="" ref="0xb5cf4aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0xb63658a0" loc="54:/home/wsn/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb63658a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7328dc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb7326010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb6363010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb636acd0" loc="48:/home/wsn/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0xb636acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb6367310"/>
        <function-ref name="readDone" scoped="" ref="0xb6367568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0xb6367c78" loc="49:/home/wsn/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0xb6367c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb63662e8"/>
        <function-ref name="readDone" scoped="" ref="0xb6366560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0xb63651b8" loc="53:/home/wsn/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0xb63651b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0xb6365390"/>
        <function-ref name="getChannel" scoped="" ref="0xb6365470"/>
        <function-ref name="getPrescaler" scoped="" ref="0xb6365550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0xb6366910" loc="52:/home/wsn/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0xb6366910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0xb6366ae8"/>
        <function-ref name="cancel" scoped="" ref="0xb6366bc8"/>
        <function-ref name="dataReady" scoped="" ref="0xb6366ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0xb635a4e8" loc="104:/home/wsn/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0xb635a4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb635a6c0"/>
        <function-ref name="runTask" scoped="" ref="0xb635a7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb634f560" loc="24:/home/wsn/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0xb634f560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb634fb98"/>
        <function-ref name="readDone" scoped="" ref="0xb634fe00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0xb6341280" loc="26:/home/wsn/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0xb6341280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb63418b8"/>
        <function-ref name="readDone" scoped="" ref="0xb6341b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb6341ea0" loc="27:/home/wsn/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6341ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb63400c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb63401a0"/>
        <function-ref name="request" scoped="" ref="0xb6340280"/>
        <function-ref name="granted" scoped="" ref="0xb6340360"/>
        <function-ref name="isOwner" scoped="" ref="0xb6340440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0xb6335b78" loc="24:/home/wsn/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0xb6335b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb63341e0"/>
        <function-ref name="readDone" scoped="" ref="0xb6334448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0xb63348a8" loc="26:/home/wsn/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0xb63348a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0xb6334ee0"/>
        <function-ref name="readDone" scoped="" ref="0xb6333180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb6333500" loc="27:/home/wsn/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6333500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb63336e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb63337c8"/>
        <function-ref name="request" scoped="" ref="0xb63338a8"/>
        <function-ref name="granted" scoped="" ref="0xb6333988"/>
        <function-ref name="isOwner" scoped="" ref="0xb6333a68"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="RootControl" loc="40:/home/wsn/tinyos-main/tos/lib/net/RootControl.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0xb724f7c8" loc="43:/home/wsn/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0xb724f010" loc="41:/home/wsn/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0xb724f408" loc="42:/home/wsn/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xb726e730" loc="60:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0xb726be00" loc="113:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb726bca8" loc="113:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0xb726ac18" loc="138:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb726aac0" loc="138:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb726b5c0" loc="104:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb726a3e0" loc="130:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb72673c8" loc="75:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7267088" loc="75:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7267268" loc="75:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7263eb0" loc="125:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7263b50" loc="125:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7263d30" loc="125:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb72635f0" loc="112:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb7266020" loc="89:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7267eb0" loc="89:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb7266cb8" loc="100:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7266960" loc="100:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb7266b58" loc="100:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/wsn/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0xb724a270" loc="49:/home/wsn/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb724a270"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0xb724a720" loc="55:/home/wsn/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb724aed0" loc="63:/home/wsn/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb724a270"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb724aba0" loc="63:/home/wsn/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0xb724ad70" loc="63:/home/wsn/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb724a270"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb726ddb8" loc="95:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb72682a8" loc="105:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb724e9e0" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
              <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb724e498" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb724e678" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb724e858" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0xb725c1a8" loc="61:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0xb725c5f0" loc="67:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0xb725ca70" loc="72:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0xb725b2f8" loc="83:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0xb725a010" loc="100:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb725a4b8" loc="117:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0xb725ce98" loc="77:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb725abf8" loc="134:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xb725aaa0" loc="134:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0xb7261d48" loc="56:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0xb725b778" loc="89:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0xb725bba0" loc="94:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7258308" loc="53:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7258308"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb7254a28" loc="136:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb7256890" loc="83:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0xb7255a00" loc="114:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb72556b8" loc="114:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb72558a0" loc="114:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0xb7255210" loc="98:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0xb72533e8" loc="151:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0xb7254e70" loc="144:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb7256d20" loc="92:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0xb7258960" loc="64:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7258808" loc="64:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0xb7254408" loc="129:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb72540c0" loc="129:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb72542a8" loc="129:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0xb7256010" loc="73:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7258ea0" loc="73:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb72564e0" loc="78:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/wsn/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb723b7c8" loc="62:/home/wsn/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0xb72312b0" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0xb7231158" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0xb72358c0" loc="31:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0xb7235ef8" loc="39:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb7235da0" loc="39:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0xb72325f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb72324a0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0xb7232b50" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xb7225090" loc="44:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0xb7225478" loc="45:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0xb72268e8" loc="42:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xb7225c48" loc="47:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb7226ca8" loc="43:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xb7225850" loc="46:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb72261a8" loc="40:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0xb7226538" loc="41:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb74d59d0" loc="57:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xb73753b0" loc="72:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xb74d5e10" loc="65:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xb73702d0" loc="67:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0xb73707e8" loc="75:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0xb72fbb90" loc="76:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/wsn/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0xb72e9e90" loc="62:/home/wsn/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0xb7341470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0xb72e91a8" loc="52:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0xb71152a8" loc="59:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0xb711ff10" loc="59:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb7115148" loc="59:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb71145d0" loc="65:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7114478" loc="65:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb7113010" loc="78:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7114e48" loc="78:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7111010" loc="126:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7110c58" loc="126:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7110e38" loc="126:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7110670" loc="106:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb7113c70" loc="94:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7113930" loc="94:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7113b10" loc="94:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb7120ac8" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7120568" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb7120780" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7120960" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb711a7a0" loc="135:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb711a440" loc="135:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb711a620" loc="135:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb711dde8" loc="123:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb711c7b0" loc="96:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb711c658" loc="96:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb711d4e0" loc="110:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb711d188" loc="110:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb711d380" loc="110:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0xb7100880" loc="65:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71004e8" loc="65:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0xb7100720" loc="65:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0xb70fe350" loc="71:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70fe1f8" loc="71:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0xb7100010" loc="57:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0xb710f8f8" loc="52:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0xb710f7a0" loc="52:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0xb7116f28" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7116dd0" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0xb7103a30" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71038d8" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0xb71024e0" loc="85:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7102388" loc="85:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0xb70fb380" loc="65:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70fb228" loc="65:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0xb70fd780" loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70fd3e8" loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0xb70fd620" loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0xb70fca20" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70fc8c8" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0xb70fc3a8" loc="53:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70fc010" loc="53:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0xb70fc248" loc="53:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0xb70fbca0" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70fbb48" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0xb7108230" loc="177:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7280eb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71080d8" loc="177:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb710eb68" loc="88:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb710ea10" loc="88:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb7117a18" loc="68:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb710e168" loc="78:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb710e010" loc="78:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb710c4c0" loc="121:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb710c158" loc="121:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb710c360" loc="121:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb710b780" loc="103:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb710b418" loc="103:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb710b620" loc="103:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0xb710abc0" loc="147:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb710aa68" loc="147:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb7107720" loc="162:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71073f0" loc="162:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0xb71075c0" loc="162:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7280c58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb710a088" loc="136:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb710cf08" loc="136:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb7108eb0" loc="187:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7280eb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7108b50" loc="187:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb7108d50" loc="187:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7280eb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0xb7106780" loc="195:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7280eb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0xb70f94f0" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xb70f9010" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb70f8e58" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xb70f9978" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xb71053e0" loc="35:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb71053e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb7105548" loc="35:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7105548"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0xb70f5748" loc="63:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7105548"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70f55f0" loc="63:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0xb70f6200" loc="70:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70f60a8" loc="70:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0xb7105bd0" loc="49:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7105a78" loc="49:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb70f6cc0" loc="78:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7105548"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70f6950" loc="78:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb70f6b60" loc="78:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7105548"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0xb70e8e70" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb70e8e70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0xb70e3168" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70e3010" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb70e5b30" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb70e8e70"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70e59d8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0xb70e5510" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70e53b8" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb70e38f0" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb70e8e70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70e3578" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb70e3790" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb70e8e70"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb70db0c0" loc="53:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb70db0c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb70db5a0" loc="61:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0xb70dd168" loc="47:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70dd010" loc="47:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb70c8ab8" loc="120:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0xb70c81c8" loc="97:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xb70cfbb8" loc="88:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0xb70c8678" loc="102:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb70c71c8" loc="128:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0xb70c5168" loc="41:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb7287638"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70c5010" loc="41:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb70ce518" loc="37:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb7287638"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb70ceb18" loc="39:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb7287638"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70ce9c0" loc="39:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb70c3170" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb7287638"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70c5d38" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb70c3010" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb7287638"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb70c5938" loc="43:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb7287638"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70c5598" loc="43:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb70c57d8" loc="43:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb7287638"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0xb70c3c90" loc="49:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xb72873a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70c3b38" loc="49:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0xb70c2418" loc="51:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0xb72873a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70c2088" loc="51:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb70c22b8" loc="51:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0xb72873a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb70c36e0" loc="47:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70c3588" loc="47:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0xb70c2858" loc="53:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xb72873a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb70d0d68" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb7287638"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb70d0808" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb7287638"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb70d0a20" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb70d0c00" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb70cb190" loc="122:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70ccde0" loc="122:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb70cb010" loc="122:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb70cc880" loc="110:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb70cd870" loc="83:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70cd718" loc="83:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb70cc288" loc="97:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70cdef8" loc="97:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb70cc128" loc="97:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0xb70b0470" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0xb70b0a40" loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0xb70ae090" loc="79:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0xb70b0070" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0xb7090e20" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0xb709e9c8" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb709e870" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0xb7091010" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7280eb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7092e08" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0xb7091d70" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7091c18" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb7092200" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70920a8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb7094448" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70942f0" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb7092998" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7092630" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb7092838" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb7094c10" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70948a8" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb7094ab0" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb7091798" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7280eb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7091438" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb7091638" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7280eb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0xb709b920" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0xb709be68" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0xb7095370" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7095218" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0xb7096548" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70963f0" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0xb7096c40" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7096ae8" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0xb707d9c8" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0xb707d168" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0xb7288048"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0xb707d010" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0xb7288048"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb707d5b0" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0xb708ea88" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0xb707de40" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb7288048"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0xb7078010" loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7079e60" loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb707a5f0" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb707a498" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7079320" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb707ae48" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb707aae8" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb707ace8" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0xb707fe30" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb707fcd8" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0xb70799a0" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7079848" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0xb70a6010" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0xb70b3a78" loc="40:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70b3920" loc="40:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0xb70a66f0" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70a6598" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0xb70a6bd8" loc="59:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0xb70a5350" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70a51f8" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0xb70a4c88" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70a4b30" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0xb70a0628" loc="86:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0xb70a0170" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb70a1d68" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb70a0010" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xb70a2168" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70a2010" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0xb70a27b0" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70a2658" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0xb70a1170" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb70a2d70" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb70a1010" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0xb70a3298" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0xb70a3a90" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70a3768" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb70a3930" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xb70a1888" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70a1730" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0xb7085420" loc="131:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70852c8" loc="131:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0xb70875f0" loc="120:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7087498" loc="120:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0xb708d590" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb708d240" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0xb708d430" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0xb708c978" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb708c820" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0xb7083940" loc="156:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70835e0" loc="156:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb70837e0" loc="156:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0xb708c2e0" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb708c188" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0xb7087de8" loc="125:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7087aa8" loc="125:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0xb7087c88" loc="125:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0xb708b8c8" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb708b550" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb708b768" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0xb7083168" loc="151:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7083010" loc="151:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0xb708dbf8" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb708daa0" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0xb7089898" loc="99:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7089740" loc="99:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0xb70891e8" loc="94:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb708be58" loc="94:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7089088" loc="94:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0xb70800c8" loc="178:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb7287638"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xb7081010" loc="162:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7083e10" loc="162:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0xb7081c08" loc="173:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xb72873a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0xb7084a80" loc="146:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7084720" loc="146:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb7084920" loc="146:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0xb708b010" loc="81:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb708ce50" loc="81:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0xb7087010" loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7088ca8" loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0xb7088e98" loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0xb7085c08" loc="136:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70858b8" loc="136:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0xb7085aa8" loc="136:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb70806a0" loc="185:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7080548" loc="185:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0xb7088170" loc="105:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7089d78" loc="105:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7088010" loc="105:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0xb709ad70" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb709ac18" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xb7081720" loc="168:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70815c8" loc="168:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0xb70842a0" loc="141:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7084148" loc="141:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0xb70887c0" loc="110:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7088668" loc="110:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0xb709d840" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb709d4e0" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0xb709d6e0" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0xb709dca8" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0xb70a7938" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70a77e0" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0xb709d010" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70a7e28" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0xb709ce00" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb709cca8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0xb709c768" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb709c610" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0xb7098338" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0xb70989f0" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7098898" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb703f478" loc="56:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb703f478"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb703f5e0" loc="56:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb703f5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb703c8c8" loc="109:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb703f5e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb703d598" loc="78:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0xb703c280" loc="103:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb703f5e0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb703f5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb703dee8" loc="103:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb703f5e0"/></type-var>
          </variable>
          <variable name="dt" ref="0xb703c120" loc="103:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb703f5e0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb703d9e0" loc="88:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0xb703cd58" loc="116:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb703f5e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb703fc10" loc="66:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb703f5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb703fab8" loc="66:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb703f5e0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb703d138" loc="73:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0xb701eee8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb701ed90" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb701a010" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb701be08" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb701b870" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb701b518" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb701b710" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0xb7019010" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
              <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb701ae38" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0xb700e9a0" loc="50:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0xb700c258" loc="60:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0xb700ee10" loc="55:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7280eb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0xb700e4b0" loc="45:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7280eb0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0xb700e148" loc="45:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7280eb0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb700e350" loc="45:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0xb6faa9b0" loc="53:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb6fa7010" loc="61:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0xb6fa9be0" loc="65:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0xb6fa9720" loc="59:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0xb6fa6298" loc="90:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0xb6fa6798" loc="98:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0xb6f9e530" loc="79:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6fa8eb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6f9e3d8" loc="79:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6fa8eb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0xb6f9f1c8" loc="53:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0xb6f9f888" loc="62:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6fa8eb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6f9f730" loc="62:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6fa8eb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xb6f9fe38" loc="70:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0xb6fa8eb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0xb6ed2e30" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
              <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6ed2cb8" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0xb6ed2640" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6ed24e8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb6ec5c58" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6ec5b00" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0xb6ec40f8" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6ec51c0" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6ec5068" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6ec5708" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6ec55b0" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0xb6ec9c08" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6ec9ab0" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0xb6ec88f8" loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6ec87a0" loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0xb6ec8318" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6ec81c0" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0xb6ec6010" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6ec8e58" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0xb6ec9588" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6ec9430" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0xb6e74138" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0xb6e74af8" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xb6e73168" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb6e73010" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0xb6e735d8" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0xb6e74678" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xb6e73a90" loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0xb6e76b10" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e769b8" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0xb6e707d8" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6e702c0" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb6e70168" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0xb6e2c010" loc="52:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0xb6e2fb10" loc="46:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb74cd8a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0xb6e14580" loc="53:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb6e14580"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0xb6e14bd0" loc="64:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb6e14580"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0xb6e14a78" loc="64:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb6e14580"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0xb6dfd870" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dfd718" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6e00580" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e00428" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0xb6e00d18" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e009d8" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb6e00bb8" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6dfd2e0" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6dfd188" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0xb6de0538" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb6de03e0" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xb6de3ee0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6d94418" loc="57:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6d94418"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb6d94580" loc="57:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6d94580"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb6d94a68" loc="64:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6d94580"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb6d93510" loc="76:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb6d93010" loc="71:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb6d93910" loc="82:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb6d77a40" loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb6d77010" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xb6d81ba8" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb6d775d0" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb6d77478" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xb6d78b00" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6d789a8" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb6d76020" loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb6d77eb0" loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xb6d78010" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xb6d78588" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6d78430" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0xb6d6d6b8" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0xb6d6e3d8" loc="68:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0xb6d6e800" loc="74:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0xb6d6ece0" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0xb6d6db78" loc="98:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0xb6d6d1d8" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0xb6d7a8e0" loc="57:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb73189e0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb7318c08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0xb6d7aed8" loc="63:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb73189e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb7318c08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0xb6d7ad80" loc="63:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb73189e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb7318c08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb6d75010" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6d75010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0xb6d74f20" loc="74:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb6d75ed0" loc="58:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6d75508" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6d75010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb6d742f8" loc="62:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb6d72398" loc="80:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6d75a90" loc="54:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6d75010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb6d75938" loc="54:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6d75010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb6d74700" loc="65:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6d74af8" loc="68:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb6d83c70" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6d83c70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0xb6d7e4f0" loc="98:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb6d7fc38" loc="87:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6d801a8" loc="61:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6d83c70"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0xb6d7ea80" loc="104:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0xb6d7e928" loc="104:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0xb6d7ef10" loc="110:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb6d7f010" loc="75:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb6d80b50" loc="70:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb6d7e0c8" loc="93:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6d80720" loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6d83c70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb6d805c8" loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6d83c70"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb6d7f418" loc="78:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6d7f810" loc="81:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6c5eca8" loc="59:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6c5eca8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb6c5ee10" loc="59:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6c5ee10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0xb6c5a440" loc="66:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6c5ee10"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb6c5a2e8" loc="66:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6c5ee10"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0xb6c5c408" loc="54:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb6c5cdb8" loc="66:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb6c5c970" loc="61:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb6c5c818" loc="61:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0xb6c60ef0" loc="53:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0xb6c62950" loc="62:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6c627f8" loc="62:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0xb6c5f4d8" loc="74:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6c5f380" loc="74:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0xb6c62e60" loc="68:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb6c5fab8" loc="81:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6c5f960" loc="81:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb6bd2808" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6bd2808"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0xb6bcd318" loc="88:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0xb6bcd1c0" loc="88:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb6bce910" loc="76:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6bd2d00" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6bd2808"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb6bcf888" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6bd2808"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb6bcf730" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6bd2808"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb6bcfcc8" loc="64:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb6bced70" loc="82:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6bcf2b0" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6bd2808"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb6bcf158" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6bd2808"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb6bce0f8" loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6bce4f0" loc="70:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb6bbe368" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb6bc1d38" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb6bbe010" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6bbe200" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6bbd9a8" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb6bbd228" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb6bbd440" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6bbd630" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb6bbd838" loc="83:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0xb6bc2868" loc="45:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0xb6bc2710" loc="45:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0xb6bb01a8" loc="86:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0xb6bab8d8" loc="126:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0xb6baea00" loc="117:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0xb6babec0" loc="128:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0xb6babd68" loc="128:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0xb6bb1d28" loc="83:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0xb6bac9d8" loc="122:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0xb6bac880" loc="122:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0xb6bafc20" loc="113:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0xb6bafac8" loc="113:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0xb6bb0a38" loc="97:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0xb6ba7010" loc="141:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0xb6ba8e38" loc="141:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0xb6bae090" loc="114:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0xb6baa868" loc="131:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0xb6baa710" loc="131:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0xb6ba8138" loc="136:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0xb6bab490" loc="125:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0xb6bab338" loc="125:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0xb6ba8a00" loc="140:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0xb6bac010" loc="119:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0xb6baee38" loc="119:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb6baf010" loc="103:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6bb0e78" loc="103:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0xb6bae5e0" loc="116:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0xb6bae488" loc="116:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0xb6bace88" loc="123:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0xb6baa308" loc="129:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0xb6baac78" loc="132:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0xb6ba8590" loc="138:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0xb6bac448" loc="120:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0xb6bb05d0" loc="89:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xb6baf5d8" loc="109:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6baf480" loc="109:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb6b7a2f0" loc="95:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6b7a7d8" loc="105:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0xb6b45560" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb6b44a70" loc="87:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xb6b48ca8" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb6b434c8" loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb6b43058" loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb6b44ed8" loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xb6b44088" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6b45ef8" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb6b43a90" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb6b43938" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xb6b45138" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0xb6b44600" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6b444a8" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xb6b45ad8" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6b45980" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0xb69da8d0" loc="31:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb69da540" loc="31:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0xb69da770" loc="31:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0xb69dd630" loc="15:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0xb69ddf00" loc="23:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb69ddb88" loc="23:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0xb69ddda0" loc="23:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0xb69c2890" loc="54:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0xb69c2458" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0xb69bf010" loc="56:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0xb69bfc70" loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0xb69becf0" loc="94:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb69beb98" loc="94:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0xb69be1a8" loc="79:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0xb69bf740" loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb69bf5e8" loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0xb69bd210" loc="100:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0xb69be708" loc="85:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0xb69c4038" loc="71:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0xb69c4600" loc="81:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0xb69c79f8" loc="62:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0xb69c78a0" loc="62:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0xb69c4d38" loc="91:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb69c4be0" loc="91:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0xb69c3ec8" loc="62:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0xb69c16c8" loc="69:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb69c1570" loc="69:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0xb69c1d60" loc="80:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb69c1c08" loc="80:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb69128c8" loc="48:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb6912578" loc="48:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6912768" loc="48:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0xb690ec60" loc="79:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb690eb08" loc="79:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0xb690d480" loc="90:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb690d130" loc="90:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb690d320" loc="90:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0xb690e0c8" loc="65:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0xb690b370" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb690dda8" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb690b010" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb690b208" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0xb690e650" loc="72:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb690f750" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb690f200" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb690f3f0" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb690f5e8" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb68fb5d8" loc="46:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb68fb480" loc="46:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0xb68fbe70" loc="56:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb68fbb08" loc="56:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0xb68fbd10" loc="56:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0xb68ec558" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0xb68edd00" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0xb68ebb50" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb68eb9f8" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0xb68eb250" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0xb68ed488" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0xb68ed8c8" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0xb68ec158" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0xb68ec958" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0xb68ece60" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb68ecd08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0xb68eb620" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0xb67faa48" loc="43:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67faa48"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0xb67f5070" loc="80:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67faa48"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0xb67f5f28" loc="97:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67faa48"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0xb67f5dd0" loc="97:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67faa48"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0xb74d0840"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0xb74d0840"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0xb67f4830" loc="108:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67faa48"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb67f46d8" loc="108:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0xb67f7338" loc="57:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0xb67f7c30" loc="72:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xb67f5718" loc="88:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67faa48"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0xb67faee8" loc="50:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0xb67f7778" loc="65:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/wsn/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0xb67e27e8" loc="49:/home/wsn/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0xb67e2690" loc="49:/home/wsn/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0xb67b1170" loc="50:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67b2dd8" loc="50:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0xb67b1010" loc="50:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0xb67b3628" loc="44:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67b32c0" loc="44:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb67b34c8" loc="44:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb67b2398" loc="47:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0xb67cba08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67b2010" loc="47:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0xb67b2238" loc="47:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0xb67cba08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0xb67b8ea0" loc="43:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67b8d48" loc="43:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0xb67b2988" loc="49:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67b2830" loc="49:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0xb67b3c00" loc="46:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0xb67cba08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67b3aa8" loc="46:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="59:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0xb679a800" loc="61:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0xb679a6a8" loc="61:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0xb67987b0" loc="73:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0xb6798030" loc="73:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb6798220" loc="73:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0xb6798438" loc="73:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0xb6798640" loc="73:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0xb6799010" loc="64:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0xb679ac60" loc="64:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0xb679ae50" loc="64:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0xb67973e8" loc="79:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0xb6798c08" loc="79:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0xb6798e20" loc="79:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0xb6797068" loc="79:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0xb6797278" loc="79:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0xb6799bc0" loc="67:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0xb6799450" loc="67:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0xb6799650" loc="67:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0xb6799850" loc="67:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0xb6799a50" loc="67:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/home/wsn/tinyos-main/tos/interfaces/Intercept.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0xb67b9d88" loc="31:/home/wsn/tinyos-main/tos/interfaces/Intercept.nc">
        <documentation loc="16:/home/wsn/tinyos-main/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67b9860" loc="31:/home/wsn/tinyos-main/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb67b9a40" loc="31:/home/wsn/tinyos-main/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb67b9c20" loc="31:/home/wsn/tinyos-main/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="44:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0xb67a3e98" loc="96:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb67a3d40" loc="96:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0xb67a4610" loc="83:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0xb67a38b0" loc="95:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0xb67a5b70" loc="71:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="66:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0xb67a55b8" loc="64:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the ETX for the current path to the root through the current&#10; parent.</short>
          <long>&#10; Get the ETX for the current path to the root through the current&#10; parent. Sets etx argument to ETX*10.  The pointer is allocated by&#10; the caller.  If the parent is invalid, return FAIL (no info).&#10; The caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to&#10; 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0xb67a5460" loc="64:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0xb67a40f8" loc="78:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0xb67a4e10" loc="88:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="85:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb67a4aa8" loc="88:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0xb67a4cb0" loc="88:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0xb67a1a78" loc="98:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb67a1920" loc="98:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0xb67b7f10" loc="53:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0xb67b7db8" loc="53:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0xb67a14d0" loc="97:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb67a1378" loc="97:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0xb67a3448" loc="93:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb67a32f0" loc="93:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0xb67b5df0" loc="7:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0xb679f460" loc="14:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0xb679f308" loc="14:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/home/wsn/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0xb67a6b88" loc="49:/home/wsn/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0xb679d010" loc="51:/home/wsn/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0xb67a66a0" loc="48:/home/wsn/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/home/wsn/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0xb679d3a8" loc="52:/home/wsn/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-11-28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0xb67aa910" loc="64:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67aa5b8" loc="64:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0xb67aa7b0" loc="64:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0xb67ae3e8" loc="52:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb67be0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67ae068" loc="52:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0xb67ae288" loc="52:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb67be0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0xb67add58" loc="58:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67ada08" loc="58:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0xb67adbf8" loc="58:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0xb67abab8" loc="61:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67ab750" loc="61:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb67ab958" loc="61:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0xb67afc28" loc="49:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb67be0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67af888" loc="49:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0xb67afac8" loc="49:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb67be0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0xb67ad628" loc="57:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67ad4d0" loc="57:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0xb67ab350" loc="60:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67ab1f8" loc="60:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb67a95e0" loc="67:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67a92a8" loc="67:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0xb67a9480" loc="67:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0xb67af468" loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb67be0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67af0c8" loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0xb67af308" loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb67be0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0xb67a7638" loc="70:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0xb67a72c8" loc="70:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0xb67a74d8" loc="70:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0xb67ae968" loc="54:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67ae810" loc="54:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0xb67aa168" loc="63:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67aa010" loc="63:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0xb67a9e20" loc="69:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0xb67a9ab0" loc="69:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0xb67a9cc0" loc="69:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0xb67aae98" loc="66:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67aad40" loc="66:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0xb67ad098" loc="55:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67aed48" loc="55:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0xb67aef28" loc="55:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/home/wsn/tinyos-main/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0xb679b248" loc="46:/home/wsn/tinyos-main/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0xb67cba08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="46:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getReverseQuality" ref="0xb678d088" loc="52:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb6790f10" loc="52:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txAck" ref="0xb678ce48" loc="68:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb678ccf0" loc="68:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0xb678c2b8" loc="61:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb678c160" loc="61:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0xb678a418" loc="72:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb678a2c0" loc="72:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0xb678dca0" loc="58:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb678db48" loc="58:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0xb6789010" loc="78:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb678ade8" loc="78:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0xb678a9d8" loc="75:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb678a880" loc="75:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0xb678c8a8" loc="64:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb678c750" loc="64:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getForwardQuality" ref="0xb678d6a8" loc="55:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb678d550" loc="55:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0xb6790a48" loc="49:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb67908f0" loc="49:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0xb6762480" loc="44:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb6762480"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0xb6762a40" loc="51:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb6762480"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0xb67628e8" loc="51:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb6762480"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0xb675f4a8" loc="65:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0xb675f058" loc="59:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb6762480"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0xb6762ed0" loc="59:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb6762480"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0xb67672e0" loc="50:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67672e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb6764010" loc="97:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="91:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67672e0"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0xb67661d8" loc="80:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0xb6767780" loc="61:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0xb67667e0" loc="89:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67672e0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0xb6766688" loc="89:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67672e0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0xb6767c90" loc="72:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="47:/home/wsn/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0xb66647e0" loc="51:/home/wsn/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6664010" loc="51:/home/wsn/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb6664498" loc="51:/home/wsn/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6664678" loc="51:/home/wsn/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009-09-21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0xb65b8ad0" loc="51:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb65b8978" loc="51:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0xb65b5c00" loc="57:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb65b58b0" loc="57:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0xb65b5aa0" loc="57:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0xb65b8390" loc="48:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb67be0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb65b8010" loc="48:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0xb65b8230" loc="48:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb67be0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0xb65b5318" loc="56:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb65b51c0" loc="56:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0xb65b9998" loc="47:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb67be0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb65b9618" loc="47:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0xb65b9838" loc="47:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb67be0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0xb65b7ba8" loc="54:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb65b7840" loc="54:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb65b7a48" loc="54:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0xb65b7288" loc="53:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb727e140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb65b7130" loc="53:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0xb65b9060" loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb67be0f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb65bccb0" loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7271400"/>
                <typename><typedef-ref name="message_t" ref="0xb72701e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0xb65bced0" loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb67be0f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/wsn/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0xb64d88e0" loc="68:/home/wsn/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb64d8480" loc="61:/home/wsn/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0xb64d8070" loc="54:/home/wsn/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0xb64dbad8" loc="53:/home/wsn/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0xb64d6d48" loc="20:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/home/wsn/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb64c4b80" loc="56:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb64c3ae8" loc="75:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb64c4788" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0xb64c3620" loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0xb64c34c8" loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0xb64c4380" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0xb64c3010" loc="63:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0xb64bb3d8" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0xb646e508" loc="32:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xb646e010" loc="25:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0xb646e9f8" loc="39:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/wsn/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/wsn/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb6467938" loc="56:/home/wsn/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0xb64663b0" loc="73:/home/wsn/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0xb6467408" loc="46:/home/wsn/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/wsn/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb6467e48" loc="65:/home/wsn/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb6466988" loc="81:/home/wsn/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/wsn/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/wsn/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/wsn/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0xb641ece8" loc="62:/home/wsn/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/wsn/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0xb63d7d88" loc="52:/home/wsn/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb63d7d88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0xb63d42a8" loc="58:/home/wsn/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb63d4a78" loc="66:/home/wsn/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/wsn/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb63d7d88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb63d4748" loc="66:/home/wsn/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7373da0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0xb63d4918" loc="66:/home/wsn/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb63d7d88"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0xb63c8070" loc="100:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb63c9860" loc="100:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0xb63c9a88" loc="100:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0xb63c9cb0" loc="101:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0xb63c9ed0" loc="101:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xb63c73f0" loc="119:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb63c8990" loc="119:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0xb63c8b80" loc="119:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0xb63c8d88" loc="119:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0xb63c7010" loc="120:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0xb63c7278" loc="120:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0xb63cff10" loc="70:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb63cf730" loc="70:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0xb63cf958" loc="70:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0xb63cfb80" loc="71:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0xb63cfda0" loc="71:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb63ca010" loc="91:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xb63cb9e0" loc="81:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb63cb690" loc="81:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0xb63cb880" loc="81:/home/wsn/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0xb63bc158" loc="114:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0xb63c3880" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb732e258"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0xb732e4e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0xb63bb6b8" loc="140:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0xb63bb560" loc="140:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb74ceb88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0xb63bc618" loc="122:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0xb63bf300" loc="82:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0xb63c3e98" loc="58:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb732e258"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0xb732e4e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0xb63c3d40" loc="58:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb732e258"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0xb732e4e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0xb63bfb50" loc="91:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0xb63bb010" loc="133:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb63bbb60" loc="150:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0xb63bf700" loc="86:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0xb63be440" loc="99:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0xb63be010" loc="95:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0xb63be878" loc="106:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0xb63bca88" loc="127:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73926e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0xb63c09d0" loc="69:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb732a588"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0xb732a930"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0xb63c0878" loc="69:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb732a588"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0xb732a930"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0xb63bed40" loc="110:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0xb63c03a0" loc="64:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb732a588"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0xb732a930"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0xb63c0e80" loc="75:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xb63ba2c8" loc="156:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb63ba170" loc="156:/home/wsn/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb74cd228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
