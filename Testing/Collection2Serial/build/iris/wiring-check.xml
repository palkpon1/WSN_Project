<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="8:Collection2SerialAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb72b39c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb731f820"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb731f820"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb7282a28"/></to>
    </wire>
    <wire loc="9:Collection2SerialAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0xb72aff18"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7285958"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7285958"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7139ca8"/></to>
    </wire>
    <wire loc="10:Collection2SerialAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0xb72ad650"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb6803a38"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb6803a38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb67dd240"/></to>
    </wire>
    <wire loc="11:Collection2SerialAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb72ae010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7281e78"/></to>
    </wire>
    <wire loc="51:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7281e78"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7180520"/></to>
    </wire>
    <wire loc="12:Collection2SerialAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb7298708"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb653e1f8"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb653e1f8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6de9d08"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:Collection2SerialAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb72a9860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb654d8a0"/></to>
    </wire>
    <wire loc="51:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb654d8a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb5fef210"/></to>
    </wire>
    <wire loc="14:Collection2SerialAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0xb7294930"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0xb67e7b90"/></to>
    </wire>
    <wire loc="84:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0xb67e7b90"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0xb67d71c0"/></to>
    </wire>
    <wire loc="15:Collection2SerialAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7290890"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6802b88"/>
      <arguments>
        <value cst="I:238">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6094e10"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb60a4c18"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb60ad4c0"/></to>
    </wire>
    <wire loc="153:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb657b310"/></to>
    </wire>
    <wire loc="178:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb671a010"/></to>
    </wire>
    <wire loc="229:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb66b0a58"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6810ce0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0xb68fea00"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0xb68fa4c0"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb693c398"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6a29558"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb682ee08"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb61efc98"/></to>
    </wire>
    <wire loc="120:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb6cb64d8"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6deb4d8"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6e580e8"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb62a5330"/></to>
    </wire>
    <wire loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6efdbe0"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb62c1078"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb632d6a0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb7282dc0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb73ba5f0"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb73ba5f0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb73418a8"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb718a400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb6c1a030"/></to>
    </wire>
    <wire loc="123:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb718a400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb6cb8e40"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb718a400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7280cf8"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7280cf8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb72780a0"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb718a808"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></to>
    </wire>
    <wire loc="26:/home/wsn/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb727ad18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb685f440"/></to>
    </wire>
    <wire loc="26:/home/wsn/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb727ad18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6b2e480"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xb727a5b8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xb719b010"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0xb7278888"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb719cbf8"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb7278480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb716c870"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb7278480"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb727d880"/></to>
    </wire>
    <wire loc="46:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb727d880"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb7275928"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb727dc50"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb727ad18"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0xb726ee88"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0xb7268210"/></to>
    </wire>
    <wire loc="141:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0xb7268210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb721d330"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7272888"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb727dc50"/></to>
    </wire>
    <wire loc="191:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0xb724b4b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71ca0b0"/></to>
    </wire>
    <wire loc="165:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0xb725ba28"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7206090"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7206090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6472010"/></to>
    </wire>
    <wire loc="176:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0xb72540a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb71fdd68"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb71fdd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6436228"/></to>
    </wire>
    <wire loc="185:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0xb724e210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb71f47d0"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb71f47d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb63fec08"/></to>
    </wire>
    <wire loc="196:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0xb7248a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71bc880"/></to>
    </wire>
    <wire loc="143:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0xb7267670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb721c6b0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb721c6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6512010"/></to>
    </wire>
    <wire loc="183:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0xb7250ce8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb71f54f0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb71f54f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64017f8"/></to>
    </wire>
    <wire loc="146:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0xb7266a98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb72175a0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb72175a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64e8de8"/></to>
    </wire>
    <wire loc="157:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0xb725f210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb720d170"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb720d170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64a9d70"/></to>
    </wire>
    <wire loc="168:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0xb72598e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7205d68"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7205d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb646c010"/></to>
    </wire>
    <wire loc="179:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0xb7252ea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb71fbac8"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb71fbac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64310b0"/></to>
    </wire>
    <wire loc="138:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0xb726a2f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb721f6b0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb721f6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb651b9e8"/></to>
    </wire>
    <wire loc="149:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0xb72648e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7215250"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7215250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64dfc08"/></to>
    </wire>
    <wire loc="160:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0xb725d0a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb720ce48"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb720ce48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64a4c08"/></to>
    </wire>
    <wire loc="171:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0xb7257750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7203ac8"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7203ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6467010"/></to>
    </wire>
    <wire loc="188:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0xb724c0a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb71f24f0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb71f24f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb63f9a88"/></to>
    </wire>
    <wire loc="194:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0xb7249590"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71c2880"/></to>
    </wire>
    <wire loc="174:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0xb7256c08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb71fea80"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb71fea80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb643ade0"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb721d330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65169e8"/></to>
    </wire>
    <wire loc="152:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0xb7262830"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7214f28"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7214f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64daa88"/></to>
    </wire>
    <wire loc="192:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0xb724a0c0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71c7880"/></to>
    </wire>
    <wire loc="155:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0xb7261ce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7210e78"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7210e78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64ac938"/></to>
    </wire>
    <wire loc="166:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0xb725a4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb72069e8"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb72069e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64709e8"/></to>
    </wire>
    <wire loc="177:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0xb7254a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb71fc790"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb71fc790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6435c08"/></to>
    </wire>
    <wire loc="186:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0xb724ec08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb71f3170"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb71f3170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb63fc6c0"/></to>
    </wire>
    <wire loc="144:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0xb72660a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb721b030"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb721b030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb65119e8"/></to>
    </wire>
    <wire loc="147:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0xb72654b0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7217ef8"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb7217ef8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64e37f8"/></to>
    </wire>
    <wire loc="158:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0xb725fc08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb720dac8"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb720dac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64a77f8"/></to>
    </wire>
    <wire loc="169:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0xb72582f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7204790"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb7204790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb646b9e8"/></to>
    </wire>
    <wire loc="180:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0xb72518e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb71fa4f0"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb71fa4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6430a88"/></to>
    </wire>
    <wire loc="139:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0xb726ace8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb721e030"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb721e030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6519538"/></to>
    </wire>
    <wire loc="150:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0xb72632f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7215ba8"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb7215ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64dd6c0"/></to>
    </wire>
    <wire loc="161:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0xb725da98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb720b7d0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb720b7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64a26c0"/></to>
    </wire>
    <wire loc="189:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0xb724ca98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb71f2e48"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb71f2e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb63f7538"/></to>
    </wire>
    <wire loc="164:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0xb725cea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb72076f8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb72076f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6474538"/></to>
    </wire>
    <wire loc="175:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0xb7255670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb71fd410"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb71fd410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64387f8"/></to>
    </wire>
    <wire loc="184:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0xb724f750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb71f5e48"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb71f5e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb63ff228"/></to>
    </wire>
    <wire loc="195:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0xb7248010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71be0b0"/></to>
    </wire>
    <wire loc="142:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0xb7268c08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb721dc88"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb721dc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6514538"/></to>
    </wire>
    <wire loc="153:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0xb72612f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7213890"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb7213890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64d8538"/></to>
    </wire>
    <wire loc="182:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0xb72502f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb71f6b00"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb71f6b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6407de8"/></to>
    </wire>
    <wire loc="156:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0xb7260750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb720f7f0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0xb720f7f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64aa3b0"/></to>
    </wire>
    <wire loc="167:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0xb725aea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7205410"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb7205410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb646e538"/></to>
    </wire>
    <wire loc="178:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0xb72524b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb71fb170"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb71fb170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64336c0"/></to>
    </wire>
    <wire loc="187:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0xb724d670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb71f3ac8"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb71f3ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb63fa0b0"/></to>
    </wire>
    <wire loc="137:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0xb7274848"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7220cc8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb7220cc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb651c010"/></to>
    </wire>
    <wire loc="148:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0xb7265ea8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7216860"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0xb7216860"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64e1228"/></to>
    </wire>
    <wire loc="159:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0xb725e670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb720c4f0"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0xb720c4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64a5228"/></to>
    </wire>
    <wire loc="170:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0xb7258ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7203170"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0xb7203170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6469538"/></to>
    </wire>
    <wire loc="193:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0xb724aab8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb71c40b0"/></to>
    </wire>
    <wire loc="173:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0xb7256210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb71fe128"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0xb71fe128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb643b418"/></to>
    </wire>
    <wire loc="162:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0xb725c4b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb720a170"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0xb720a170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64a00b0"/></to>
    </wire>
    <wire loc="140:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0xb7269750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb721e988"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0xb721e988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb6517010"/></to>
    </wire>
    <wire loc="151:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0xb7263d68"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb72145d0"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0xb72145d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb64db0b0"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7340100"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0xb7340d68"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0xb73bb728"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0xb732c218"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0xb6d807b8"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb716c870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb71801d8"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb717f240"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0xb716ea70"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb716ea70"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0xb726ace8"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb717fc28"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0xb716d4c0"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb716d4c0"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0xb726a2f0"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb717e660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0xb716dec8"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb716dec8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0xb7274848"/></to>
    </wire>
    <wire loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7139ca8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7120d78"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb715db18"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb7134d20"/></to>
    </wire>
    <wire loc="84:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb7134d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb711ce10"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb715aaf0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7133e70"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7133e70"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0xb7119d28"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7161388"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7135630"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7135630"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb711d710"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb71663f8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb71346a8"/></to>
    </wire>
    <wire loc="83:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb71346a8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb711c798"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb7146830"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb7131898"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb7131898"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb710e3c0"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7161d48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7134010"/></to>
    </wire>
    <wire loc="82:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7134010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb711c100"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb714ab10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7131310"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7131310"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7111d90"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb71401b8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb7131eb8"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb7131eb8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb710e9e0"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb714e990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7132588"/></to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7132588"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7119010"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb7141b10"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb7130600"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb7130600"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb71091d0"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xb713a4a0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7126750"/></to>
    </wire>
    <wire loc="104:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7126750"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb71023a0"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb713fea8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7121130"/></to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7121130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7101ea8"/></to>
    </wire>
    <wire loc="254:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7120d78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6ed3728"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb71294d8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb7104010"/></to>
    </wire>
    <wire loc="345:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb7104010"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb6ccaa58"/></to>
    </wire>
    <wire loc="310:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7101ea8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6e1a9c8"/></to>
    </wire>
    <wire loc="139:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb711ce10"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb7008ef0"/></to>
    </wire>
    <wire loc="141:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0xb7119d28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7009850"/></to>
    </wire>
    <wire loc="136:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb711d710"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7008010"/></to>
    </wire>
    <wire loc="138:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb711c798"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb7008b30"/></to>
    </wire>
    <wire loc="98:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb712e0f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb7107c80"/></to>
    </wire>
    <wire loc="343:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb7107c80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6ccb6f8"/></to>
    </wire>
    <wire loc="255:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb710e3c0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb6ed2ce0"/></to>
    </wire>
    <wire loc="137:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb711c100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7008750"/></to>
    </wire>
    <wire loc="309:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb71023a0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6cf71b0"/></to>
    </wire>
    <wire loc="102:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb7123ba0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb7103770"/></to>
    </wire>
    <wire loc="347:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb7103770"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6cc4950"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb712bc68"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb71098c0"/></to>
    </wire>
    <wire loc="344:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb71098c0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6cc5208"/></to>
    </wire>
    <wire loc="288:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7111d90"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6e4c628"/></to>
    </wire>
    <wire loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0xb7133438"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0xb711a538"/></to>
    </wire>
    <wire loc="143:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0xb711a538"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0xb70072e8"/></to>
    </wire>
    <wire loc="226:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb710e9e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0xb6edf190"/></to>
    </wire>
    <wire loc="140:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7119010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb700ac28"/></to>
    </wire>
    <wire loc="264:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb71091d0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb6ec1b40"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb7124638"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb7103278"/></to>
    </wire>
    <wire loc="346:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb7103278"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6cc4458"/></to>
    </wire>
    <wire loc="87:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0xb7133b18"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0xb711ac18"/></to>
    </wire>
    <wire loc="144:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0xb711ac18"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0xb70076c8"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6ed3728"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb6ec6360"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb6ccaa58"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb6cb2b98"/></to>
    </wire>
    <wire loc="175:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0xb7117198"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb6fbcce8"/></to>
    </wire>
    <wire loc="163:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0xb710f8d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6ff4d40"/></to>
    </wire>
    <wire loc="98:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6ff4d40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb632ca50"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0xb7008ef0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0xb6360a68"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7008010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6361b20"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb7008b30"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb63606a8"/></to>
    </wire>
    <wire loc="176:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0xb710aa20"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xb6f21f10"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0xb6f21f10"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xb62f1d50"/></to>
    </wire>
    <wire loc="177:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0xb7111618"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6fbdc68"/></to>
    </wire>
    <wire loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6ccb6f8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6cb4838"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb6ed2ce0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb62ab8c0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7009850"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb63613f0"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7008750"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb63602c8"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6cf71b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6259610"/></to>
    </wire>
    <wire loc="82:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6cc4950"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6c1fb48"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6cc5208"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6cae3d8"/></to>
    </wire>
    <wire loc="173:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0xb7113558"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0xb6fbc318"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0xb70072e8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0xb6360e48"/></to>
    </wire>
    <wire loc="117:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0xb6edf190"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0xb6ed7528"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0xb6ec1b40"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0xb62a5e78"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb700ac28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6362788"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6e1a9c8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb625de38"/></to>
    </wire>
    <wire loc="174:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0xb7113ce8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0xb6fbc9d0"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6cc4458"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6cad680"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0xb70076c8"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0xb635d248"/></to>
    </wire>
    <wire loc="116:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb70c8a38"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6f23530"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6f23530"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb62f2340"/></to>
    </wire>
    <wire loc="117:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb70c7010"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb708d698"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb70c0c28"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6cf71b0"/></to>
    </wire>
    <wire loc="119:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0xb70c0260"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6cccc88"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6cccc88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6cb5e70"/></to>
    </wire>
    <wire loc="124:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb708c5d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6cc3428"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6cc3428"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6c20030"/></to>
    </wire>
    <wire loc="125:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb708dd70"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb70fd5c0"/></to>
    </wire>
    <wire loc="131:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb7006a80"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0xb70d7068"/></to>
    </wire>
    <wire loc="132:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7006250"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0xb7000718"/></to>
    </wire>
    <wire loc="133:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7006748"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0xb6f7c528"/></to>
    </wire>
    <wire loc="134:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb7007a40"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0xb6f7c860"/></to>
    </wire>
    <wire loc="152:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6fff150"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6ff4d40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7000c40"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0xb6f7c030"/></to>
    </wire>
    <wire loc="168:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6fa1070"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6f23530"/></to>
    </wire>
    <wire loc="169:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6f9f250"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0xb6f99050"/></to>
    </wire>
    <wire loc="170:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6f9f748"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0xb6f99548"/></to>
    </wire>
    <wire loc="171:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6fa0a30"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0xb6f99880"/></to>
    </wire>
    <wire loc="185:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6f7b050"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6f1b060"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6f1b060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb62c4790"/></to>
    </wire>
    <wire loc="186:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6f7b548"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6f1f170"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6f1f170"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb62eff10"/></to>
    </wire>
    <wire loc="187:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6f7b880"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6f20948"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6f20948"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb62ef778"/></to>
    </wire>
    <wire loc="193:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6f1f4d8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6edf828"/></to>
    </wire>
    <wire loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6edf828"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6ed8840"/></to>
    </wire>
    <wire loc="197:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6f1fc70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6ee0e30"/></to>
    </wire>
    <wire loc="114:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6ee0e30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6ed8508"/></to>
    </wire>
    <wire loc="220:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6ee22b0"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0xb70e5f10"/></to>
    </wire>
    <wire loc="221:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6f1b980"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6ee0938"/></to>
    </wire>
    <wire loc="113:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6ee0938"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6ed8010"/></to>
    </wire>
    <wire loc="230:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6ed7010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6e4c628"/></to>
    </wire>
    <wire loc="232:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6ed8010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6ed3d00"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6ed3d00"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6ec6938"/></to>
    </wire>
    <wire loc="233:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6ed8508"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6ed2250"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6ed2250"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6ec6e30"/></to>
    </wire>
    <wire loc="234:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6ed8840"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6ed2568"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6ed2568"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6ec51b0"/></to>
    </wire>
    <wire loc="250:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb6ec6360"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6ec2d20"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6ec2d20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb62a8c88"/></to>
    </wire>
    <wire loc="251:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6ec6938"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6ec1330"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6ec1330"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb62a5668"/></to>
    </wire>
    <wire loc="252:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6ec6e30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6ec1828"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6ec1828"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb62a5b60"/></to>
    </wire>
    <wire loc="253:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6ec51b0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6cf1830"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6cf1830"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6257ca8"/></to>
    </wire>
    <wire loc="260:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6e84da0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6e7f010"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6e7f010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb62869f8"/></to>
    </wire>
    <wire loc="261:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6e83310"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6f1b538"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6f1b538"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb62c4c68"/></to>
    </wire>
    <wire loc="262:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6e84628"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6cd7220"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6cd7220"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xb6cd3010"/></to>
    </wire>
    <wire loc="263:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb6e84070"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb70fd5c0"/></to>
    </wire>
    <wire loc="268:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6f1be78"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6e7f4e8"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6e7f4e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6286ed0"/></to>
    </wire>
    <wire loc="277:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6e59928"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0xb70e0c58"/></to>
    </wire>
    <wire loc="278:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6e7f930"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6e4dcf8"/></to>
    </wire>
    <wire loc="279:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6e7fe28"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6e4c230"/></to>
    </wire>
    <wire loc="280:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6e59270"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb708d698"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="286:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0xb6e324f0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6cd9eb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="287:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6e34458"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb708d698"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="292:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6e34b10"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb70e77e8"/></to>
    </wire>
    <wire loc="293:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6e4cb50"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6e23de0"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6e23de0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6e20cc8"/></to>
    </wire>
    <wire loc="294:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6e34060"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6e22310"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6e22310"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6e1f250"/></to>
    </wire>
    <wire loc="299:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6e1e250"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0xb70e1010"/></to>
    </wire>
    <wire loc="300:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6e20cc8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6cd7998"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6cd7998"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6cd3828"/></to>
    </wire>
    <wire loc="301:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6e1f250"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6cd7e70"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6cd7e70"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6cd3d20"/></to>
    </wire>
    <wire loc="302:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0xb6e1f668"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xb6ccc820"/></to>
    </wire>
    <wire loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb6ccc820"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xb6cb5a08"/></to>
    </wire>
    <wire loc="307:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6cf00c0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6cc4950"/></to>
    </wire>
    <wire loc="308:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6cf0938"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6cec4a0"/></to>
    </wire>
    <wire loc="311:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0xb6cef170"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6cd9eb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="316:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6cecc68"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0xb6cccc88"/></to>
    </wire>
    <wire loc="326:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6cd2d20"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0xb70e1010"/></to>
    </wire>
    <wire loc="327:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6cd3828"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6ccfe40"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb6ccfe40"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6cb5060"/></to>
    </wire>
    <wire loc="328:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6cd3d20"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6ccc3d0"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb6ccc3d0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6cb55b8"/></to>
    </wire>
    <wire loc="329:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0xb6cd3010"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6ccf668"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6ccf668"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6cb6858"/></to>
    </wire>
    <wire loc="341:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6cc1ec0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0xb70ec570"/></to>
    </wire>
    <wire loc="342:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6cc0898"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6cf71b0"/></to>
    </wire>
    <wire loc="349:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6cbd0e0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6cd9eb8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="350:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0xb6cbd778"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6cd9eb8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="351:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6cbde38"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0xb6cd9eb8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="352:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6cbc498"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb708d698"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="353:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb6cbcb78"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb70fd5c0"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb708d698"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6371598"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6371d90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb708c5d0"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb636f6f0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb708dd70"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb635a010"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb7019820"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb635d5c0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb7007a40"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb635dd58"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb7006250"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb635b330"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb7006748"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb635b668"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb7006a80"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb6fbf490"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb632a1e8"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb6fbf898"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb632a5f0"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb632aab0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb6fbfd48"/></to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb632aed8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb632d9d8"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb63294e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb62ee278"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb7019820"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb62ee850"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6f1f4d8"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb62ed010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6f1fc70"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb62c0310"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb6efd010"/></to>
    </wire>
    <wire loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb6efd010"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb6efa010"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb62c09a8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb62bfe88"/></to>
    </wire>
    <wire loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb62bfe88"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb6efaa38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb62c13e0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6f1b980"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb62c18d8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6f1be78"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0xb62c1cd0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6ee22b0"/></to>
    </wire>
    <wire loc="118:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0xb6ed7c00"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6ed7010"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb62a4b18"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6e84070"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb62a43a0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb6e84628"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb62a3150"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb6e84da0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb62a3628"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb6e83310"/></to>
    </wire>
    <wire loc="189:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0xb62a3e98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0xb62a2320"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0xb62a3a60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6284330"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb6e7f930"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6283728"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6e59928"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6284828"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb6e7fe28"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6284c20"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6e59270"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb6283310"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb6e5c478"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb6e5c478"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb6e58ec8"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0xb6283d20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0xb6e5ab58"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0xb6e58608"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6e5f910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6e580e8"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6e2d8a0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb6e21698"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb6e22708"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xb6e1f668"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb6e23668"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xb6e204b0"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6e22b00"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6e1fa80"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6e21330"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6e1e250"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0xb6e23350"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0xb6e20178"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0xb6e2de58"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0xb6e21c70"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6255d38"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6cf0938"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6256b88"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6cf00c0"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0xb62554c0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6dee5d8"/></to>
    </wire>
    <wire loc="26:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb6dee5d8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6de5010"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0xb6256520"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0xb6cef170"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb6de5010"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6d01a88"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb6debc88"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6d2ef00"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6deb4d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6de46c8"/></to>
    </wire>
    <wire loc="35:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6de46c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6dd9bb8"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0xb6d06338"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6de2f08"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6d32248"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0xb6de4c90"/></to>
    </wire>
    <wire loc="36:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0xb6de4c90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6d4d010"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6d00448"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0xb6ddb5c8"/></to>
    </wire>
    <wire loc="37:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0xb6ddb5c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6d4ca88"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6d4ca88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6240378"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6dd9bb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb62424c8"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6d4d010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6242900"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb623e578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6d91dd0"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6d91dd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6d88de0"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb623c758"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb6d8b1a0"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb6d8b1a0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb6d821a0"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb623b200"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6d8bcc0"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6d8bcc0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6d82cc0"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb6239c20"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb6d89858"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb6d89858"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb6d80c18"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0xb6d31bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0xb6d03560"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb6de9d08"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6debc88"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6cd8450"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb6cd41a0"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb6cd6290"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xb6cd2170"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0xb6cd6688"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0xb6cd2588"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6cd6e20"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6cd2d20"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0xb6cd8ee0"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0xb6cd4c70"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0xb6cd8a08"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0xb6cd4778"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6c20030"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb6b35850"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6cc8e28"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6caf010"/></to>
    </wire>
    <wire loc="81:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6c1fb48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6b021d0"/></to>
    </wire>
    <wire loc="84:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb6ca59f0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb6cc1ec0"/></to>
    </wire>
    <wire loc="87:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6ca3288"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6cbd0e0"/></to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0xb6ca3920"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0xb6cbd778"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6ca0010"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6cbde38"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6ca0818"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6cc0898"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb6ca5088"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6c1fb48"/></to>
    </wire>
    <wire loc="102:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb6c9d630"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb6cbc498"/></to>
    </wire>
    <wire loc="104:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xb6cada98"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0xb6c26b08"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xb6c26b08"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7266a98"/></to>
    </wire>
    <wire loc="105:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb6cab5b8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0xb6c235b8"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb6c235b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6c03c50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb6ca7b40"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb6c23cc0"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb6c23cc0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb6c0ae48"/></to>
    </wire>
    <wire loc="108:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xb6caa210"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0xb6c223d0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xb6c223d0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0xb72612f0"/></to>
    </wire>
    <wire loc="109:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb6caabf8"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0xb6c22db8"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb6c22db8"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0xb7267670"/></to>
    </wire>
    <wire loc="111:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xb6ca4d50"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xb6c21820"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xb6c21820"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xb6c1d980"/></to>
    </wire>
    <wire loc="112:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb6c9d010"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb6cbcb78"/></to>
    </wire>
    <wire loc="113:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0xb6ca1588"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0xb6ad4010"/></to>
    </wire>
    <wire loc="856:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0xb6c49910"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb6b35850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb61ccc78"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0xb6c0ae48"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0xb6c01520"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb6b021d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb6adbf18"/></to>
    </wire>
    <wire loc="59:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0xb6c14420"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0xb7258ce8"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0xb6c14e20"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0xb72598e0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb6c15660"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6b8fa48"/></to>
    </wire>
    <wire loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb6b8fa48"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb6b7f0f0"/></to>
    </wire>
    <wire loc="96:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb6c03500"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb6c01b38"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb6c0aaa0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb6c01198"/></to>
    </wire>
    <wire loc="92:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6c1cd98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6c08d80"/></to>
    </wire>
    <wire loc="97:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6c03c50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb6b9a198"/></to>
    </wire>
    <wire loc="98:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb6b9a198"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb61ec010"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb6b98208"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb6c002d8"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0xb6bef1c8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0xb6c07e40"/></to>
    </wire>
    <wire loc="83:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0xb6c07e40"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0xb6bc61c8"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xb6bffa98"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb732e420"/></to>
    </wire>
    <wire loc="294:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0xb6bdd390"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0xb6bc1898"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb732e420"/></to>
    </wire>
    <wire loc="86:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0xb6bc4010"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7266a98"/></to>
    </wire>
    <wire loc="87:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0xb6bc49e8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0xb72654b0"/></to>
    </wire>
    <wire loc="88:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0xb6bc34a0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0xb7265ea8"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0xb6bc3e88"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0xb72648e0"/></to>
    </wire>
    <wire loc="99:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb6b9a8d8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb61ec750"/></to>
    </wire>
    <wire loc="100:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb6b9ace0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb61ecb58"/></to>
    </wire>
    <wire loc="101:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb61eb030"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb6b98208"/></to>
    </wire>
    <wire loc="103:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb61eb458"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb61ed010"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0xb61eba50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb6b8bc88"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb6b803c8"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6b93328"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6b830e0"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6b89c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xb6b7d010"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6b89c10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xb6b7bc08"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb6b89c10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xb6b79830"/></to>
    </wire>
    <wire loc="43:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0xb61c9688"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6b93328"/></to>
    </wire>
    <wire loc="44:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0xb61c7978"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb6b89c10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/wsn/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6b2e868"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6b93328"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6ada8c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6b00e60"/></to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb6adc0e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6aff3a0"/></to>
    </wire>
    <wire loc="31:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6aff3a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6afcb30"/></to>
    </wire>
    <wire loc="32:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb6afbd50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb6b93328"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0xb68290e0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0xb6844638"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6828e48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6aa3d50"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6aa3d50"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb61ada18"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6827550"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb68473f8"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb68473f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6a61990"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0xb682ba10"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0xb682abe8"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6a61990"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6a5cd88"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6847a90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6a600b8"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6a600b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6a5c1b0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb68466b0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6a60d70"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6a60d70"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6a2b4d0"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb61aa180"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6a94990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb61aa818"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6a600b8"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6a94990"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6a68908"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6a670a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6a62bb8"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6a62bb8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6a5d738"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6a67750"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6a600b8"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6a663f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6a61990"/></to>
    </wire>
    <wire loc="169:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0xb6a66ac8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0xb6a66f00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6a622e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6a298f0"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb6a298f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6a10978"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6a61638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6a5de78"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb6a29558"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb6a105e0"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb6a243f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb6a5f370"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6a2b9f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6a267e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6a2a170"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6a261d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0xb6a22ea8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0xb6852728"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6a267e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb699aa90"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6a261d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb699a6d0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0xb6961238"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0xb6a22ea8"/></to>
    </wire>
    <wire loc="70:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb6a05c88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb6a243f0"/></to>
    </wire>
    <wire loc="71:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb6960230"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb6a243f0"/></to>
    </wire>
    <wire loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb6959260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb6a243f0"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb6961720"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb6a082a8"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0xb6961bf8"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0xb6a0a098"/></to>
    </wire>
    <wire loc="77:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0xb6a05400"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0xb695d6a8"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0xb6a0ea40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb6944168"/></to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb6944168"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb6940e88"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb6953990"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb69445e8"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb69445e8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb693f788"/></to>
    </wire>
    <wire loc="332:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0xb69d59d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0xb69f5d40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0xb69d6220"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0xb69d3610"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0xb6960e48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0xb695e2b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xb6940488"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xb693f308"/></to>
    </wire>
    <wire loc="51:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0xb693f308"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0xb693cae8"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0xb693f788"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0xb693cf00"/></to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb6940e88"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb693c6d0"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb693e218"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb68c5628"/></to>
    </wire>
    <wire loc="33:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb68c5628"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb68bfa10"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb6914c88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb693e218"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0xb693b7b0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0xb6901688"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0xb6901688"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0xb68fee50"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0xb693bbe8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0xb6901b98"/></to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0xb6901b98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0xb68fb3a8"/></to>
    </wire>
    <wire loc="58:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0xb6914050"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0xb69000b8"/></to>
    </wire>
    <wire loc="62:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0xb69000b8"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0xb68fb8c0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0xb68ff760"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0xb68f9390"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0xb6900cc8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0xb68fa910"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0xb68ff268"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0xb68fae40"/></to>
    </wire>
    <wire loc="68:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xb68f7010"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xb727a5b8"/></to>
    </wire>
    <wire loc="69:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xb68f7750"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb732e420"/></to>
    </wire>
    <wire loc="34:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb6856cd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb68be088"/></to>
    </wire>
    <wire loc="31:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb68be088"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb6862a68"/></to>
    </wire>
    <wire loc="32:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb685bc48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68bdaa8"/></to>
    </wire>
    <wire loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb68bdaa8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68af230"/></to>
    </wire>
    <wire loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb68b8db0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb68ac530"/></to>
    </wire>
    <wire loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb68b7b28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb68ab258"/></to>
    </wire>
    <wire loc="93:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb68b5d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xb68a8128"/></to>
    </wire>
    <wire loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb68b5d50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xb68a7d20"/></to>
    </wire>
    <wire loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb68b5d50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xb68a5950"/></to>
    </wire>
    <wire loc="27:/home/wsn/tinyos-main/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb685f828"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb68bdaa8"/></to>
    </wire>
    <wire loc="114:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0xb6823300"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/wsn/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0xb680f0a8"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0xb682ba10"/></to>
    </wire>
    <wire loc="44:/home/wsn/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb6812388"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb731f820"/></to>
    </wire>
    <wire loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0xb68127c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb6a622e0"/></to>
    </wire>
    <wire loc="150:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0xb67d71c0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0xb657d430"/></to>
    </wire>
    <wire loc="79:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0xb67f9548"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0xb67dbbf0"/></to>
    </wire>
    <wire loc="122:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0xb67dbbf0"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0xb6717078"/></to>
    </wire>
    <wire loc="76:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0xb67feec0"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0xb67db158"/></to>
    </wire>
    <wire loc="119:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0xb67db158"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0xb67186a8"/></to>
    </wire>
    <wire loc="78:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6800240"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb67db4b0"/></to>
    </wire>
    <wire loc="120:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb67db4b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb67189d0"/></to>
    </wire>
    <wire loc="75:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb6801250"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb67dca88"/></to>
    </wire>
    <wire loc="118:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb67dca88"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb67182e8"/></to>
    </wire>
    <wire loc="73:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6802178"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb67dd970"/></to>
    </wire>
    <wire loc="115:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb67dd970"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb671a7b8"/></to>
    </wire>
    <wire loc="82:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0xb67e9e68"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0xb67d94b8"/></to>
    </wire>
    <wire loc="168:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0xb67d94b8"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0xb657d908"/></to>
    </wire>
    <wire loc="74:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6802b88"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb67dc3d8"/></to>
    </wire>
    <wire loc="117:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb67dc3d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb671aef8"/></to>
    </wire>
    <wire loc="83:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0xb67e7728"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0xb67d1cf8"/></to>
    </wire>
    <wire loc="124:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0xb67d1cf8"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0xb67167f0"/></to>
    </wire>
    <wire loc="85:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0xb67e5570"/></from>
      <to><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0xb67d7778"/></to>
    </wire>
    <wire loc="151:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0xb67d7778"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0xb657ee30"/></to>
    </wire>
    <wire loc="80:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0xb67efa80"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0xb67da450"/></to>
    </wire>
    <wire loc="123:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0xb67da450"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0xb67177f0"/></to>
    </wire>
    <wire loc="116:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb67dd240"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb671a328"/></to>
    </wire>
    <wire loc="148:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb67dd240"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb657c5b0"/></to>
    </wire>
    <wire loc="149:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb67dd240"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb66b1010"/></to>
    </wire>
    <wire loc="87:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0xb67d61b8"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0xb67e3780"/></to>
    </wire>
    <wire loc="88:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0xb67d6568"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0xb67df550"/></to>
    </wire>
    <wire loc="193:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0xb67d1178"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0xb66b1f18"/></to>
    </wire>
    <wire loc="121:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0xb67071e8"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0xb67d61b8"/></to>
    </wire>
    <wire loc="128:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0xb670d1e0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0xb66e79b8"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0xb66e79b8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0xb60a2010"/></to>
    </wire>
    <wire loc="129:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0xb670c6f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0xb66fe5b0"/></to>
    </wire>
    <wire loc="49:/home/wsn/tinyos-main/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0xb66fe5b0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0xb60ad868"/></to>
    </wire>
    <wire loc="132:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0xb67103e8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0xb66e42d0"/></to>
    </wire>
    <wire loc="135:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0xb670bca8"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0xb66e0ea0"/></to>
    </wire>
    <wire loc="44:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="Cache" scoped="" ref="0xb66e0ea0"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0xb6093200"/></to>
    </wire>
    <wire loc="140:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0xb6713b88"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0xb66b1f18"/></to>
    </wire>
    <wire loc="154:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0xb657b678"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb66b1498"/></to>
    </wire>
    <wire loc="155:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0xb657bd30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb66b1b78"/></to>
    </wire>
    <wire loc="156:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0xb657a070"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0xb66b1f18"/></to>
    </wire>
    <wire loc="158:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0xb6571230"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0xb66ac948"/></to>
    </wire>
    <wire loc="160:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb657ab68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb714e990"/></to>
    </wire>
    <wire loc="161:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0xb6579790"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7285958"/></to>
    </wire>
    <wire loc="162:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0xb6579df8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb66c3680"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb66c3680"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6de9d08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0xb65750c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb66bc458"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb66bc458"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6de9d08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0xb65726f8"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0xb67d6568"/></to>
    </wire>
    <wire loc="165:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0xb6704230"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0xb67d6568"/></to>
    </wire>
    <wire loc="166:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0xb6708078"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0xb657d908"/></to>
    </wire>
    <wire loc="167:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0xb6572d90"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0xb67167f0"/></to>
    </wire>
    <wire loc="172:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0xb6715898"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb656cd90"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb656cd90"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb6de9d08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb6572300"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb6e5c478"/></to>
    </wire>
    <wire loc="176:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb6706e08"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb6e5c478"/></to>
    </wire>
    <wire loc="179:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb6716c38"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb66346a0"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb66346a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb607b200"/></to>
    </wire>
    <wire loc="180:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb6709a18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb6618a48"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb6618a48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7161d48"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="181:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0xb6709d50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb66125c0"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb66125c0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb71663f8"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="182:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb6711c70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6634d38"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6634d38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb607b898"/></to>
    </wire>
    <wire loc="183:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0xb6708c50"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0xb657d430"/></to>
    </wire>
    <wire loc="184:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0xb6711698"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0xb657ee30"/></to>
    </wire>
    <wire loc="185:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0xb67048e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7285958"/></to>
    </wire>
    <wire loc="186:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6715310"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb661a010"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb661a010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb607ac08"/></to>
    </wire>
    <wire loc="187:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6707610"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb661b3f0"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb661b3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb607a010"/></to>
    </wire>
    <wire loc="188:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb6706230"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7281e78"/></to>
    </wire>
    <wire loc="195:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb66ab0b8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb6e5c478"/></to>
    </wire>
    <wire loc="197:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb66acce0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb65651f8"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb65651f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6005680"/></to>
    </wire>
    <wire loc="198:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb66ad978"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb65621f8"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb65621f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7161d48"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="199:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb66ad210"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6565890"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6565890"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6005d18"/></to>
    </wire>
    <wire loc="200:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0xb66ae4d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb6565f28"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6565f28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb60043f0"/></to>
    </wire>
    <wire loc="224:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb66add48"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb7124638"/></to>
    </wire>
    <wire loc="234:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0xb6704ee0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0xb6092010"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0xb67da450"/></to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb607b200"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb60768a0"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb607b898"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb715aaf0"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb607a010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb714e990"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb607ac08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb714ab10"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb6073010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb662add0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb60736a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb714e990"/></to>
    </wire>
    <wire loc="53:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb662add0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb66254f8"/></to>
    </wire>
    <wire loc="54:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6625c68"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7161388"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb66243f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb714e990"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6623010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb715aaf0"/></to>
    </wire>
    <wire loc="169:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0xb66236e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0xb6623b20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6618d60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb715aaf0"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb66174d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb714e990"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb66128d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb715aaf0"/></to>
    </wire>
    <wire loc="57:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb660e010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb714e990"/></to>
    </wire>
    <wire loc="269:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="updateRouteTask" scoped="" ref="0xb65719c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="388:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0xb6571588"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb6005680"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb6001d30"/></to>
    </wire>
    <wire loc="64:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6005d18"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb715aaf0"/></to>
    </wire>
    <wire loc="65:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb60043f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb714e990"/></to>
    </wire>
    <wire loc="67:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb6564b30"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0xb6003010"/></to>
    </wire>
    <wire loc="66:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0xb6003010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb714ab10"/></to>
    </wire>
    <wire loc="60:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb5ffd420"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb662add0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb5ffdab8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb714e990"/></to>
    </wire>
    <wire loc="55:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb6562510"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb715aaf0"/></to>
    </wire>
    <wire loc="56:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb6562ba8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb714e990"/></to>
    </wire>
    <wire loc="52:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb653f010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb5fef8a8"/></to>
    </wire>
    <wire loc="47:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb5fef8a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb6800240"/></to>
    </wire>
    <wire loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb5fef210"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb6802178"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0xb67e3780"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0xb5feda30"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="Collection2SerialC" loc="4:Collection2SerialC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/wsn/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/wsn/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/wsn/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC.TaskletC" loc="42(RF230RadioC.TaskletC):/home/wsn/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <instance number="0">
        <component-ref qname="TaskletC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="50(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/wsn/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/wsn/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb6dd8330"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7345db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7345db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb736b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb736b010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb736b010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/home/wsn/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/wsn/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TThree" ref="0xb7343010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb736b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TThree" ref="0xb7343010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0xb73435e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/wsn/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/wsn/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/wsn/tinyos-main/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/wsn/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CollectionC" loc="45:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="77:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="66:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/home/wsn/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
            <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/home/wsn/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0xb66fff18"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/home/wsn/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0xb67ca608"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0xb67ca890"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/home/wsn/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0xb66fff18"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/home/wsn/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0xb67ca608"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0xb67ca890"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="42:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="47(CtpP.AMSenderC.SenderC):/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.AMQueueEntryP):/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="107(CtpP.Router):/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="38:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="47(CtpP.SendControl.SenderC):/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.AMQueueEntryP):/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Collection2SerialAppC.CollectionSenderC" loc="43(Collection2SerialAppC.CollectionSenderC):/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:238">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Collection2SerialAppC.CollectionSenderC.CollectionSenderP" loc="34(Collection2SerialAppC.CollectionSenderC.CollectionSenderP):/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0xb6aa5dd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Collection2SerialAppC.CollectionSenderC.CollectionSenderP.CollectionIdP" loc="45(Collection2SerialAppC.CollectionSenderC.CollectionSenderP.CollectionIdP):/home/wsn/tinyos-main/tos/lib/net/CollectionIdP.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0xb6aa5dd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Collection2SerialAppC.TimerMilliC" loc="44(Collection2SerialAppC.TimerMilliC):/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7246860" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7246a78" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7246c90" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb723dc70" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb723de98" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb723a0e0" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb723a2d0" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb71ec088" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb71ec2b0" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb71ec4d8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb71ec6c8" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TaskletC" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xb6ff34c0" loc="83:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0xb6fea298" loc="42:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb6dd8330" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb6dd8330"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb6dd84f0" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb6dd35d0" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb6dd35d0"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb6dd3790" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6de39c8" loc="46:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6de39c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6d2c010" loc="46:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6d2c010"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0xb6d2c1f0" loc="46:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6d028f0" loc="46:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6d028f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb6b2fc38" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6b2fc38"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0xb6b2fe58" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb6b31938" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb6b31938"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb6b31d80" loc="52:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6b31d80"/></type-var>
        </typedef>
        <constant name="mindt" ref="0xb6b21010" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb6afa228" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb6afa228"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb6afa670" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6afa670"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xb6aec488" loc="55:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xb6aec488"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xb6aec8e8" loc="56:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xb6aec8e8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xb6aecb50" loc="57:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xb6aecb50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xb6aeb010" loc="58:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xb6aeb010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xb6aeb278" loc="59:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0xb6aeb700" loc="60:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0xb6aeb700"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb6aa7b28" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb6aa06b8" loc="43:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0xb6a91e40" loc="45:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/wsn/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/wsn/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0xb6845a50" loc="42:/home/wsn/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0xb6845a50"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0xb6845c78" loc="42:/home/wsn/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/home/wsn/tinyos-main/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0xb66fff18" loc="41:/home/wsn/tinyos-main/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0xb66fff18"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0xb66fc150" loc="41:/home/wsn/tinyos-main/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/home/wsn/tinyos-main/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/home/wsn/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0xb66f74a0" loc="53:/home/wsn/tinyos-main/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0xb66f74a0"/></type-var>
        </typedef>
        <constant name="size" ref="0xb66f7690" loc="53:/home/wsn/tinyos-main/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0xb66e1d60" loc="38:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0xb66dd7f0" loc="43:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/home/wsn/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb66b7ca8" loc="47:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb66318b0" loc="47:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb6619318" loc="43:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSnooperC" loc="44:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb6614dd8" loc="44:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="107:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="38:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0xb6607010" loc="107:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0xb6607250" loc="107:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0xb6607490" loc="107:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC" loc="43:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc" abstract="">
      <documentation loc="32:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0xb654fc70" loc="43:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0xb6aa5dd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0xb654a758" loc="35:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0xb6aa5dd8"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0xb654a970" loc="35:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:/home/wsn/tinyos-main/tos/lib/net/CollectionIdP.nc" abstract="">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0xb6544438" loc="45:/home/wsn/tinyos-main/tos/lib/net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0xb6aa5dd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="RootControl" ref="0xb7294930" loc="11:Collection2SerialC.nc">
      <component-ref qname="Collection2SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0xb7294930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0xb7294b08"/>
        <function-ref name="setRoot" scoped="" ref="0xb7294be8"/>
        <function-ref name="unsetRoot" scoped="" ref="0xb7294cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xb72b39c0" loc="5:Collection2SerialC.nc">
      <component-ref qname="Collection2SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb72b39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb72b3b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0xb72aff18" loc="6:Collection2SerialC.nc">
      <component-ref qname="Collection2SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0xb72aff18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb72b2108"/>
        <function-ref name="stopDone" scoped="" ref="0xb72b21e8"/>
        <function-ref name="start" scoped="" ref="0xb72b22c8"/>
        <function-ref name="stop" scoped="" ref="0xb72b23a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xb72a9860" loc="8:Collection2SerialC.nc">
      <component-ref qname="Collection2SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb72a9860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb72a9a38"/>
        <function-ref name="getPayload" scoped="" ref="0xb72a9b18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb72a9bf8"/>
        <function-ref name="cancel" scoped="" ref="0xb72a9cd8"/>
        <function-ref name="sendDone" scoped="" ref="0xb72a9db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0xb72ad650" loc="7:Collection2SerialC.nc">
      <component-ref qname="Collection2SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0xb72ad650"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb72ad828"/>
        <function-ref name="stop" scoped="" ref="0xb72ad908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0xb7290890" loc="12:Collection2SerialC.nc">
      <component-ref qname="Collection2SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7290890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7290a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb72ae010" loc="9:Collection2SerialC.nc">
      <component-ref qname="Collection2SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb72ae010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb72ae1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb72ae2c8"/>
        <function-ref name="led1On" scoped="" ref="0xb72ae3a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb72ae488"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb72ae568"/>
        <function-ref name="get" scoped="" ref="0xb72ae648"/>
        <function-ref name="led1Off" scoped="" ref="0xb72ae728"/>
        <function-ref name="led2Off" scoped="" ref="0xb72aeaa8"/>
        <function-ref name="set" scoped="" ref="0xb72ae808"/>
        <function-ref name="led0On" scoped="" ref="0xb72ae8e8"/>
        <function-ref name="led2On" scoped="" ref="0xb72ae9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb7298708" loc="10:Collection2SerialC.nc">
      <component-ref qname="Collection2SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7298708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7297248"/>
        <function-ref name="fired" scoped="" ref="0xb729e4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb729ebf0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb729e998"/>
        <function-ref name="getdt" scoped="" ref="0xb72976f8"/>
        <function-ref name="gett0" scoped="" ref="0xb72974a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb729e740"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7298d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb729ef10"/>
        <function-ref name="startOneShot" scoped="" ref="0xb729e010"/>
        <function-ref name="stop" scoped="" ref="0xb729e290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb7280480" loc="58:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb7280480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7280658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb731f820" loc="57:/home/wsn/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb731f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb731f9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb727ad18" loc="52:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb727ad18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb727aef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7280cf8" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7280cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7280ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb727a5b8" loc="50:/home/wsn/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb727a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb727a790"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb727a870"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb727a950"/>
        <function-ref name="actualMicro" scoped="" ref="0xb727aa30"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb727ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0xb7278480" loc="45:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0xb7278480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7278658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb72780a0" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb72780a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7278278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0xb7278888" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0xb7278888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7278a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb727dc50" loc="41:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb727dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb727de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb727d880" loc="40:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb727d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb727da58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7272888" loc="45:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7272888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7272a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0xb726ee88" loc="44:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0xb726ee88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7272070"/>
        <function-ref name="isInput" scoped="" ref="0xb7272150"/>
        <function-ref name="toggle" scoped="" ref="0xb7272230"/>
        <function-ref name="isOutput" scoped="" ref="0xb7272310"/>
        <function-ref name="get" scoped="" ref="0xb72723f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72724d0"/>
        <function-ref name="set" scoped="" ref="0xb72725b0"/>
        <function-ref name="clr" scoped="" ref="0xb7272690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb7275928" loc="43:/home/wsn/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7275928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7275b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0xb724b4b0" loc="98:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0xb724b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb724b888"/>
        <function-ref name="isInput" scoped="" ref="0xb724b968"/>
        <function-ref name="toggle" scoped="" ref="0xb724ba48"/>
        <function-ref name="isOutput" scoped="" ref="0xb724bb28"/>
        <function-ref name="get" scoped="" ref="0xb724bc08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb724bce8"/>
        <function-ref name="set" scoped="" ref="0xb724bdc8"/>
        <function-ref name="clr" scoped="" ref="0xb724bea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0xb725ba28" loc="72:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0xb725ba28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725bc00"/>
        <function-ref name="isInput" scoped="" ref="0xb725bce0"/>
        <function-ref name="toggle" scoped="" ref="0xb725bdc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb725bea0"/>
        <function-ref name="get" scoped="" ref="0xb725a010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725a0f0"/>
        <function-ref name="set" scoped="" ref="0xb725a1d0"/>
        <function-ref name="clr" scoped="" ref="0xb725a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0xb72540a0" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0xb72540a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7254278"/>
        <function-ref name="isInput" scoped="" ref="0xb7254358"/>
        <function-ref name="toggle" scoped="" ref="0xb7254438"/>
        <function-ref name="isOutput" scoped="" ref="0xb7254518"/>
        <function-ref name="get" scoped="" ref="0xb72545f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72546d8"/>
        <function-ref name="set" scoped="" ref="0xb72547b8"/>
        <function-ref name="clr" scoped="" ref="0xb7254898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0xb724e210" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0xb724e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb724e3e8"/>
        <function-ref name="isInput" scoped="" ref="0xb724e4c8"/>
        <function-ref name="toggle" scoped="" ref="0xb724e5a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb724e688"/>
        <function-ref name="get" scoped="" ref="0xb724e768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb724e848"/>
        <function-ref name="set" scoped="" ref="0xb724e928"/>
        <function-ref name="clr" scoped="" ref="0xb724ea08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0xb7248a08" loc="103:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0xb7248a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7248be0"/>
        <function-ref name="isInput" scoped="" ref="0xb7248cc0"/>
        <function-ref name="toggle" scoped="" ref="0xb7248da0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7248e80"/>
        <function-ref name="get" scoped="" ref="0xb7247010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72470f0"/>
        <function-ref name="set" scoped="" ref="0xb72471d0"/>
        <function-ref name="clr" scoped="" ref="0xb72472b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0xb7267670" loc="50:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0xb7267670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7267848"/>
        <function-ref name="isInput" scoped="" ref="0xb7267928"/>
        <function-ref name="toggle" scoped="" ref="0xb7267a08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7267ae8"/>
        <function-ref name="get" scoped="" ref="0xb7267bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7267ca8"/>
        <function-ref name="set" scoped="" ref="0xb7267d88"/>
        <function-ref name="clr" scoped="" ref="0xb7267e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0xb7250ce8" loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0xb7250ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7250ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb724f010"/>
        <function-ref name="toggle" scoped="" ref="0xb724f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb724f1d0"/>
        <function-ref name="get" scoped="" ref="0xb724f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb724f390"/>
        <function-ref name="set" scoped="" ref="0xb724f470"/>
        <function-ref name="clr" scoped="" ref="0xb724f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0xb7266a98" loc="53:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0xb7266a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7266c70"/>
        <function-ref name="isInput" scoped="" ref="0xb7266d50"/>
        <function-ref name="toggle" scoped="" ref="0xb7266e30"/>
        <function-ref name="isOutput" scoped="" ref="0xb7266f10"/>
        <function-ref name="get" scoped="" ref="0xb7265010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72650f0"/>
        <function-ref name="set" scoped="" ref="0xb72651d0"/>
        <function-ref name="clr" scoped="" ref="0xb72652b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0xb725f210" loc="64:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0xb725f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725f3e8"/>
        <function-ref name="isInput" scoped="" ref="0xb725f4c8"/>
        <function-ref name="toggle" scoped="" ref="0xb725f5a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb725f688"/>
        <function-ref name="get" scoped="" ref="0xb725f768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725f848"/>
        <function-ref name="set" scoped="" ref="0xb725f928"/>
        <function-ref name="clr" scoped="" ref="0xb725fa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0xb72598e0" loc="75:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0xb72598e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7259ab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7259b98"/>
        <function-ref name="toggle" scoped="" ref="0xb7259c78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7259d58"/>
        <function-ref name="get" scoped="" ref="0xb7259e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7259f18"/>
        <function-ref name="set" scoped="" ref="0xb7258010"/>
        <function-ref name="clr" scoped="" ref="0xb72580f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0xb7252ea8" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0xb7252ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72510c0"/>
        <function-ref name="isInput" scoped="" ref="0xb72511a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7251280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7251360"/>
        <function-ref name="get" scoped="" ref="0xb7251440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7251520"/>
        <function-ref name="set" scoped="" ref="0xb7251600"/>
        <function-ref name="clr" scoped="" ref="0xb72516e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0xb726a2f0" loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0xb726a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb726a4c8"/>
        <function-ref name="isInput" scoped="" ref="0xb726a5a8"/>
        <function-ref name="toggle" scoped="" ref="0xb726a688"/>
        <function-ref name="isOutput" scoped="" ref="0xb726a768"/>
        <function-ref name="get" scoped="" ref="0xb726a848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb726a928"/>
        <function-ref name="set" scoped="" ref="0xb726aa08"/>
        <function-ref name="clr" scoped="" ref="0xb726aae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0xb72648e0" loc="56:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0xb72648e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7264ab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7264b98"/>
        <function-ref name="toggle" scoped="" ref="0xb7264c78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7264d58"/>
        <function-ref name="get" scoped="" ref="0xb7264e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7264f18"/>
        <function-ref name="set" scoped="" ref="0xb7263010"/>
        <function-ref name="clr" scoped="" ref="0xb72630f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0xb725d0a0" loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0xb725d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725d278"/>
        <function-ref name="isInput" scoped="" ref="0xb725d358"/>
        <function-ref name="toggle" scoped="" ref="0xb725d438"/>
        <function-ref name="isOutput" scoped="" ref="0xb725d518"/>
        <function-ref name="get" scoped="" ref="0xb725d5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725d6d8"/>
        <function-ref name="set" scoped="" ref="0xb725d7b8"/>
        <function-ref name="clr" scoped="" ref="0xb725d898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0xb7257750" loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0xb7257750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7257928"/>
        <function-ref name="isInput" scoped="" ref="0xb7257a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7257ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7257bc8"/>
        <function-ref name="get" scoped="" ref="0xb7257ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7257d88"/>
        <function-ref name="set" scoped="" ref="0xb7257e68"/>
        <function-ref name="clr" scoped="" ref="0xb7256010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0xb724c0a0" loc="95:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0xb724c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb724c278"/>
        <function-ref name="isInput" scoped="" ref="0xb724c358"/>
        <function-ref name="toggle" scoped="" ref="0xb724c438"/>
        <function-ref name="isOutput" scoped="" ref="0xb724c518"/>
        <function-ref name="get" scoped="" ref="0xb724c5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb724c6d8"/>
        <function-ref name="set" scoped="" ref="0xb724c7b8"/>
        <function-ref name="clr" scoped="" ref="0xb724c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0xb7249590" loc="101:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0xb7249590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7249768"/>
        <function-ref name="isInput" scoped="" ref="0xb7249848"/>
        <function-ref name="toggle" scoped="" ref="0xb7249928"/>
        <function-ref name="isOutput" scoped="" ref="0xb7249a08"/>
        <function-ref name="get" scoped="" ref="0xb7249ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7249bc8"/>
        <function-ref name="set" scoped="" ref="0xb7249ca8"/>
        <function-ref name="clr" scoped="" ref="0xb7249d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0xb7256c08" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0xb7256c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7256de0"/>
        <function-ref name="isInput" scoped="" ref="0xb7256ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7255010"/>
        <function-ref name="isOutput" scoped="" ref="0xb72550f0"/>
        <function-ref name="get" scoped="" ref="0xb72551d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72552b0"/>
        <function-ref name="set" scoped="" ref="0xb7255390"/>
        <function-ref name="clr" scoped="" ref="0xb7255470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0xb7268210" loc="48:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0xb7268210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72683e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72684c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72685a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7268688"/>
        <function-ref name="get" scoped="" ref="0xb7268768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7268848"/>
        <function-ref name="set" scoped="" ref="0xb7268928"/>
        <function-ref name="clr" scoped="" ref="0xb7268a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0xb7262830" loc="59:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0xb7262830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7262a08"/>
        <function-ref name="isInput" scoped="" ref="0xb7262ae8"/>
        <function-ref name="toggle" scoped="" ref="0xb7262bc8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7262ca8"/>
        <function-ref name="get" scoped="" ref="0xb7262d88"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7262e68"/>
        <function-ref name="set" scoped="" ref="0xb7261010"/>
        <function-ref name="clr" scoped="" ref="0xb72610f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0xb724a0c0" loc="99:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0xb724a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb724a298"/>
        <function-ref name="isInput" scoped="" ref="0xb724a378"/>
        <function-ref name="toggle" scoped="" ref="0xb724a458"/>
        <function-ref name="isOutput" scoped="" ref="0xb724a538"/>
        <function-ref name="get" scoped="" ref="0xb724a618"/>
        <function-ref name="makeOutput" scoped="" ref="0xb724a6f8"/>
        <function-ref name="set" scoped="" ref="0xb724a7d8"/>
        <function-ref name="clr" scoped="" ref="0xb724a8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0xb7261ce8" loc="62:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0xb7261ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7261ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7260010"/>
        <function-ref name="toggle" scoped="" ref="0xb72600f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72601d0"/>
        <function-ref name="get" scoped="" ref="0xb72602b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7260390"/>
        <function-ref name="set" scoped="" ref="0xb7260470"/>
        <function-ref name="clr" scoped="" ref="0xb7260550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0xb725a4b0" loc="73:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0xb725a4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725a688"/>
        <function-ref name="isInput" scoped="" ref="0xb725a768"/>
        <function-ref name="toggle" scoped="" ref="0xb725a848"/>
        <function-ref name="isOutput" scoped="" ref="0xb725a928"/>
        <function-ref name="get" scoped="" ref="0xb725aa08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725aae8"/>
        <function-ref name="set" scoped="" ref="0xb725abc8"/>
        <function-ref name="clr" scoped="" ref="0xb725aca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0xb7254a98" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0xb7254a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7254c70"/>
        <function-ref name="isInput" scoped="" ref="0xb7254d50"/>
        <function-ref name="toggle" scoped="" ref="0xb7254e30"/>
        <function-ref name="isOutput" scoped="" ref="0xb7254f10"/>
        <function-ref name="get" scoped="" ref="0xb7252010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72520f0"/>
        <function-ref name="set" scoped="" ref="0xb72521d0"/>
        <function-ref name="clr" scoped="" ref="0xb72522b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0xb724ec08" loc="93:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0xb724ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb724ede0"/>
        <function-ref name="isInput" scoped="" ref="0xb724eec0"/>
        <function-ref name="toggle" scoped="" ref="0xb724d010"/>
        <function-ref name="isOutput" scoped="" ref="0xb724d0f0"/>
        <function-ref name="get" scoped="" ref="0xb724d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb724d2b0"/>
        <function-ref name="set" scoped="" ref="0xb724d390"/>
        <function-ref name="clr" scoped="" ref="0xb724d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0xb72660a0" loc="51:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0xb72660a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7266278"/>
        <function-ref name="isInput" scoped="" ref="0xb7266358"/>
        <function-ref name="toggle" scoped="" ref="0xb7266438"/>
        <function-ref name="isOutput" scoped="" ref="0xb7266518"/>
        <function-ref name="get" scoped="" ref="0xb72665f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72666d8"/>
        <function-ref name="set" scoped="" ref="0xb72667b8"/>
        <function-ref name="clr" scoped="" ref="0xb7266898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0xb72654b0" loc="54:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0xb72654b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7265688"/>
        <function-ref name="isInput" scoped="" ref="0xb7265768"/>
        <function-ref name="toggle" scoped="" ref="0xb7265848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7265928"/>
        <function-ref name="get" scoped="" ref="0xb7265a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7265ae8"/>
        <function-ref name="set" scoped="" ref="0xb7265bc8"/>
        <function-ref name="clr" scoped="" ref="0xb7265ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0xb725fc08" loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0xb725fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725fde0"/>
        <function-ref name="isInput" scoped="" ref="0xb725fec0"/>
        <function-ref name="toggle" scoped="" ref="0xb725e010"/>
        <function-ref name="isOutput" scoped="" ref="0xb725e0f0"/>
        <function-ref name="get" scoped="" ref="0xb725e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725e2b0"/>
        <function-ref name="set" scoped="" ref="0xb725e390"/>
        <function-ref name="clr" scoped="" ref="0xb725e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0xb72582f0" loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0xb72582f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72584c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72585a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7258688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7258768"/>
        <function-ref name="get" scoped="" ref="0xb7258848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7258928"/>
        <function-ref name="set" scoped="" ref="0xb7258a08"/>
        <function-ref name="clr" scoped="" ref="0xb7258ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0xb72518e0" loc="87:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0xb72518e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7251ab8"/>
        <function-ref name="isInput" scoped="" ref="0xb7251b98"/>
        <function-ref name="toggle" scoped="" ref="0xb7251c78"/>
        <function-ref name="isOutput" scoped="" ref="0xb7251d58"/>
        <function-ref name="get" scoped="" ref="0xb7251e38"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7251f18"/>
        <function-ref name="set" scoped="" ref="0xb7250010"/>
        <function-ref name="clr" scoped="" ref="0xb72500f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0xb726ace8" loc="46:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0xb726ace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb726aec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7269010"/>
        <function-ref name="toggle" scoped="" ref="0xb72690f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72691d0"/>
        <function-ref name="get" scoped="" ref="0xb72692b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7269390"/>
        <function-ref name="set" scoped="" ref="0xb7269470"/>
        <function-ref name="clr" scoped="" ref="0xb7269550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0xb72632f0" loc="57:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0xb72632f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7263548"/>
        <function-ref name="isInput" scoped="" ref="0xb7263628"/>
        <function-ref name="toggle" scoped="" ref="0xb7263708"/>
        <function-ref name="isOutput" scoped="" ref="0xb72637e8"/>
        <function-ref name="get" scoped="" ref="0xb72638c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72639a8"/>
        <function-ref name="set" scoped="" ref="0xb7263a88"/>
        <function-ref name="clr" scoped="" ref="0xb7263b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0xb725da98" loc="68:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0xb725da98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725dc70"/>
        <function-ref name="isInput" scoped="" ref="0xb725dd50"/>
        <function-ref name="toggle" scoped="" ref="0xb725de30"/>
        <function-ref name="isOutput" scoped="" ref="0xb725df10"/>
        <function-ref name="get" scoped="" ref="0xb725c010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725c0f0"/>
        <function-ref name="set" scoped="" ref="0xb725c1d0"/>
        <function-ref name="clr" scoped="" ref="0xb725c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0xb724ca98" loc="96:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0xb724ca98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb724cc70"/>
        <function-ref name="isInput" scoped="" ref="0xb724cd50"/>
        <function-ref name="toggle" scoped="" ref="0xb724ce30"/>
        <function-ref name="isOutput" scoped="" ref="0xb724cf10"/>
        <function-ref name="get" scoped="" ref="0xb724b010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb724b0f0"/>
        <function-ref name="set" scoped="" ref="0xb724b1d0"/>
        <function-ref name="clr" scoped="" ref="0xb724b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0xb725cea8" loc="71:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0xb725cea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725b208"/>
        <function-ref name="isInput" scoped="" ref="0xb725b2e8"/>
        <function-ref name="toggle" scoped="" ref="0xb725b3c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb725b4a8"/>
        <function-ref name="get" scoped="" ref="0xb725b588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725b668"/>
        <function-ref name="set" scoped="" ref="0xb725b748"/>
        <function-ref name="clr" scoped="" ref="0xb725b828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0xb7255670" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0xb7255670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7255848"/>
        <function-ref name="isInput" scoped="" ref="0xb7255928"/>
        <function-ref name="toggle" scoped="" ref="0xb7255a08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7255ae8"/>
        <function-ref name="get" scoped="" ref="0xb7255bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7255ca8"/>
        <function-ref name="set" scoped="" ref="0xb7255d88"/>
        <function-ref name="clr" scoped="" ref="0xb7255e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0xb724f750" loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0xb724f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb724f928"/>
        <function-ref name="isInput" scoped="" ref="0xb724fa08"/>
        <function-ref name="toggle" scoped="" ref="0xb724fae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb724fbc8"/>
        <function-ref name="get" scoped="" ref="0xb724fca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb724fd88"/>
        <function-ref name="set" scoped="" ref="0xb724fe68"/>
        <function-ref name="clr" scoped="" ref="0xb724e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0xb7248010" loc="102:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0xb7248010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72481e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72482c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72483a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7248488"/>
        <function-ref name="get" scoped="" ref="0xb7248568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7248648"/>
        <function-ref name="set" scoped="" ref="0xb7248728"/>
        <function-ref name="clr" scoped="" ref="0xb7248808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0xb7268c08" loc="49:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0xb7268c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7268de0"/>
        <function-ref name="isInput" scoped="" ref="0xb7268ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb7267010"/>
        <function-ref name="isOutput" scoped="" ref="0xb72670f0"/>
        <function-ref name="get" scoped="" ref="0xb72671d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72672b0"/>
        <function-ref name="set" scoped="" ref="0xb7267390"/>
        <function-ref name="clr" scoped="" ref="0xb7267470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0xb72612f0" loc="60:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0xb72612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72614c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72615a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7261688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7261768"/>
        <function-ref name="get" scoped="" ref="0xb7261848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7261928"/>
        <function-ref name="set" scoped="" ref="0xb7261a08"/>
        <function-ref name="clr" scoped="" ref="0xb7261ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0xb72502f0" loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0xb72502f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72504c8"/>
        <function-ref name="isInput" scoped="" ref="0xb72505a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7250688"/>
        <function-ref name="isOutput" scoped="" ref="0xb7250768"/>
        <function-ref name="get" scoped="" ref="0xb7250848"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7250928"/>
        <function-ref name="set" scoped="" ref="0xb7250a08"/>
        <function-ref name="clr" scoped="" ref="0xb7250ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0xb7260750" loc="63:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0xb7260750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7260928"/>
        <function-ref name="isInput" scoped="" ref="0xb7260a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7260ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7260bc8"/>
        <function-ref name="get" scoped="" ref="0xb7260ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7260d88"/>
        <function-ref name="set" scoped="" ref="0xb7260e68"/>
        <function-ref name="clr" scoped="" ref="0xb725f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0xb725aea8" loc="74:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0xb725aea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72590c0"/>
        <function-ref name="isInput" scoped="" ref="0xb72591a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7259280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7259360"/>
        <function-ref name="get" scoped="" ref="0xb7259440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7259520"/>
        <function-ref name="set" scoped="" ref="0xb7259600"/>
        <function-ref name="clr" scoped="" ref="0xb72596e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0xb72524b0" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0xb72524b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7252688"/>
        <function-ref name="isInput" scoped="" ref="0xb7252768"/>
        <function-ref name="toggle" scoped="" ref="0xb7252848"/>
        <function-ref name="isOutput" scoped="" ref="0xb7252928"/>
        <function-ref name="get" scoped="" ref="0xb7252a08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7252ae8"/>
        <function-ref name="set" scoped="" ref="0xb7252bc8"/>
        <function-ref name="clr" scoped="" ref="0xb7252ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0xb724d670" loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0xb724d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb724d848"/>
        <function-ref name="isInput" scoped="" ref="0xb724d928"/>
        <function-ref name="toggle" scoped="" ref="0xb724da08"/>
        <function-ref name="isOutput" scoped="" ref="0xb724dae8"/>
        <function-ref name="get" scoped="" ref="0xb724dbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb724dca8"/>
        <function-ref name="set" scoped="" ref="0xb724dd88"/>
        <function-ref name="clr" scoped="" ref="0xb724de68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0xb7274848" loc="44:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0xb7274848"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7274a20"/>
        <function-ref name="isInput" scoped="" ref="0xb7274b00"/>
        <function-ref name="toggle" scoped="" ref="0xb7274be0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7274cc0"/>
        <function-ref name="get" scoped="" ref="0xb7274da0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7274e80"/>
        <function-ref name="set" scoped="" ref="0xb726a010"/>
        <function-ref name="clr" scoped="" ref="0xb726a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0xb7265ea8" loc="55:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0xb7265ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72640c0"/>
        <function-ref name="isInput" scoped="" ref="0xb72641a0"/>
        <function-ref name="toggle" scoped="" ref="0xb7264280"/>
        <function-ref name="isOutput" scoped="" ref="0xb7264360"/>
        <function-ref name="get" scoped="" ref="0xb7264440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7264520"/>
        <function-ref name="set" scoped="" ref="0xb7264600"/>
        <function-ref name="clr" scoped="" ref="0xb72646e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0xb725e670" loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0xb725e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725e848"/>
        <function-ref name="isInput" scoped="" ref="0xb725e928"/>
        <function-ref name="toggle" scoped="" ref="0xb725ea08"/>
        <function-ref name="isOutput" scoped="" ref="0xb725eae8"/>
        <function-ref name="get" scoped="" ref="0xb725ebc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725eca8"/>
        <function-ref name="set" scoped="" ref="0xb725ed88"/>
        <function-ref name="clr" scoped="" ref="0xb725ee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0xb7258ce8" loc="77:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0xb7258ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7258ec0"/>
        <function-ref name="isInput" scoped="" ref="0xb7257010"/>
        <function-ref name="toggle" scoped="" ref="0xb72570f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72571d0"/>
        <function-ref name="get" scoped="" ref="0xb72572b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7257390"/>
        <function-ref name="set" scoped="" ref="0xb7257470"/>
        <function-ref name="clr" scoped="" ref="0xb7257550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0xb724aab8" loc="100:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0xb724aab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb724ac90"/>
        <function-ref name="isInput" scoped="" ref="0xb724ad70"/>
        <function-ref name="toggle" scoped="" ref="0xb724ae50"/>
        <function-ref name="isOutput" scoped="" ref="0xb7249010"/>
        <function-ref name="get" scoped="" ref="0xb72490f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72491d0"/>
        <function-ref name="set" scoped="" ref="0xb72492b0"/>
        <function-ref name="clr" scoped="" ref="0xb7249390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0xb7256210" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0xb7256210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72563e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72564c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72565a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7256688"/>
        <function-ref name="get" scoped="" ref="0xb7256768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7256848"/>
        <function-ref name="set" scoped="" ref="0xb7256928"/>
        <function-ref name="clr" scoped="" ref="0xb7256a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0xb725c4b0" loc="69:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0xb725c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb725c688"/>
        <function-ref name="isInput" scoped="" ref="0xb725c768"/>
        <function-ref name="toggle" scoped="" ref="0xb725c848"/>
        <function-ref name="isOutput" scoped="" ref="0xb725c928"/>
        <function-ref name="get" scoped="" ref="0xb725ca08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb725cae8"/>
        <function-ref name="set" scoped="" ref="0xb725cbc8"/>
        <function-ref name="clr" scoped="" ref="0xb725cca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0xb7269750" loc="47:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0xb7269750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7269928"/>
        <function-ref name="isInput" scoped="" ref="0xb7269a08"/>
        <function-ref name="toggle" scoped="" ref="0xb7269ae8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7269bc8"/>
        <function-ref name="get" scoped="" ref="0xb7269ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7269d88"/>
        <function-ref name="set" scoped="" ref="0xb7269e68"/>
        <function-ref name="clr" scoped="" ref="0xb7268010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0xb7263d68" loc="58:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0xb7263d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7262010"/>
        <function-ref name="isInput" scoped="" ref="0xb72620f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72621d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72622b0"/>
        <function-ref name="get" scoped="" ref="0xb7262390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7262470"/>
        <function-ref name="set" scoped="" ref="0xb7262550"/>
        <function-ref name="clr" scoped="" ref="0xb7262630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb721e030" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb721e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721e208"/>
        <function-ref name="isInput" scoped="" ref="0xb721e2e8"/>
        <function-ref name="toggle" scoped="" ref="0xb721e3c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb721e4a8"/>
        <function-ref name="get" scoped="" ref="0xb721e588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721e668"/>
        <function-ref name="set" scoped="" ref="0xb721e748"/>
        <function-ref name="clr" scoped="" ref="0xb721e828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb721dc88" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb721dc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721de60"/>
        <function-ref name="isInput" scoped="" ref="0xb721c010"/>
        <function-ref name="toggle" scoped="" ref="0xb721c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb721c1d0"/>
        <function-ref name="get" scoped="" ref="0xb721c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721c390"/>
        <function-ref name="set" scoped="" ref="0xb721c470"/>
        <function-ref name="clr" scoped="" ref="0xb721c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7220cc8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7220cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7220ea0"/>
        <function-ref name="isInput" scoped="" ref="0xb721f010"/>
        <function-ref name="toggle" scoped="" ref="0xb721f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb721f1d0"/>
        <function-ref name="get" scoped="" ref="0xb721f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721f390"/>
        <function-ref name="set" scoped="" ref="0xb721f470"/>
        <function-ref name="clr" scoped="" ref="0xb721f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb721e988" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb721e988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721eb60"/>
        <function-ref name="isInput" scoped="" ref="0xb721ec40"/>
        <function-ref name="toggle" scoped="" ref="0xb721ed20"/>
        <function-ref name="isOutput" scoped="" ref="0xb721ee00"/>
        <function-ref name="get" scoped="" ref="0xb721eee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721d010"/>
        <function-ref name="set" scoped="" ref="0xb721d0f0"/>
        <function-ref name="clr" scoped="" ref="0xb721d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb721c6b0" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb721c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721c888"/>
        <function-ref name="isInput" scoped="" ref="0xb721c968"/>
        <function-ref name="toggle" scoped="" ref="0xb721ca48"/>
        <function-ref name="isOutput" scoped="" ref="0xb721cb28"/>
        <function-ref name="get" scoped="" ref="0xb721cc08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721cce8"/>
        <function-ref name="set" scoped="" ref="0xb721cdc8"/>
        <function-ref name="clr" scoped="" ref="0xb721cea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb721f6b0" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb721f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721f888"/>
        <function-ref name="isInput" scoped="" ref="0xb721f968"/>
        <function-ref name="toggle" scoped="" ref="0xb721fa48"/>
        <function-ref name="isOutput" scoped="" ref="0xb721fb28"/>
        <function-ref name="get" scoped="" ref="0xb721fc08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721fce8"/>
        <function-ref name="set" scoped="" ref="0xb721fdc8"/>
        <function-ref name="clr" scoped="" ref="0xb721fea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb721d330" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb721d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721d508"/>
        <function-ref name="isInput" scoped="" ref="0xb721d5e8"/>
        <function-ref name="toggle" scoped="" ref="0xb721d6c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb721d7a8"/>
        <function-ref name="get" scoped="" ref="0xb721d888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721d968"/>
        <function-ref name="set" scoped="" ref="0xb721da48"/>
        <function-ref name="clr" scoped="" ref="0xb721db28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb721b030" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb721b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb721b208"/>
        <function-ref name="isInput" scoped="" ref="0xb721b2e8"/>
        <function-ref name="toggle" scoped="" ref="0xb721b3c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb721b4a8"/>
        <function-ref name="get" scoped="" ref="0xb721b588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb721b668"/>
        <function-ref name="set" scoped="" ref="0xb721b748"/>
        <function-ref name="clr" scoped="" ref="0xb721b828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb651c010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb651c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb651c1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb651c2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb651c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb651c488"/>
        <function-ref name="get" scoped="" ref="0xb651c568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb651c648"/>
        <function-ref name="set" scoped="" ref="0xb651c728"/>
        <function-ref name="clr" scoped="" ref="0xb651c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb651b9e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb651b9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb651bbc0"/>
        <function-ref name="isInput" scoped="" ref="0xb651bca0"/>
        <function-ref name="toggle" scoped="" ref="0xb651bd80"/>
        <function-ref name="isOutput" scoped="" ref="0xb651be60"/>
        <function-ref name="get" scoped="" ref="0xb651a010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb651a0f0"/>
        <function-ref name="set" scoped="" ref="0xb651a1d0"/>
        <function-ref name="clr" scoped="" ref="0xb651a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6519538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6519538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6519710"/>
        <function-ref name="isInput" scoped="" ref="0xb65197f0"/>
        <function-ref name="toggle" scoped="" ref="0xb65198d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65199b0"/>
        <function-ref name="get" scoped="" ref="0xb6519a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6519b70"/>
        <function-ref name="set" scoped="" ref="0xb6519c50"/>
        <function-ref name="clr" scoped="" ref="0xb6519d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6517010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6517010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65171e8"/>
        <function-ref name="isInput" scoped="" ref="0xb65172c8"/>
        <function-ref name="toggle" scoped="" ref="0xb65173a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6517488"/>
        <function-ref name="get" scoped="" ref="0xb6517568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6517648"/>
        <function-ref name="set" scoped="" ref="0xb6517728"/>
        <function-ref name="clr" scoped="" ref="0xb6517808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65169e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb65169e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6516bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb6516ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb6516d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb6516e60"/>
        <function-ref name="get" scoped="" ref="0xb6515010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65150f0"/>
        <function-ref name="set" scoped="" ref="0xb65151d0"/>
        <function-ref name="clr" scoped="" ref="0xb65152b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6514538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6514538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6514710"/>
        <function-ref name="isInput" scoped="" ref="0xb65147f0"/>
        <function-ref name="toggle" scoped="" ref="0xb65148d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb65149b0"/>
        <function-ref name="get" scoped="" ref="0xb6514a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6514b70"/>
        <function-ref name="set" scoped="" ref="0xb6514c50"/>
        <function-ref name="clr" scoped="" ref="0xb6514d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6512010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6512010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb65121e8"/>
        <function-ref name="isInput" scoped="" ref="0xb65122c8"/>
        <function-ref name="toggle" scoped="" ref="0xb65123a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6512488"/>
        <function-ref name="get" scoped="" ref="0xb6512568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6512648"/>
        <function-ref name="set" scoped="" ref="0xb6512728"/>
        <function-ref name="clr" scoped="" ref="0xb6512808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb65119e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb65119e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6511bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb6511ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb6511d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb6511e60"/>
        <function-ref name="get" scoped="" ref="0xb6510010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb65100f0"/>
        <function-ref name="set" scoped="" ref="0xb65101d0"/>
        <function-ref name="clr" scoped="" ref="0xb65102b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7216860" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7216860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7216a38"/>
        <function-ref name="isInput" scoped="" ref="0xb7216b18"/>
        <function-ref name="toggle" scoped="" ref="0xb7216bf8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7216cd8"/>
        <function-ref name="get" scoped="" ref="0xb7216db8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7216e98"/>
        <function-ref name="set" scoped="" ref="0xb7215010"/>
        <function-ref name="clr" scoped="" ref="0xb72150f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb72145d0" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb72145d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72147a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7214888"/>
        <function-ref name="toggle" scoped="" ref="0xb7214968"/>
        <function-ref name="isOutput" scoped="" ref="0xb7214a48"/>
        <function-ref name="get" scoped="" ref="0xb7214b28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7214c08"/>
        <function-ref name="set" scoped="" ref="0xb7214ce8"/>
        <function-ref name="clr" scoped="" ref="0xb7214dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb72175a0" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb72175a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7217778"/>
        <function-ref name="isInput" scoped="" ref="0xb7217858"/>
        <function-ref name="toggle" scoped="" ref="0xb7217938"/>
        <function-ref name="isOutput" scoped="" ref="0xb7217a18"/>
        <function-ref name="get" scoped="" ref="0xb7217af8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7217bd8"/>
        <function-ref name="set" scoped="" ref="0xb7217cb8"/>
        <function-ref name="clr" scoped="" ref="0xb7217d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7215250" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7215250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7215428"/>
        <function-ref name="isInput" scoped="" ref="0xb7215508"/>
        <function-ref name="toggle" scoped="" ref="0xb72155e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb72156c8"/>
        <function-ref name="get" scoped="" ref="0xb72157a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7215888"/>
        <function-ref name="set" scoped="" ref="0xb7215968"/>
        <function-ref name="clr" scoped="" ref="0xb7215a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7214f28" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7214f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7213110"/>
        <function-ref name="isInput" scoped="" ref="0xb72131f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72132d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72133b0"/>
        <function-ref name="get" scoped="" ref="0xb7213490"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7213570"/>
        <function-ref name="set" scoped="" ref="0xb7213650"/>
        <function-ref name="clr" scoped="" ref="0xb7213730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7217ef8" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7217ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72160e0"/>
        <function-ref name="isInput" scoped="" ref="0xb72161c0"/>
        <function-ref name="toggle" scoped="" ref="0xb72162a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7216380"/>
        <function-ref name="get" scoped="" ref="0xb7216460"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7216540"/>
        <function-ref name="set" scoped="" ref="0xb7216620"/>
        <function-ref name="clr" scoped="" ref="0xb7216700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7215ba8" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7215ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7215d80"/>
        <function-ref name="isInput" scoped="" ref="0xb7215e60"/>
        <function-ref name="toggle" scoped="" ref="0xb7214010"/>
        <function-ref name="isOutput" scoped="" ref="0xb72140f0"/>
        <function-ref name="get" scoped="" ref="0xb72141d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72142b0"/>
        <function-ref name="set" scoped="" ref="0xb7214390"/>
        <function-ref name="clr" scoped="" ref="0xb7214470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7213890" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7213890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7213a68"/>
        <function-ref name="isInput" scoped="" ref="0xb7213b48"/>
        <function-ref name="toggle" scoped="" ref="0xb7213c28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7213d08"/>
        <function-ref name="get" scoped="" ref="0xb7213de8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7213ec8"/>
        <function-ref name="set" scoped="" ref="0xb7212010"/>
        <function-ref name="clr" scoped="" ref="0xb72120f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64e8de8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64e8de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64e4010"/>
        <function-ref name="isInput" scoped="" ref="0xb64e40f0"/>
        <function-ref name="toggle" scoped="" ref="0xb64e41d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb64e42b0"/>
        <function-ref name="get" scoped="" ref="0xb64e4390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64e4470"/>
        <function-ref name="set" scoped="" ref="0xb64e4550"/>
        <function-ref name="clr" scoped="" ref="0xb64e4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64e37f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64e37f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64e39d0"/>
        <function-ref name="isInput" scoped="" ref="0xb64e3ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb64e3b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb64e3c70"/>
        <function-ref name="get" scoped="" ref="0xb64e3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64e3e30"/>
        <function-ref name="set" scoped="" ref="0xb64e3f10"/>
        <function-ref name="clr" scoped="" ref="0xb64e2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64e1228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64e1228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64e1400"/>
        <function-ref name="isInput" scoped="" ref="0xb64e14e0"/>
        <function-ref name="toggle" scoped="" ref="0xb64e15c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb64e16a0"/>
        <function-ref name="get" scoped="" ref="0xb64e1780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64e1860"/>
        <function-ref name="set" scoped="" ref="0xb64e1940"/>
        <function-ref name="clr" scoped="" ref="0xb64e1a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64dfc08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64dfc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64dfde0"/>
        <function-ref name="isInput" scoped="" ref="0xb64dfec0"/>
        <function-ref name="toggle" scoped="" ref="0xb64de010"/>
        <function-ref name="isOutput" scoped="" ref="0xb64de0f0"/>
        <function-ref name="get" scoped="" ref="0xb64de1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64de2b0"/>
        <function-ref name="set" scoped="" ref="0xb64de390"/>
        <function-ref name="clr" scoped="" ref="0xb64de470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64dd6c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64dd6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64dd898"/>
        <function-ref name="isInput" scoped="" ref="0xb64dd978"/>
        <function-ref name="toggle" scoped="" ref="0xb64dda58"/>
        <function-ref name="isOutput" scoped="" ref="0xb64ddb38"/>
        <function-ref name="get" scoped="" ref="0xb64ddc18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64ddcf8"/>
        <function-ref name="set" scoped="" ref="0xb64dddd8"/>
        <function-ref name="clr" scoped="" ref="0xb64ddeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64db0b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64db0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64db288"/>
        <function-ref name="isInput" scoped="" ref="0xb64db368"/>
        <function-ref name="toggle" scoped="" ref="0xb64db448"/>
        <function-ref name="isOutput" scoped="" ref="0xb64db528"/>
        <function-ref name="get" scoped="" ref="0xb64db608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64db6e8"/>
        <function-ref name="set" scoped="" ref="0xb64db7c8"/>
        <function-ref name="clr" scoped="" ref="0xb64db8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64daa88" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64daa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64dac60"/>
        <function-ref name="isInput" scoped="" ref="0xb64dad40"/>
        <function-ref name="toggle" scoped="" ref="0xb64dae20"/>
        <function-ref name="isOutput" scoped="" ref="0xb64daf00"/>
        <function-ref name="get" scoped="" ref="0xb64d9010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64d90f0"/>
        <function-ref name="set" scoped="" ref="0xb64d91d0"/>
        <function-ref name="clr" scoped="" ref="0xb64d92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64d8538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64d8538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64d8710"/>
        <function-ref name="isInput" scoped="" ref="0xb64d87f0"/>
        <function-ref name="toggle" scoped="" ref="0xb64d88d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb64d89b0"/>
        <function-ref name="get" scoped="" ref="0xb64d8a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64d8b70"/>
        <function-ref name="set" scoped="" ref="0xb64d8c50"/>
        <function-ref name="clr" scoped="" ref="0xb64d8d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb720d170" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb720d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb720d348"/>
        <function-ref name="isInput" scoped="" ref="0xb720d428"/>
        <function-ref name="toggle" scoped="" ref="0xb720d508"/>
        <function-ref name="isOutput" scoped="" ref="0xb720d5e8"/>
        <function-ref name="get" scoped="" ref="0xb720d6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb720d7a8"/>
        <function-ref name="set" scoped="" ref="0xb720d888"/>
        <function-ref name="clr" scoped="" ref="0xb720d968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb720ce48" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb720ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb720b050"/>
        <function-ref name="isInput" scoped="" ref="0xb720b130"/>
        <function-ref name="toggle" scoped="" ref="0xb720b210"/>
        <function-ref name="isOutput" scoped="" ref="0xb720b2f0"/>
        <function-ref name="get" scoped="" ref="0xb720b3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb720b4b0"/>
        <function-ref name="set" scoped="" ref="0xb720b590"/>
        <function-ref name="clr" scoped="" ref="0xb720b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7210e78" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7210e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb720f070"/>
        <function-ref name="isInput" scoped="" ref="0xb720f150"/>
        <function-ref name="toggle" scoped="" ref="0xb720f230"/>
        <function-ref name="isOutput" scoped="" ref="0xb720f310"/>
        <function-ref name="get" scoped="" ref="0xb720f3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb720f4d0"/>
        <function-ref name="set" scoped="" ref="0xb720f5b0"/>
        <function-ref name="clr" scoped="" ref="0xb720f690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb720dac8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb720dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb720dca0"/>
        <function-ref name="isInput" scoped="" ref="0xb720dd80"/>
        <function-ref name="toggle" scoped="" ref="0xb720de60"/>
        <function-ref name="isOutput" scoped="" ref="0xb720c010"/>
        <function-ref name="get" scoped="" ref="0xb720c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb720c1d0"/>
        <function-ref name="set" scoped="" ref="0xb720c2b0"/>
        <function-ref name="clr" scoped="" ref="0xb720c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb720b7d0" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb720b7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb720b9a8"/>
        <function-ref name="isInput" scoped="" ref="0xb720ba88"/>
        <function-ref name="toggle" scoped="" ref="0xb720bb68"/>
        <function-ref name="isOutput" scoped="" ref="0xb720bc48"/>
        <function-ref name="get" scoped="" ref="0xb720bd28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb720be08"/>
        <function-ref name="set" scoped="" ref="0xb720bee8"/>
        <function-ref name="clr" scoped="" ref="0xb720a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb720f7f0" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb720f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb720f9c8"/>
        <function-ref name="isInput" scoped="" ref="0xb720faa8"/>
        <function-ref name="toggle" scoped="" ref="0xb720fb88"/>
        <function-ref name="isOutput" scoped="" ref="0xb720fc68"/>
        <function-ref name="get" scoped="" ref="0xb720fd48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb720fe28"/>
        <function-ref name="set" scoped="" ref="0xb720ff08"/>
        <function-ref name="clr" scoped="" ref="0xb720d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb720c4f0" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb720c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb720c6c8"/>
        <function-ref name="isInput" scoped="" ref="0xb720c7a8"/>
        <function-ref name="toggle" scoped="" ref="0xb720c888"/>
        <function-ref name="isOutput" scoped="" ref="0xb720c968"/>
        <function-ref name="get" scoped="" ref="0xb720ca48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb720cb28"/>
        <function-ref name="set" scoped="" ref="0xb720cc08"/>
        <function-ref name="clr" scoped="" ref="0xb720cce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb720a170" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb720a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb720a348"/>
        <function-ref name="isInput" scoped="" ref="0xb720a428"/>
        <function-ref name="toggle" scoped="" ref="0xb720a508"/>
        <function-ref name="isOutput" scoped="" ref="0xb720a5e8"/>
        <function-ref name="get" scoped="" ref="0xb720a6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb720a7a8"/>
        <function-ref name="set" scoped="" ref="0xb720a888"/>
        <function-ref name="clr" scoped="" ref="0xb720a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64ac938" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64ac938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64acb10"/>
        <function-ref name="isInput" scoped="" ref="0xb64acbf0"/>
        <function-ref name="toggle" scoped="" ref="0xb64accd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb64acdb0"/>
        <function-ref name="get" scoped="" ref="0xb64ace90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64ab010"/>
        <function-ref name="set" scoped="" ref="0xb64ab0f0"/>
        <function-ref name="clr" scoped="" ref="0xb64ab1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64aa3b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64aa3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64aa588"/>
        <function-ref name="isInput" scoped="" ref="0xb64aa668"/>
        <function-ref name="toggle" scoped="" ref="0xb64aa748"/>
        <function-ref name="isOutput" scoped="" ref="0xb64aa828"/>
        <function-ref name="get" scoped="" ref="0xb64aa908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64aa9e8"/>
        <function-ref name="set" scoped="" ref="0xb64aaac8"/>
        <function-ref name="clr" scoped="" ref="0xb64aaba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64a9d70" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64a9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64a8010"/>
        <function-ref name="isInput" scoped="" ref="0xb64a80f0"/>
        <function-ref name="toggle" scoped="" ref="0xb64a81d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb64a82b0"/>
        <function-ref name="get" scoped="" ref="0xb64a8390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64a8470"/>
        <function-ref name="set" scoped="" ref="0xb64a8550"/>
        <function-ref name="clr" scoped="" ref="0xb64a8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64a77f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64a77f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64a79d0"/>
        <function-ref name="isInput" scoped="" ref="0xb64a7ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb64a7b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb64a7c70"/>
        <function-ref name="get" scoped="" ref="0xb64a7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64a7e30"/>
        <function-ref name="set" scoped="" ref="0xb64a7f10"/>
        <function-ref name="clr" scoped="" ref="0xb64a6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64a5228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64a5228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64a5400"/>
        <function-ref name="isInput" scoped="" ref="0xb64a54e0"/>
        <function-ref name="toggle" scoped="" ref="0xb64a55c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb64a56a0"/>
        <function-ref name="get" scoped="" ref="0xb64a5780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64a5860"/>
        <function-ref name="set" scoped="" ref="0xb64a5940"/>
        <function-ref name="clr" scoped="" ref="0xb64a5a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64a4c08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64a4c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64a4de0"/>
        <function-ref name="isInput" scoped="" ref="0xb64a4ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb64a3010"/>
        <function-ref name="isOutput" scoped="" ref="0xb64a30f0"/>
        <function-ref name="get" scoped="" ref="0xb64a31d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64a32b0"/>
        <function-ref name="set" scoped="" ref="0xb64a3390"/>
        <function-ref name="clr" scoped="" ref="0xb64a3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64a26c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64a26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64a2898"/>
        <function-ref name="isInput" scoped="" ref="0xb64a2978"/>
        <function-ref name="toggle" scoped="" ref="0xb64a2a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb64a2b38"/>
        <function-ref name="get" scoped="" ref="0xb64a2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64a2cf8"/>
        <function-ref name="set" scoped="" ref="0xb64a2dd8"/>
        <function-ref name="clr" scoped="" ref="0xb64a2eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64a00b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64a00b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64a0288"/>
        <function-ref name="isInput" scoped="" ref="0xb64a0368"/>
        <function-ref name="toggle" scoped="" ref="0xb64a0448"/>
        <function-ref name="isOutput" scoped="" ref="0xb64a0528"/>
        <function-ref name="get" scoped="" ref="0xb64a0608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64a06e8"/>
        <function-ref name="set" scoped="" ref="0xb64a07c8"/>
        <function-ref name="clr" scoped="" ref="0xb64a08a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb72069e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb72069e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7206bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb7206ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb7206d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb7206e60"/>
        <function-ref name="get" scoped="" ref="0xb7205010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72050f0"/>
        <function-ref name="set" scoped="" ref="0xb72051d0"/>
        <function-ref name="clr" scoped="" ref="0xb72052b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7204790" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7204790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7204968"/>
        <function-ref name="isInput" scoped="" ref="0xb7204a48"/>
        <function-ref name="toggle" scoped="" ref="0xb7204b28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7204c08"/>
        <function-ref name="get" scoped="" ref="0xb7204ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7204dc8"/>
        <function-ref name="set" scoped="" ref="0xb7204ea8"/>
        <function-ref name="clr" scoped="" ref="0xb7203010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb72076f8" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb72076f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72078d0"/>
        <function-ref name="isInput" scoped="" ref="0xb72079b0"/>
        <function-ref name="toggle" scoped="" ref="0xb7207a90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7207b70"/>
        <function-ref name="get" scoped="" ref="0xb7207c50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7207d30"/>
        <function-ref name="set" scoped="" ref="0xb7207e10"/>
        <function-ref name="clr" scoped="" ref="0xb7207ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7205410" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7205410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb72055e8"/>
        <function-ref name="isInput" scoped="" ref="0xb72056c8"/>
        <function-ref name="toggle" scoped="" ref="0xb72057a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7205888"/>
        <function-ref name="get" scoped="" ref="0xb7205968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7205a48"/>
        <function-ref name="set" scoped="" ref="0xb7205b28"/>
        <function-ref name="clr" scoped="" ref="0xb7205c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7203170" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7203170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7203348"/>
        <function-ref name="isInput" scoped="" ref="0xb7203428"/>
        <function-ref name="toggle" scoped="" ref="0xb7203508"/>
        <function-ref name="isOutput" scoped="" ref="0xb72035e8"/>
        <function-ref name="get" scoped="" ref="0xb72036c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72037a8"/>
        <function-ref name="set" scoped="" ref="0xb7203888"/>
        <function-ref name="clr" scoped="" ref="0xb7203968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7206090" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7206090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7206268"/>
        <function-ref name="isInput" scoped="" ref="0xb7206348"/>
        <function-ref name="toggle" scoped="" ref="0xb7206428"/>
        <function-ref name="isOutput" scoped="" ref="0xb7206508"/>
        <function-ref name="get" scoped="" ref="0xb72065e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72066c8"/>
        <function-ref name="set" scoped="" ref="0xb72067a8"/>
        <function-ref name="clr" scoped="" ref="0xb7206888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7205d68" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7205d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7204010"/>
        <function-ref name="isInput" scoped="" ref="0xb72040f0"/>
        <function-ref name="toggle" scoped="" ref="0xb72041d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb72042b0"/>
        <function-ref name="get" scoped="" ref="0xb7204390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7204470"/>
        <function-ref name="set" scoped="" ref="0xb7204550"/>
        <function-ref name="clr" scoped="" ref="0xb7204630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7203ac8" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7203ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7203ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7203d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7203e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7201010"/>
        <function-ref name="get" scoped="" ref="0xb72010f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb72011d0"/>
        <function-ref name="set" scoped="" ref="0xb72012b0"/>
        <function-ref name="clr" scoped="" ref="0xb7201390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6474538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6474538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6474710"/>
        <function-ref name="isInput" scoped="" ref="0xb64747f0"/>
        <function-ref name="toggle" scoped="" ref="0xb64748d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb64749b0"/>
        <function-ref name="get" scoped="" ref="0xb6474a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6474b70"/>
        <function-ref name="set" scoped="" ref="0xb6474c50"/>
        <function-ref name="clr" scoped="" ref="0xb6474d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6472010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6472010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64721e8"/>
        <function-ref name="isInput" scoped="" ref="0xb64722c8"/>
        <function-ref name="toggle" scoped="" ref="0xb64723a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6472488"/>
        <function-ref name="get" scoped="" ref="0xb6472568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6472648"/>
        <function-ref name="set" scoped="" ref="0xb6472728"/>
        <function-ref name="clr" scoped="" ref="0xb6472808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64709e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64709e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6470bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb6470ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb6470d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb6470e60"/>
        <function-ref name="get" scoped="" ref="0xb646f010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb646f0f0"/>
        <function-ref name="set" scoped="" ref="0xb646f1d0"/>
        <function-ref name="clr" scoped="" ref="0xb646f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb646e538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb646e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb646e710"/>
        <function-ref name="isInput" scoped="" ref="0xb646e7f0"/>
        <function-ref name="toggle" scoped="" ref="0xb646e8d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb646e9b0"/>
        <function-ref name="get" scoped="" ref="0xb646ea90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb646eb70"/>
        <function-ref name="set" scoped="" ref="0xb646ec50"/>
        <function-ref name="clr" scoped="" ref="0xb646ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb646c010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb646c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb646c1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb646c2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb646c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb646c488"/>
        <function-ref name="get" scoped="" ref="0xb646c568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb646c648"/>
        <function-ref name="set" scoped="" ref="0xb646c728"/>
        <function-ref name="clr" scoped="" ref="0xb646c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb646b9e8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb646b9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb646bbc0"/>
        <function-ref name="isInput" scoped="" ref="0xb646bca0"/>
        <function-ref name="toggle" scoped="" ref="0xb646bd80"/>
        <function-ref name="isOutput" scoped="" ref="0xb646be60"/>
        <function-ref name="get" scoped="" ref="0xb646a010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb646a0f0"/>
        <function-ref name="set" scoped="" ref="0xb646a1d0"/>
        <function-ref name="clr" scoped="" ref="0xb646a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6469538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6469538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6469710"/>
        <function-ref name="isInput" scoped="" ref="0xb64697f0"/>
        <function-ref name="toggle" scoped="" ref="0xb64698d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb64699b0"/>
        <function-ref name="get" scoped="" ref="0xb6469a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6469b70"/>
        <function-ref name="set" scoped="" ref="0xb6469c50"/>
        <function-ref name="clr" scoped="" ref="0xb6469d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6467010" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6467010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64671e8"/>
        <function-ref name="isInput" scoped="" ref="0xb64672c8"/>
        <function-ref name="toggle" scoped="" ref="0xb64673a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6467488"/>
        <function-ref name="get" scoped="" ref="0xb6467568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6467648"/>
        <function-ref name="set" scoped="" ref="0xb6467728"/>
        <function-ref name="clr" scoped="" ref="0xb6467808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb71fd410" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb71fd410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71fd5e8"/>
        <function-ref name="isInput" scoped="" ref="0xb71fd6c8"/>
        <function-ref name="toggle" scoped="" ref="0xb71fd7a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71fd888"/>
        <function-ref name="get" scoped="" ref="0xb71fd968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71fda48"/>
        <function-ref name="set" scoped="" ref="0xb71fdb28"/>
        <function-ref name="clr" scoped="" ref="0xb71fdc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb71fb170" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb71fb170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71fb348"/>
        <function-ref name="isInput" scoped="" ref="0xb71fb428"/>
        <function-ref name="toggle" scoped="" ref="0xb71fb508"/>
        <function-ref name="isOutput" scoped="" ref="0xb71fb5e8"/>
        <function-ref name="get" scoped="" ref="0xb71fb6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71fb7a8"/>
        <function-ref name="set" scoped="" ref="0xb71fb888"/>
        <function-ref name="clr" scoped="" ref="0xb71fb968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb71fe128" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb71fe128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71fe300"/>
        <function-ref name="isInput" scoped="" ref="0xb71fe3e0"/>
        <function-ref name="toggle" scoped="" ref="0xb71fe4c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71fe5a0"/>
        <function-ref name="get" scoped="" ref="0xb71fe680"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71fe760"/>
        <function-ref name="set" scoped="" ref="0xb71fe840"/>
        <function-ref name="clr" scoped="" ref="0xb71fe920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb71fdd68" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb71fdd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71fc010"/>
        <function-ref name="isInput" scoped="" ref="0xb71fc0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb71fc1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb71fc2b0"/>
        <function-ref name="get" scoped="" ref="0xb71fc390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71fc470"/>
        <function-ref name="set" scoped="" ref="0xb71fc550"/>
        <function-ref name="clr" scoped="" ref="0xb71fc630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb71fbac8" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb71fbac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71fbca0"/>
        <function-ref name="isInput" scoped="" ref="0xb71fbd80"/>
        <function-ref name="toggle" scoped="" ref="0xb71fbe60"/>
        <function-ref name="isOutput" scoped="" ref="0xb71fa010"/>
        <function-ref name="get" scoped="" ref="0xb71fa0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71fa1d0"/>
        <function-ref name="set" scoped="" ref="0xb71fa2b0"/>
        <function-ref name="clr" scoped="" ref="0xb71fa390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb71fea80" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb71fea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71fec58"/>
        <function-ref name="isInput" scoped="" ref="0xb71fed38"/>
        <function-ref name="toggle" scoped="" ref="0xb71fee18"/>
        <function-ref name="isOutput" scoped="" ref="0xb71feef8"/>
        <function-ref name="get" scoped="" ref="0xb71fd010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71fd0f0"/>
        <function-ref name="set" scoped="" ref="0xb71fd1d0"/>
        <function-ref name="clr" scoped="" ref="0xb71fd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb71fc790" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb71fc790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71fc968"/>
        <function-ref name="isInput" scoped="" ref="0xb71fca48"/>
        <function-ref name="toggle" scoped="" ref="0xb71fcb28"/>
        <function-ref name="isOutput" scoped="" ref="0xb71fcc08"/>
        <function-ref name="get" scoped="" ref="0xb71fcce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71fcdc8"/>
        <function-ref name="set" scoped="" ref="0xb71fcea8"/>
        <function-ref name="clr" scoped="" ref="0xb71fb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb71fa4f0" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb71fa4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71fa6c8"/>
        <function-ref name="isInput" scoped="" ref="0xb71fa7a8"/>
        <function-ref name="toggle" scoped="" ref="0xb71fa888"/>
        <function-ref name="isOutput" scoped="" ref="0xb71fa968"/>
        <function-ref name="get" scoped="" ref="0xb71faa48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71fab28"/>
        <function-ref name="set" scoped="" ref="0xb71fac08"/>
        <function-ref name="clr" scoped="" ref="0xb71face8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb643b418" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb643b418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb643b5f0"/>
        <function-ref name="isInput" scoped="" ref="0xb643b6d0"/>
        <function-ref name="toggle" scoped="" ref="0xb643b7b0"/>
        <function-ref name="isOutput" scoped="" ref="0xb643b890"/>
        <function-ref name="get" scoped="" ref="0xb643b970"/>
        <function-ref name="makeOutput" scoped="" ref="0xb643ba50"/>
        <function-ref name="set" scoped="" ref="0xb643bb30"/>
        <function-ref name="clr" scoped="" ref="0xb643bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb643ade0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb643ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6439010"/>
        <function-ref name="isInput" scoped="" ref="0xb64390f0"/>
        <function-ref name="toggle" scoped="" ref="0xb64391d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb64392b0"/>
        <function-ref name="get" scoped="" ref="0xb6439390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6439470"/>
        <function-ref name="set" scoped="" ref="0xb6439550"/>
        <function-ref name="clr" scoped="" ref="0xb6439630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64387f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64387f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64389d0"/>
        <function-ref name="isInput" scoped="" ref="0xb6438ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb6438b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb6438c70"/>
        <function-ref name="get" scoped="" ref="0xb6438d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6438e30"/>
        <function-ref name="set" scoped="" ref="0xb6438f10"/>
        <function-ref name="clr" scoped="" ref="0xb6437010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6436228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6436228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6436400"/>
        <function-ref name="isInput" scoped="" ref="0xb64364e0"/>
        <function-ref name="toggle" scoped="" ref="0xb64365c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb64366a0"/>
        <function-ref name="get" scoped="" ref="0xb6436780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6436860"/>
        <function-ref name="set" scoped="" ref="0xb6436940"/>
        <function-ref name="clr" scoped="" ref="0xb6436a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6435c08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6435c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6435de0"/>
        <function-ref name="isInput" scoped="" ref="0xb6435ec0"/>
        <function-ref name="toggle" scoped="" ref="0xb6434010"/>
        <function-ref name="isOutput" scoped="" ref="0xb64340f0"/>
        <function-ref name="get" scoped="" ref="0xb64341d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64342b0"/>
        <function-ref name="set" scoped="" ref="0xb6434390"/>
        <function-ref name="clr" scoped="" ref="0xb6434470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64336c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64336c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6433898"/>
        <function-ref name="isInput" scoped="" ref="0xb6433978"/>
        <function-ref name="toggle" scoped="" ref="0xb6433a58"/>
        <function-ref name="isOutput" scoped="" ref="0xb6433b38"/>
        <function-ref name="get" scoped="" ref="0xb6433c18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6433cf8"/>
        <function-ref name="set" scoped="" ref="0xb6433dd8"/>
        <function-ref name="clr" scoped="" ref="0xb6433eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64310b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64310b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6431288"/>
        <function-ref name="isInput" scoped="" ref="0xb6431368"/>
        <function-ref name="toggle" scoped="" ref="0xb6431448"/>
        <function-ref name="isOutput" scoped="" ref="0xb6431528"/>
        <function-ref name="get" scoped="" ref="0xb6431608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb64316e8"/>
        <function-ref name="set" scoped="" ref="0xb64317c8"/>
        <function-ref name="clr" scoped="" ref="0xb64318a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6430a88" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6430a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6430c60"/>
        <function-ref name="isInput" scoped="" ref="0xb6430d40"/>
        <function-ref name="toggle" scoped="" ref="0xb6430e20"/>
        <function-ref name="isOutput" scoped="" ref="0xb6430f00"/>
        <function-ref name="get" scoped="" ref="0xb642f010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb642f0f0"/>
        <function-ref name="set" scoped="" ref="0xb642f1d0"/>
        <function-ref name="clr" scoped="" ref="0xb642f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb71f5e48" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb71f5e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71f4050"/>
        <function-ref name="isInput" scoped="" ref="0xb71f4130"/>
        <function-ref name="toggle" scoped="" ref="0xb71f4210"/>
        <function-ref name="isOutput" scoped="" ref="0xb71f42f0"/>
        <function-ref name="get" scoped="" ref="0xb71f43d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71f44b0"/>
        <function-ref name="set" scoped="" ref="0xb71f4590"/>
        <function-ref name="clr" scoped="" ref="0xb71f4670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb71f3ac8" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb71f3ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71f3ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb71f3d80"/>
        <function-ref name="toggle" scoped="" ref="0xb71f3e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb71f2010"/>
        <function-ref name="get" scoped="" ref="0xb71f20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71f21d0"/>
        <function-ref name="set" scoped="" ref="0xb71f22b0"/>
        <function-ref name="clr" scoped="" ref="0xb71f2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb71f6b00" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb71f6b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71f6cd8"/>
        <function-ref name="isInput" scoped="" ref="0xb71f6db8"/>
        <function-ref name="toggle" scoped="" ref="0xb71f6e98"/>
        <function-ref name="isOutput" scoped="" ref="0xb71f5010"/>
        <function-ref name="get" scoped="" ref="0xb71f50f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71f51d0"/>
        <function-ref name="set" scoped="" ref="0xb71f52b0"/>
        <function-ref name="clr" scoped="" ref="0xb71f5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb71f47d0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb71f47d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71f49a8"/>
        <function-ref name="isInput" scoped="" ref="0xb71f4a88"/>
        <function-ref name="toggle" scoped="" ref="0xb71f4b68"/>
        <function-ref name="isOutput" scoped="" ref="0xb71f4c48"/>
        <function-ref name="get" scoped="" ref="0xb71f4d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71f4e08"/>
        <function-ref name="set" scoped="" ref="0xb71f4ee8"/>
        <function-ref name="clr" scoped="" ref="0xb71f3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb71f24f0" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb71f24f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71f26c8"/>
        <function-ref name="isInput" scoped="" ref="0xb71f27a8"/>
        <function-ref name="toggle" scoped="" ref="0xb71f2888"/>
        <function-ref name="isOutput" scoped="" ref="0xb71f2968"/>
        <function-ref name="get" scoped="" ref="0xb71f2a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71f2b28"/>
        <function-ref name="set" scoped="" ref="0xb71f2c08"/>
        <function-ref name="clr" scoped="" ref="0xb71f2ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb71f54f0" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb71f54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71f56c8"/>
        <function-ref name="isInput" scoped="" ref="0xb71f57a8"/>
        <function-ref name="toggle" scoped="" ref="0xb71f5888"/>
        <function-ref name="isOutput" scoped="" ref="0xb71f5968"/>
        <function-ref name="get" scoped="" ref="0xb71f5a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71f5b28"/>
        <function-ref name="set" scoped="" ref="0xb71f5c08"/>
        <function-ref name="clr" scoped="" ref="0xb71f5ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb71f3170" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb71f3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71f3348"/>
        <function-ref name="isInput" scoped="" ref="0xb71f3428"/>
        <function-ref name="toggle" scoped="" ref="0xb71f3508"/>
        <function-ref name="isOutput" scoped="" ref="0xb71f35e8"/>
        <function-ref name="get" scoped="" ref="0xb71f36c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71f37a8"/>
        <function-ref name="set" scoped="" ref="0xb71f3888"/>
        <function-ref name="clr" scoped="" ref="0xb71f3968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb71f2e48" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb71f2e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71f1050"/>
        <function-ref name="isInput" scoped="" ref="0xb71f1130"/>
        <function-ref name="toggle" scoped="" ref="0xb71f1210"/>
        <function-ref name="isOutput" scoped="" ref="0xb71f12f0"/>
        <function-ref name="get" scoped="" ref="0xb71f13d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71f14b0"/>
        <function-ref name="set" scoped="" ref="0xb71f1590"/>
        <function-ref name="clr" scoped="" ref="0xb71f1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb6407de8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb6407de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6402010"/>
        <function-ref name="isInput" scoped="" ref="0xb64020f0"/>
        <function-ref name="toggle" scoped="" ref="0xb64021d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb64022b0"/>
        <function-ref name="get" scoped="" ref="0xb6402390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6402470"/>
        <function-ref name="set" scoped="" ref="0xb6402550"/>
        <function-ref name="clr" scoped="" ref="0xb6402630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb64017f8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb64017f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb64019d0"/>
        <function-ref name="isInput" scoped="" ref="0xb6401ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb6401b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb6401c70"/>
        <function-ref name="get" scoped="" ref="0xb6401d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6401e30"/>
        <function-ref name="set" scoped="" ref="0xb6401f10"/>
        <function-ref name="clr" scoped="" ref="0xb6400010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb63ff228" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb63ff228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb63ff400"/>
        <function-ref name="isInput" scoped="" ref="0xb63ff4e0"/>
        <function-ref name="toggle" scoped="" ref="0xb63ff5c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb63ff6a0"/>
        <function-ref name="get" scoped="" ref="0xb63ff780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb63ff860"/>
        <function-ref name="set" scoped="" ref="0xb63ff940"/>
        <function-ref name="clr" scoped="" ref="0xb63ffa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb63fec08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb63fec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb63fede0"/>
        <function-ref name="isInput" scoped="" ref="0xb63feec0"/>
        <function-ref name="toggle" scoped="" ref="0xb63fd010"/>
        <function-ref name="isOutput" scoped="" ref="0xb63fd0f0"/>
        <function-ref name="get" scoped="" ref="0xb63fd1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb63fd2b0"/>
        <function-ref name="set" scoped="" ref="0xb63fd390"/>
        <function-ref name="clr" scoped="" ref="0xb63fd470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb63fc6c0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb63fc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb63fc898"/>
        <function-ref name="isInput" scoped="" ref="0xb63fc978"/>
        <function-ref name="toggle" scoped="" ref="0xb63fca58"/>
        <function-ref name="isOutput" scoped="" ref="0xb63fcb38"/>
        <function-ref name="get" scoped="" ref="0xb63fcc18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb63fccf8"/>
        <function-ref name="set" scoped="" ref="0xb63fcdd8"/>
        <function-ref name="clr" scoped="" ref="0xb63fceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb63fa0b0" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb63fa0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb63fa288"/>
        <function-ref name="isInput" scoped="" ref="0xb63fa368"/>
        <function-ref name="toggle" scoped="" ref="0xb63fa448"/>
        <function-ref name="isOutput" scoped="" ref="0xb63fa528"/>
        <function-ref name="get" scoped="" ref="0xb63fa608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb63fa6e8"/>
        <function-ref name="set" scoped="" ref="0xb63fa7c8"/>
        <function-ref name="clr" scoped="" ref="0xb63fa8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb63f9a88" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb63f9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb63f9c60"/>
        <function-ref name="isInput" scoped="" ref="0xb63f9d40"/>
        <function-ref name="toggle" scoped="" ref="0xb63f9e20"/>
        <function-ref name="isOutput" scoped="" ref="0xb63f9f00"/>
        <function-ref name="get" scoped="" ref="0xb63f8010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb63f80f0"/>
        <function-ref name="set" scoped="" ref="0xb63f81d0"/>
        <function-ref name="clr" scoped="" ref="0xb63f82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb63f7538" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb63f7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb63f7710"/>
        <function-ref name="isInput" scoped="" ref="0xb63f77f0"/>
        <function-ref name="toggle" scoped="" ref="0xb63f78d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb63f79b0"/>
        <function-ref name="get" scoped="" ref="0xb63f7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0xb63f7b70"/>
        <function-ref name="set" scoped="" ref="0xb63f7c50"/>
        <function-ref name="clr" scoped="" ref="0xb63f7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71ed010" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71ed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71ed1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb71ed2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb71ed3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71ed488"/>
        <function-ref name="get" scoped="" ref="0xb71ed568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71ed648"/>
        <function-ref name="set" scoped="" ref="0xb71ed728"/>
        <function-ref name="clr" scoped="" ref="0xb71ed808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71de7b8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71de7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71de990"/>
        <function-ref name="isInput" scoped="" ref="0xb71dea70"/>
        <function-ref name="toggle" scoped="" ref="0xb71deb50"/>
        <function-ref name="isOutput" scoped="" ref="0xb71dec30"/>
        <function-ref name="get" scoped="" ref="0xb71ded10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71dedf0"/>
        <function-ref name="set" scoped="" ref="0xb71deed0"/>
        <function-ref name="clr" scoped="" ref="0xb71dd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71db010" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71db010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71db1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb71db2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb71db3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71db488"/>
        <function-ref name="get" scoped="" ref="0xb71db568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71db648"/>
        <function-ref name="set" scoped="" ref="0xb71db728"/>
        <function-ref name="clr" scoped="" ref="0xb71db808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71d97b8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71d97b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71d9990"/>
        <function-ref name="isInput" scoped="" ref="0xb71d9a70"/>
        <function-ref name="toggle" scoped="" ref="0xb71d9b50"/>
        <function-ref name="isOutput" scoped="" ref="0xb71d9c30"/>
        <function-ref name="get" scoped="" ref="0xb71d9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71d9df0"/>
        <function-ref name="set" scoped="" ref="0xb71d9ed0"/>
        <function-ref name="clr" scoped="" ref="0xb71d8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71d5010" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71d5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71d51e8"/>
        <function-ref name="isInput" scoped="" ref="0xb71d52c8"/>
        <function-ref name="toggle" scoped="" ref="0xb71d53a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71d5488"/>
        <function-ref name="get" scoped="" ref="0xb71d5568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71d5648"/>
        <function-ref name="set" scoped="" ref="0xb71d5728"/>
        <function-ref name="clr" scoped="" ref="0xb71d5808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71d37b8" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71d37b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71d3990"/>
        <function-ref name="isInput" scoped="" ref="0xb71d3a70"/>
        <function-ref name="toggle" scoped="" ref="0xb71d3b50"/>
        <function-ref name="isOutput" scoped="" ref="0xb71d3c30"/>
        <function-ref name="get" scoped="" ref="0xb71d3d10"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71d3df0"/>
        <function-ref name="set" scoped="" ref="0xb71d3ed0"/>
        <function-ref name="clr" scoped="" ref="0xb71d2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71d0080" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71d0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71d0258"/>
        <function-ref name="isInput" scoped="" ref="0xb71d0338"/>
        <function-ref name="toggle" scoped="" ref="0xb71d0418"/>
        <function-ref name="isOutput" scoped="" ref="0xb71d04f8"/>
        <function-ref name="get" scoped="" ref="0xb71d05d8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71d06b8"/>
        <function-ref name="set" scoped="" ref="0xb71d0798"/>
        <function-ref name="clr" scoped="" ref="0xb71d0878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71cd840" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71cd840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71cda18"/>
        <function-ref name="isInput" scoped="" ref="0xb71cdaf8"/>
        <function-ref name="toggle" scoped="" ref="0xb71cdbd8"/>
        <function-ref name="isOutput" scoped="" ref="0xb71cdcb8"/>
        <function-ref name="get" scoped="" ref="0xb71cdd98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71cde78"/>
        <function-ref name="set" scoped="" ref="0xb71cc010"/>
        <function-ref name="clr" scoped="" ref="0xb71cc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71ca0b0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71ca0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71ca288"/>
        <function-ref name="isInput" scoped="" ref="0xb71ca368"/>
        <function-ref name="toggle" scoped="" ref="0xb71ca448"/>
        <function-ref name="isOutput" scoped="" ref="0xb71ca528"/>
        <function-ref name="get" scoped="" ref="0xb71ca608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71ca6e8"/>
        <function-ref name="set" scoped="" ref="0xb71ca7c8"/>
        <function-ref name="clr" scoped="" ref="0xb71ca8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71c7880" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71c7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71c7a58"/>
        <function-ref name="isInput" scoped="" ref="0xb71c7b38"/>
        <function-ref name="toggle" scoped="" ref="0xb71c7c18"/>
        <function-ref name="isOutput" scoped="" ref="0xb71c7cf8"/>
        <function-ref name="get" scoped="" ref="0xb71c7dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71c7eb8"/>
        <function-ref name="set" scoped="" ref="0xb71c6010"/>
        <function-ref name="clr" scoped="" ref="0xb71c60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71c40b0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71c40b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71c4288"/>
        <function-ref name="isInput" scoped="" ref="0xb71c4368"/>
        <function-ref name="toggle" scoped="" ref="0xb71c4448"/>
        <function-ref name="isOutput" scoped="" ref="0xb71c4528"/>
        <function-ref name="get" scoped="" ref="0xb71c4608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71c46e8"/>
        <function-ref name="set" scoped="" ref="0xb71c47c8"/>
        <function-ref name="clr" scoped="" ref="0xb71c48a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71c2880" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71c2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71c2a58"/>
        <function-ref name="isInput" scoped="" ref="0xb71c2b38"/>
        <function-ref name="toggle" scoped="" ref="0xb71c2c18"/>
        <function-ref name="isOutput" scoped="" ref="0xb71c2cf8"/>
        <function-ref name="get" scoped="" ref="0xb71c2dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71c2eb8"/>
        <function-ref name="set" scoped="" ref="0xb71c1010"/>
        <function-ref name="clr" scoped="" ref="0xb71c10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71be0b0" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71be0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71be288"/>
        <function-ref name="isInput" scoped="" ref="0xb71be368"/>
        <function-ref name="toggle" scoped="" ref="0xb71be448"/>
        <function-ref name="isOutput" scoped="" ref="0xb71be528"/>
        <function-ref name="get" scoped="" ref="0xb71be608"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71be6e8"/>
        <function-ref name="set" scoped="" ref="0xb71be7c8"/>
        <function-ref name="clr" scoped="" ref="0xb71be8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb71bc880" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb71bc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb71bca58"/>
        <function-ref name="isInput" scoped="" ref="0xb71bcb38"/>
        <function-ref name="toggle" scoped="" ref="0xb71bcc18"/>
        <function-ref name="isOutput" scoped="" ref="0xb71bccf8"/>
        <function-ref name="get" scoped="" ref="0xb71bcdd8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb71bceb8"/>
        <function-ref name="set" scoped="" ref="0xb71bb010"/>
        <function-ref name="clr" scoped="" ref="0xb71bb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb719cbf8" loc="61:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb719cbf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb73d67d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb73d67d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb719cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb719b010" loc="62:/home/wsn/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb719b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb719b1e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb719b2c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb719b3a8"/>
        <function-ref name="actualMicro" scoped="" ref="0xb719b488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb719b568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb718a808" loc="60:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb718a808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb718a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb7282a28" loc="57:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7282a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7282c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0xb718a400" loc="59:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb718a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb718a5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0xb7282dc0" loc="58:/home/wsn/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7282dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb718a010"/>
        <function-ref name="taskLoop" scoped="" ref="0xb718a0f0"/>
        <function-ref name="runNextTask" scoped="" ref="0xb718a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb73b5d58" loc="48:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb73b5d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb73bc010"/>
        <function-ref name="runTask" scoped="" ref="0xb73bc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb73ba5f0" loc="47:/home/wsn/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb73ba5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb73ba7c8"/>
        <function-ref name="taskLoop" scoped="" ref="0xb73ba8a8"/>
        <function-ref name="runNextTask" scoped="" ref="0xb73ba988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb7340100" loc="56:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb7340100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb73402d8"/>
        <function-ref name="runTask" scoped="" ref="0xb73403b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0xb7340d68" loc="57:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb7340d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb733f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb73418a8" loc="55:/home/wsn/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb73418a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7341a80"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7341b60"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7341c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0xb732c218" loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb732c218"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb732c3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0xb73bb728" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb73bb728"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb73bb900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0xb732e420" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb732e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb732e5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb7281e78" loc="46:/home/wsn/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7281e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb71a2070"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb71a2150"/>
        <function-ref name="led1On" scoped="" ref="0xb71a2230"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb71a2310"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb71a23f0"/>
        <function-ref name="get" scoped="" ref="0xb71a24d0"/>
        <function-ref name="led1Off" scoped="" ref="0xb71a25b0"/>
        <function-ref name="led2Off" scoped="" ref="0xb71a2930"/>
        <function-ref name="set" scoped="" ref="0xb71a2690"/>
        <function-ref name="led0On" scoped="" ref="0xb71a2770"/>
        <function-ref name="led2On" scoped="" ref="0xb71a2850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0xb717f240" loc="50:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb717f240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb717f418"/>
        <function-ref name="isInput" scoped="" ref="0xb717f4f8"/>
        <function-ref name="toggle" scoped="" ref="0xb717f5d8"/>
        <function-ref name="isOutput" scoped="" ref="0xb717f6b8"/>
        <function-ref name="get" scoped="" ref="0xb717f798"/>
        <function-ref name="makeOutput" scoped="" ref="0xb717f878"/>
        <function-ref name="set" scoped="" ref="0xb717f958"/>
        <function-ref name="clr" scoped="" ref="0xb717fa38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb71801d8" loc="46:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb71801d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb71803b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0xb717fc28" loc="51:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb717fc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb717fe00"/>
        <function-ref name="isInput" scoped="" ref="0xb717fee0"/>
        <function-ref name="toggle" scoped="" ref="0xb717e010"/>
        <function-ref name="isOutput" scoped="" ref="0xb717e0f0"/>
        <function-ref name="get" scoped="" ref="0xb717e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb717e2b0"/>
        <function-ref name="set" scoped="" ref="0xb717e390"/>
        <function-ref name="clr" scoped="" ref="0xb717e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb7180520" loc="47:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7180520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb71806f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb71807d8"/>
        <function-ref name="led1On" scoped="" ref="0xb71808b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7180998"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7180a78"/>
        <function-ref name="get" scoped="" ref="0xb7180b58"/>
        <function-ref name="led1Off" scoped="" ref="0xb7180c38"/>
        <function-ref name="led2Off" scoped="" ref="0xb717f010"/>
        <function-ref name="set" scoped="" ref="0xb7180d18"/>
        <function-ref name="led0On" scoped="" ref="0xb7180df8"/>
        <function-ref name="led2On" scoped="" ref="0xb7180ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0xb717e660" loc="52:/home/wsn/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb717e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb717e838"/>
        <function-ref name="isInput" scoped="" ref="0xb717e918"/>
        <function-ref name="toggle" scoped="" ref="0xb717e9f8"/>
        <function-ref name="isOutput" scoped="" ref="0xb717ead8"/>
        <function-ref name="get" scoped="" ref="0xb717ebb8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb717ec98"/>
        <function-ref name="set" scoped="" ref="0xb717ed78"/>
        <function-ref name="clr" scoped="" ref="0xb717ee58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0xb716ea70" loc="44:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb716ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb716ec48"/>
        <function-ref name="isInput" scoped="" ref="0xb716ed28"/>
        <function-ref name="toggle" scoped="" ref="0xb716ee08"/>
        <function-ref name="isOutput" scoped="" ref="0xb716eee8"/>
        <function-ref name="get" scoped="" ref="0xb716d010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb716d0f0"/>
        <function-ref name="set" scoped="" ref="0xb716d1d0"/>
        <function-ref name="clr" scoped="" ref="0xb716d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0xb716d4c0" loc="45:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb716d4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb716d698"/>
        <function-ref name="isInput" scoped="" ref="0xb716d778"/>
        <function-ref name="toggle" scoped="" ref="0xb716d858"/>
        <function-ref name="isOutput" scoped="" ref="0xb716d938"/>
        <function-ref name="get" scoped="" ref="0xb716da18"/>
        <function-ref name="makeOutput" scoped="" ref="0xb716daf8"/>
        <function-ref name="set" scoped="" ref="0xb716dbd8"/>
        <function-ref name="clr" scoped="" ref="0xb716dcb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0xb716c870" loc="47:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb716c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb716ca48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0xb716dec8" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb716dec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb716c0c0"/>
        <function-ref name="isInput" scoped="" ref="0xb716c1a0"/>
        <function-ref name="toggle" scoped="" ref="0xb716c280"/>
        <function-ref name="isOutput" scoped="" ref="0xb716c360"/>
        <function-ref name="get" scoped="" ref="0xb716c440"/>
        <function-ref name="makeOutput" scoped="" ref="0xb716c520"/>
        <function-ref name="set" scoped="" ref="0xb716c600"/>
        <function-ref name="clr" scoped="" ref="0xb716c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7285958" loc="41:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7285958"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7285b30"/>
        <function-ref name="stopDone" scoped="" ref="0xb7285c10"/>
        <function-ref name="start" scoped="" ref="0xb7285cf0"/>
        <function-ref name="stop" scoped="" ref="0xb7285dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb715db18" loc="46:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb715db18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb715dcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb715aaf0" loc="48:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb715aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb715acc8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb715ada8"/>
        <function-ref name="getPayload" scoped="" ref="0xb715ae88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7160010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb71600f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7161388" loc="43:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7161388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7161560"/>
        <function-ref name="getPayload" scoped="" ref="0xb7161640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7161720"/>
        <function-ref name="cancel" scoped="" ref="0xb7161800"/>
        <function-ref name="sendDone" scoped="" ref="0xb71618e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb71663f8" loc="45:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb71663f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb71665d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb7146830" loc="52:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb7146830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb7146a08"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb7146ae8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb7146bc8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb7146ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7161d48" loc="44:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7161d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7161f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb714ab10" loc="51:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb714ab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb714ace8"/>
        <function-ref name="noAck" scoped="" ref="0xb714adc8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb714aea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb71401b8" loc="53:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb71401b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb7140390"/>
        <function-ref name="setRetries" scoped="" ref="0xb7140470"/>
        <function-ref name="getRetries" scoped="" ref="0xb7140550"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb7140630"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb7140710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb714e990" loc="49:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb714e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb714eb68"/>
        <function-ref name="source" scoped="" ref="0xb714ec48"/>
        <function-ref name="address" scoped="" ref="0xb714ed28"/>
        <function-ref name="destination" scoped="" ref="0xb714ee08"/>
        <function-ref name="setSource" scoped="" ref="0xb714eee8"/>
        <function-ref name="setDestination" scoped="" ref="0xb715f010"/>
        <function-ref name="type" scoped="" ref="0xb715f0f0"/>
        <function-ref name="setType" scoped="" ref="0xb715f1d0"/>
        <function-ref name="isForMe" scoped="" ref="0xb715f2b0"/>
        <function-ref name="setGroup" scoped="" ref="0xb715f390"/>
        <function-ref name="localGroup" scoped="" ref="0xb715f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb7141b10" loc="54:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb7141b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb7141ce8"/>
        <function-ref name="setChannel" scoped="" ref="0xb7141dc8"/>
        <function-ref name="getChannel" scoped="" ref="0xb7141ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0xb713a4a0" loc="56:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xb713a4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb736b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb713f010"/>
        <function-ref name="clear" scoped="" ref="0xb713f3c0"/>
        <function-ref name="isValid" scoped="" ref="0xb713abf0"/>
        <function-ref name="set" scoped="" ref="0xb713f770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb713fea8" loc="57:/home/wsn/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb713fea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb713bab0"/>
        <function-ref name="clear" scoped="" ref="0xb713be60"/>
        <function-ref name="isValid" scoped="" ref="0xb713b700"/>
        <function-ref name="set" scoped="" ref="0xb7139230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7139ca8" loc="45:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7139ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7139e80"/>
        <function-ref name="stopDone" scoped="" ref="0xb7135010"/>
        <function-ref name="start" scoped="" ref="0xb71350f0"/>
        <function-ref name="stop" scoped="" ref="0xb71351d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb71294d8" loc="66:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb71294d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb71280b8"/>
        <function-ref name="get" scoped="" ref="0xb7129de0"/>
        <function-ref name="isSet" scoped="" ref="0xb7129b20"/>
        <function-ref name="set" scoped="" ref="0xb7128378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb7121130" loc="71:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7121130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7121c30"/>
        <function-ref name="clear" scoped="" ref="0xb7120010"/>
        <function-ref name="isValid" scoped="" ref="0xb7121880"/>
        <function-ref name="set" scoped="" ref="0xb71203c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb7134d20" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb7134d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb7134ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7133e70" loc="56:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7133e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7132070"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7132150"/>
        <function-ref name="getPayload" scoped="" ref="0xb7132230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7132310"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb71323f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7135630" loc="47:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7135630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7135808"/>
        <function-ref name="getPayload" scoped="" ref="0xb71358e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71359c8"/>
        <function-ref name="cancel" scoped="" ref="0xb7135aa8"/>
        <function-ref name="sendDone" scoped="" ref="0xb7135b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb71346a8" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb71346a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7134880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb712e0f0" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb712e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb712ecb8"/>
        <function-ref name="get" scoped="" ref="0xb712e9f8"/>
        <function-ref name="isSet" scoped="" ref="0xb712e738"/>
        <function-ref name="set" scoped="" ref="0xb7129010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb7131898" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb7131898"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb7131a70"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb7131b50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb7131c30"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb7131d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7134010" loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7134010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb71341e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb7126750" loc="70:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7126750"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72cfd68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7125280"/>
        <function-ref name="clear" scoped="" ref="0xb7125630"/>
        <function-ref name="isValid" scoped="" ref="0xb7126ea0"/>
        <function-ref name="set" scoped="" ref="0xb71259e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb7123ba0" loc="69:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb7123ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72cfd68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7126200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb712bc68" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb712bc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb712f868"/>
        <function-ref name="get" scoped="" ref="0xb712f5a8"/>
        <function-ref name="isSet" scoped="" ref="0xb712f2e8"/>
        <function-ref name="set" scoped="" ref="0xb712fb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb7131310" loc="59:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7131310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb71314e8"/>
        <function-ref name="noAck" scoped="" ref="0xb71315c8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb71316a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb7133438" loc="53:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb7133438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7133610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb7131eb8" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb7131eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb71300c0"/>
        <function-ref name="setRetries" scoped="" ref="0xb71301a0"/>
        <function-ref name="getRetries" scoped="" ref="0xb7130280"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb7130360"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb7130440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7132588" loc="57:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7132588"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7132760"/>
        <function-ref name="source" scoped="" ref="0xb7132840"/>
        <function-ref name="address" scoped="" ref="0xb7132920"/>
        <function-ref name="destination" scoped="" ref="0xb7132a00"/>
        <function-ref name="setSource" scoped="" ref="0xb7132ae0"/>
        <function-ref name="setDestination" scoped="" ref="0xb7132bc0"/>
        <function-ref name="type" scoped="" ref="0xb7132ca0"/>
        <function-ref name="setType" scoped="" ref="0xb7132d80"/>
        <function-ref name="isForMe" scoped="" ref="0xb7132e60"/>
        <function-ref name="setGroup" scoped="" ref="0xb7131010"/>
        <function-ref name="localGroup" scoped="" ref="0xb71310f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb7130600" loc="62:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb7130600"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb7130858"/>
        <function-ref name="setChannel" scoped="" ref="0xb7130938"/>
        <function-ref name="getChannel" scoped="" ref="0xb7130a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb7124638" loc="67:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb7124638"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb7124810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb7133b18" loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb7133b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7133cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7120d78" loc="41:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7120d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb711d010"/>
        <function-ref name="stopDone" scoped="" ref="0xb711d0f0"/>
        <function-ref name="start" scoped="" ref="0xb711d1d0"/>
        <function-ref name="stop" scoped="" ref="0xb711d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb7104010" loc="90:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb7104010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7104bd8"/>
        <function-ref name="get" scoped="" ref="0xb7104918"/>
        <function-ref name="isSet" scoped="" ref="0xb7104658"/>
        <function-ref name="set" scoped="" ref="0xb7104e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0xb7117198" loc="70:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0xb7117198"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb7117370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0xb710f8d8" loc="72:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0xb710f8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb710fb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb710fc10"/>
        <function-ref name="request" scoped="" ref="0xb710fcf0"/>
        <function-ref name="granted" scoped="" ref="0xb710fdd0"/>
        <function-ref name="isOwner" scoped="" ref="0xb710feb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb711ce10" loc="57:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb711ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb711a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb711d710" loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb711d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb711d8e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb711d9c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb711daa8"/>
        <function-ref name="cancel" scoped="" ref="0xb711db88"/>
        <function-ref name="sendDone" scoped="" ref="0xb711dc68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb711c798" loc="56:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb711c798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb711c970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb710aa20" loc="74:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb710aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xb710abf8"/>
        <function-ref name="address" scoped="" ref="0xb710acd8"/>
        <function-ref name="destination" scoped="" ref="0xb710adb8"/>
        <function-ref name="setSource" scoped="" ref="0xb710ae98"/>
        <function-ref name="setDestination" scoped="" ref="0xb7111010"/>
        <function-ref name="pan" scoped="" ref="0xb71110f0"/>
        <function-ref name="setPan" scoped="" ref="0xb71111d0"/>
        <function-ref name="isForMe" scoped="" ref="0xb71112b0"/>
        <function-ref name="localPan" scoped="" ref="0xb7111390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0xb7111618" loc="75:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0xb7111618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb71117f0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb71118d0"/>
        <function-ref name="getPayload" scoped="" ref="0xb71119b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7111a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7111b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb7107c80" loc="89:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb7107c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7106868"/>
        <function-ref name="get" scoped="" ref="0xb71065a8"/>
        <function-ref name="isSet" scoped="" ref="0xb71062e8"/>
        <function-ref name="set" scoped="" ref="0xb7106b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb710e3c0" loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb710e3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb710e598"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb710e678"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb710e758"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb710e838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0xb7119d28" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0xb7119d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7119f00"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7118010"/>
        <function-ref name="getPayload" scoped="" ref="0xb71180f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71181d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb71182b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb711c100" loc="55:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb711c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb711c2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb71023a0" loc="94:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb71023a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72cfd68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7101010"/>
        <function-ref name="clear" scoped="" ref="0xb71013c0"/>
        <function-ref name="isValid" scoped="" ref="0xb7102bf0"/>
        <function-ref name="set" scoped="" ref="0xb7101770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb7103770" loc="93:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb7103770"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72cfd68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7103db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb71098c0" loc="88:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb71098c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb71074a0"/>
        <function-ref name="get" scoped="" ref="0xb71071e0"/>
        <function-ref name="isSet" scoped="" ref="0xb7109f08"/>
        <function-ref name="set" scoped="" ref="0xb7107760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb7111d90" loc="78:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7111d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb710e010"/>
        <function-ref name="noAck" scoped="" ref="0xb710e0f0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb710e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xb7113558" loc="68:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xb7113558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7113730"/>
        <function-ref name="getPayload" scoped="" ref="0xb7113810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb71138f0"/>
        <function-ref name="cancel" scoped="" ref="0xb71139d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb7113ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb711a538" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb711a538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb711a710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb710e9e0" loc="80:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb710e9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb710ebb8"/>
        <function-ref name="setRetries" scoped="" ref="0xb710ec98"/>
        <function-ref name="getRetries" scoped="" ref="0xb710ed78"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb710ee58"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb7109010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb71091d0" loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb71091d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb71093a8"/>
        <function-ref name="setChannel" scoped="" ref="0xb7109488"/>
        <function-ref name="getChannel" scoped="" ref="0xb7109568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7119010" loc="63:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7119010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb71191e8"/>
        <function-ref name="source" scoped="" ref="0xb71192c8"/>
        <function-ref name="address" scoped="" ref="0xb71193a8"/>
        <function-ref name="destination" scoped="" ref="0xb7119488"/>
        <function-ref name="setSource" scoped="" ref="0xb7119568"/>
        <function-ref name="setDestination" scoped="" ref="0xb7119648"/>
        <function-ref name="type" scoped="" ref="0xb7119728"/>
        <function-ref name="setType" scoped="" ref="0xb7119808"/>
        <function-ref name="isForMe" scoped="" ref="0xb71198e8"/>
        <function-ref name="setGroup" scoped="" ref="0xb71199c8"/>
        <function-ref name="localGroup" scoped="" ref="0xb7119aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb7101ea8" loc="95:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7101ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb70ff9c0"/>
        <function-ref name="clear" scoped="" ref="0xb70ffd70"/>
        <function-ref name="isValid" scoped="" ref="0xb70ff610"/>
        <function-ref name="set" scoped="" ref="0xb70fe150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xb7113ce8" loc="69:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xb7113ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7113ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb7103278" loc="91:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb7103278"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb7103450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb711ac18" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb711ac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb711adf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0xb70fd5c0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="RF230RadioC.TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb70fd5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb70fd798"/>
        <function-ref name="suspend" scoped="" ref="0xb70fd878"/>
        <function-ref name="resume" scoped="" ref="0xb70fd958"/>
        <function-ref name="run" scoped="" ref="0xb70fda38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0xb70e1010" loc="51:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0xb70e1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb70e11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0xb70e6b90" loc="47:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xb70e6b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0xb70e6d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0xb70d7068" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0xb70d7068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb70d7240"/>
        <function-ref name="checkFrame" scoped="" ref="0xb70d7320"/>
        <function-ref name="source" scoped="" ref="0xb70d7400"/>
        <function-ref name="destination" scoped="" ref="0xb70d74e0"/>
        <function-ref name="setSource" scoped="" ref="0xb70d75c0"/>
        <function-ref name="setDestination" scoped="" ref="0xb70d76a0"/>
        <function-ref name="setGroup" scoped="" ref="0xb70d7780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0xb70dd568" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0xb70dd568"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0xb70dd740"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0xb70dd820"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0xb70dd900"/>
        <function-ref name="getTransmitTime" scoped="" ref="0xb70dd9e0"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0xb70ddac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb70c7010" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb70c7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb70c71e8"/>
        <function-ref name="wait" scoped="" ref="0xb70c72c8"/>
        <function-ref name="cancel" scoped="" ref="0xb70c73a8"/>
        <function-ref name="isFree" scoped="" ref="0xb70c7488"/>
        <function-ref name="getNow" scoped="" ref="0xb70c7568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0xb70c0260" loc="62:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0xb70c0260"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb70c0438"/>
        <function-ref name="payloadLength" scoped="" ref="0xb70c0518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb70c05f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb70c06d8"/>
        <function-ref name="headerLength" scoped="" ref="0xb70c07b8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb70c0898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb70c0c28" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb70c0c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72cfd68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb70c67c0"/>
        <function-ref name="clear" scoped="" ref="0xb70c6b70"/>
        <function-ref name="isValid" scoped="" ref="0xb70c6410"/>
        <function-ref name="set" scoped="" ref="0xb70c6f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0xb70ec570" loc="43:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0xb70ec570"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb70ec748"/>
        <function-ref name="headerLength" scoped="" ref="0xb70ec828"/>
        <function-ref name="metadataLength" scoped="" ref="0xb70ec908"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xb70ec9e8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb70ecac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0xb70efe68" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0xb70efe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0xb70e6050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0xb70e77e8" loc="44:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb70e77e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb70e79c0"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb70e7aa0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb70e7b80"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb70e7c60"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb70e7d40"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb70e7e20"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb70e7f00"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb70f0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0xb70c8a38" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb70c8a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb70c8c10"/>
        <function-ref name="getDSN" scoped="" ref="0xb70c8cf0"/>
        <function-ref name="setFCF" scoped="" ref="0xb70c8dd0"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb70c8eb0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb70df010"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb70df0f0"/>
        <function-ref name="setDSN" scoped="" ref="0xb70df1d0"/>
        <function-ref name="createAckReply" scoped="" ref="0xb70df2b0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb70df390"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb70df470"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb70df550"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb70df630"/>
        <function-ref name="localAddr" scoped="" ref="0xb70df710"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb70df870"/>
        <function-ref name="localPan" scoped="" ref="0xb70df950"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb70dfa30"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb70dfb10"/>
        <function-ref name="setFramePending" scoped="" ref="0xb70dfbf0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb70dfcd0"/>
        <function-ref name="isForMe" scoped="" ref="0xb70dfdb0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb70dfe90"/>
        <function-ref name="getFCF" scoped="" ref="0xb70d6010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb70d60f0"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb70d61d0"/>
        <function-ref name="getFramePending" scoped="" ref="0xb70d62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0xb70e5f10" loc="45:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xb70e5f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb70ef108"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb70ef1e8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb70ef2c8"/>
        <function-ref name="getSender" scoped="" ref="0xb70ef3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0xb70e0c58" loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0xb70e0c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb70e0e30"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb70e0f10"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb70e3010"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb70e30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xb708d698" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb708d698"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb708d880"/>
        <function-ref name="wait" scoped="" ref="0xb708d960"/>
        <function-ref name="cancel" scoped="" ref="0xb708da40"/>
        <function-ref name="isFree" scoped="" ref="0xb708db20"/>
        <function-ref name="getNow" scoped="" ref="0xb708dc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb708c5d0" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb708c5d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb73d67d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb73d67d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72cfd68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb72cd048"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb706fab8"/>
        <function-ref name="fired" scoped="" ref="0xb706f288"/>
        <function-ref name="startAt" scoped="" ref="0xb706f778"/>
        <function-ref name="isRunning" scoped="" ref="0xb706f500"/>
        <function-ref name="getAlarm" scoped="" ref="0xb706fd30"/>
        <function-ref name="start" scoped="" ref="0xb708cd20"/>
        <function-ref name="stop" scoped="" ref="0xb706f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb708dd70" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb708dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb708c010"/>
        <function-ref name="suspend" scoped="" ref="0xb708c0f0"/>
        <function-ref name="resume" scoped="" ref="0xb708c1d0"/>
        <function-ref name="run" scoped="" ref="0xb708c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xb6371598" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6371598"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6371780"/>
        <function-ref name="wait" scoped="" ref="0xb6371860"/>
        <function-ref name="cancel" scoped="" ref="0xb6371940"/>
        <function-ref name="isFree" scoped="" ref="0xb6371a20"/>
        <function-ref name="getNow" scoped="" ref="0xb6371b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb6371d90" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6371d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72cfd68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb72cd048"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb636f268"/>
        <function-ref name="fired" scoped="" ref="0xb6370a20"/>
        <function-ref name="startAt" scoped="" ref="0xb6370f10"/>
        <function-ref name="isRunning" scoped="" ref="0xb6370c98"/>
        <function-ref name="getAlarm" scoped="" ref="0xb636f4e0"/>
        <function-ref name="start" scoped="" ref="0xb6370508"/>
        <function-ref name="stop" scoped="" ref="0xb63707a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb636f6f0" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb636f6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb636f8c8"/>
        <function-ref name="suspend" scoped="" ref="0xb636f9a8"/>
        <function-ref name="resume" scoped="" ref="0xb636fa88"/>
        <function-ref name="run" scoped="" ref="0xb636fb68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7006250" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7006250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7006428"/>
        <function-ref name="cancel" scoped="" ref="0xb7006508"/>
        <function-ref name="sendDone" scoped="" ref="0xb70065e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7006748" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7006748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7006920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb7008ef0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb7008ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb70070f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7009850" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7009850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7009a28"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7009b08"/>
        <function-ref name="getPayload" scoped="" ref="0xb7009be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7009cc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7009da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7008010" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7008010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb70081f8"/>
        <function-ref name="getPayload" scoped="" ref="0xb70082d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb70083b8"/>
        <function-ref name="cancel" scoped="" ref="0xb7008498"/>
        <function-ref name="sendDone" scoped="" ref="0xb7008578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb7008b30" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb7008b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7008d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb7007a40" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb7007a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7007c18"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7007cf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7007dd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7007eb8"/>
        <function-ref name="headerLength" scoped="" ref="0xb7006010"/>
        <function-ref name="metadataLength" scoped="" ref="0xb70060f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb7006a80" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb7006a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7006c58"/>
        <function-ref name="checkFrame" scoped="" ref="0xb7006d38"/>
        <function-ref name="source" scoped="" ref="0xb7006e18"/>
        <function-ref name="destination" scoped="" ref="0xb7006ef8"/>
        <function-ref name="setSource" scoped="" ref="0xb7004010"/>
        <function-ref name="setDestination" scoped="" ref="0xb70040f0"/>
        <function-ref name="setGroup" scoped="" ref="0xb70041d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7008750" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7008750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7008938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb70072e8" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb70072e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb70074d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb700ac28" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb700ac28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb700ae00"/>
        <function-ref name="source" scoped="" ref="0xb700aee0"/>
        <function-ref name="address" scoped="" ref="0xb7009010"/>
        <function-ref name="destination" scoped="" ref="0xb70090f0"/>
        <function-ref name="setSource" scoped="" ref="0xb70091d0"/>
        <function-ref name="setDestination" scoped="" ref="0xb70092b0"/>
        <function-ref name="type" scoped="" ref="0xb7009390"/>
        <function-ref name="setType" scoped="" ref="0xb7009470"/>
        <function-ref name="isForMe" scoped="" ref="0xb7009550"/>
        <function-ref name="setGroup" scoped="" ref="0xb7009630"/>
        <function-ref name="localGroup" scoped="" ref="0xb7009710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb70076c8" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb70076c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb70078b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb635b330" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb635b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb635b508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb635dd58" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb635dd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb635b010"/>
        <function-ref name="cancel" scoped="" ref="0xb635b0f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb635b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6360a68" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6360a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6360c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb63613f0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb63613f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb63615c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb63616a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6361788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6361868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6361948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6361b20" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6361b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6361d08"/>
        <function-ref name="getPayload" scoped="" ref="0xb6361de8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6361ec8"/>
        <function-ref name="cancel" scoped="" ref="0xb6360010"/>
        <function-ref name="sendDone" scoped="" ref="0xb63600f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb63606a8" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb63606a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6360890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6362010" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6362010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb63621e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb63622c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb63623a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6362488"/>
        <function-ref name="headerLength" scoped="" ref="0xb6362568"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6362648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb635b668" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb635b668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb635b8c0"/>
        <function-ref name="checkFrame" scoped="" ref="0xb635b9a0"/>
        <function-ref name="source" scoped="" ref="0xb635ba80"/>
        <function-ref name="destination" scoped="" ref="0xb635bb60"/>
        <function-ref name="setSource" scoped="" ref="0xb635bc40"/>
        <function-ref name="setDestination" scoped="" ref="0xb635bd20"/>
        <function-ref name="setGroup" scoped="" ref="0xb635be00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb635a010" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb635a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb635a1e8"/>
        <function-ref name="changed" scoped="" ref="0xb635a2c8"/>
        <function-ref name="amGroup" scoped="" ref="0xb635a3a8"/>
        <function-ref name="setAddress" scoped="" ref="0xb635a488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb635d5c0" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb635d5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb635d798"/>
        <function-ref name="payloadLength" scoped="" ref="0xb635d878"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb635d958"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb635da38"/>
        <function-ref name="headerLength" scoped="" ref="0xb635db18"/>
        <function-ref name="metadataLength" scoped="" ref="0xb635dbf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb63602c8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb63602c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb63604b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0xb6360e48" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0xb6360e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb635d050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6362788" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6362788"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6362960"/>
        <function-ref name="source" scoped="" ref="0xb6362a40"/>
        <function-ref name="address" scoped="" ref="0xb6362b20"/>
        <function-ref name="destination" scoped="" ref="0xb6362c00"/>
        <function-ref name="setSource" scoped="" ref="0xb6362ce0"/>
        <function-ref name="setDestination" scoped="" ref="0xb6362dc0"/>
        <function-ref name="type" scoped="" ref="0xb6362ea0"/>
        <function-ref name="setType" scoped="" ref="0xb6361010"/>
        <function-ref name="isForMe" scoped="" ref="0xb63610f0"/>
        <function-ref name="setGroup" scoped="" ref="0xb63611d0"/>
        <function-ref name="localGroup" scoped="" ref="0xb63612b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0xb635d248" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0xb635d248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb635d430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0xb7019820" loc="54:/home/wsn/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb7019820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb70199f8"/>
        <function-ref name="changed" scoped="" ref="0xb7019ad8"/>
        <function-ref name="amGroup" scoped="" ref="0xb7019bb8"/>
        <function-ref name="setAddress" scoped="" ref="0xb7019c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7000c40" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7000c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7000e18"/>
        <function-ref name="cancel" scoped="" ref="0xb7000ef8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6fff010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0xb6fff150" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6fff150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6fff328"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6fff408"/>
        <function-ref name="request" scoped="" ref="0xb6fff4e8"/>
        <function-ref name="granted" scoped="" ref="0xb6fff5c8"/>
        <function-ref name="isOwner" scoped="" ref="0xb6fff6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb7000718" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb7000718"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb70008f0"/>
        <function-ref name="cancel" scoped="" ref="0xb70009d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb7000ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb6fbf490" loc="86:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb6fbf490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb6fbf678"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6fbf758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb6fbfd48" loc="89:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6fbfd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6fbe010"/>
        <function-ref name="configure" scoped="" ref="0xb6fbe0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6ff4d40" loc="85:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6ff4d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6ff4f28"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6fbf018"/>
        <function-ref name="request" scoped="" ref="0xb6fbf0f8"/>
        <function-ref name="granted" scoped="" ref="0xb6fbf1d8"/>
        <function-ref name="isOwner" scoped="" ref="0xb6fbf2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb6fbf898" loc="87:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb6fbf898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb6fbfa70"/>
        <function-ref name="userId" scoped="" ref="0xb6fbfb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb632d6a0" loc="44:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb632d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb632d878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb632d9d8" loc="45:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb632d9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb632dbb0"/>
        <function-ref name="isEmpty" scoped="" ref="0xb632dc90"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb632dd70"/>
        <function-ref name="dequeue" scoped="" ref="0xb632de50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb632a1e8" loc="52:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb632a1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb632a3d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb632a4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb632aab0" loc="56:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb632aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb632ac98"/>
        <function-ref name="configure" scoped="" ref="0xb632ad78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb632aed8" loc="57:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb632aed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb63290c0"/>
        <function-ref name="isEmpty" scoped="" ref="0xb63291a0"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb6329280"/>
        <function-ref name="dequeue" scoped="" ref="0xb6329360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb632ca50" loc="51:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb632ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb632cc38"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb632cd18"/>
        <function-ref name="request" scoped="" ref="0xb632cdf8"/>
        <function-ref name="granted" scoped="" ref="0xb632ced8"/>
        <function-ref name="isOwner" scoped="" ref="0xb632a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb632a5f0" loc="53:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb632a5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb632a7c8"/>
        <function-ref name="userId" scoped="" ref="0xb632a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb63294e0" loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb63294e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb63296b8"/>
        <function-ref name="runTask" scoped="" ref="0xb6329798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6f9f250" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6f9f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f9f428"/>
        <function-ref name="cancel" scoped="" ref="0xb6f9f508"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f9f5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6f9f748" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6f9f748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6f9f920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0xb6fbcce8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0xb6fbcce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0xb6fbcec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6fbdc68" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6fbdc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6fbde40"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6fbdf20"/>
        <function-ref name="getPayload" scoped="" ref="0xb6fbc018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6fbc0f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6fbc1d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0xb6fa0a30" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6fa0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6fa0c08"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6fa0ce8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6fa0dc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6fa0ea8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6f9f010"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6f9f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0xb6fa1070" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6fa1070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb6fa1248"/>
        <function-ref name="getDSN" scoped="" ref="0xb6fa1328"/>
        <function-ref name="setFCF" scoped="" ref="0xb6fa1408"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb6fa14e8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb6fa15c8"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb6fa16a8"/>
        <function-ref name="setDSN" scoped="" ref="0xb6fa1788"/>
        <function-ref name="createAckReply" scoped="" ref="0xb6fa1868"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb6fa1948"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb6fa1a28"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb6fa1b08"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb6fa1be8"/>
        <function-ref name="localAddr" scoped="" ref="0xb6fa1cc8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6fa1e28"/>
        <function-ref name="localPan" scoped="" ref="0xb6fa1f08"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb6fa0010"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb6fa00f0"/>
        <function-ref name="setFramePending" scoped="" ref="0xb6fa01d0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb6fa02b0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6fa0390"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6fa0470"/>
        <function-ref name="getFCF" scoped="" ref="0xb6fa0550"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6fa0630"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb6fa0710"/>
        <function-ref name="getFramePending" scoped="" ref="0xb6fa07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xb6fbc318" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xb6fbc318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6fbc4f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6fbc5d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6fbc6b0"/>
        <function-ref name="cancel" scoped="" ref="0xb6fbc790"/>
        <function-ref name="sendDone" scoped="" ref="0xb6fbc870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xb6fbc9d0" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xb6fbc9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6fbcba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6f7b050" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6f7b050"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f7b228"/>
        <function-ref name="cancel" scoped="" ref="0xb6f7b308"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f7b3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6f7b548" loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6f7b548"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6f7b720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb6f99880" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb6f99880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6f99a58"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6f99b38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f99c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6f99cf8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6f99dd8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6f99eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0xb6f7c528" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0xb6f7c528"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6f7c700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6f7b880" loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6f7b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6f7ba58"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6f7bb38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f7bc18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6f7bcf8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6f7bdd8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6f7beb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0xb6f7c030" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0xb6f7c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f7c208"/>
        <function-ref name="cancel" scoped="" ref="0xb6f7c2e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f7c3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0xb6f99050" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0xb6f99050"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f99228"/>
        <function-ref name="cancel" scoped="" ref="0xb6f99308"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f993e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0xb6f99548" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0xb6f99548"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6f99720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0xb6f7c860" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0xb6f7c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6f7ca38"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6f7cb18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f7cbf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6f7ccd8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6f7cdb8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6f7ce98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6f1fc70" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6f1fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6f1fe48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb6f21f10" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb6f21f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xb6f20108"/>
        <function-ref name="address" scoped="" ref="0xb6f201e8"/>
        <function-ref name="destination" scoped="" ref="0xb6f202c8"/>
        <function-ref name="setSource" scoped="" ref="0xb6f203a8"/>
        <function-ref name="setDestination" scoped="" ref="0xb6f20488"/>
        <function-ref name="pan" scoped="" ref="0xb6f20568"/>
        <function-ref name="setPan" scoped="" ref="0xb6f20648"/>
        <function-ref name="isForMe" scoped="" ref="0xb6f20728"/>
        <function-ref name="localPan" scoped="" ref="0xb6f20808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6f20948" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6f20948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6f20b20"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6f20c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f20ce0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6f20dc0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6f20ea0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6f1f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0xb6f23530" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb6f23530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb6f23708"/>
        <function-ref name="getDSN" scoped="" ref="0xb6f237e8"/>
        <function-ref name="setFCF" scoped="" ref="0xb6f238c8"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb6f239a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb6f23a88"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb6f23b68"/>
        <function-ref name="setDSN" scoped="" ref="0xb6f23c48"/>
        <function-ref name="createAckReply" scoped="" ref="0xb6f23d28"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb6f23e08"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb6f23ee8"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb6f21010"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb6f210f0"/>
        <function-ref name="localAddr" scoped="" ref="0xb6f211d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6f21330"/>
        <function-ref name="localPan" scoped="" ref="0xb6f21410"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb6f214f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb6f215d0"/>
        <function-ref name="setFramePending" scoped="" ref="0xb6f216b0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb6f21790"/>
        <function-ref name="isForMe" scoped="" ref="0xb6f21870"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6f21950"/>
        <function-ref name="getFCF" scoped="" ref="0xb6f21a30"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6f21b10"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb6f21bf0"/>
        <function-ref name="getFramePending" scoped="" ref="0xb6f21cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6f1f4d8" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6f1f4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6f1f6b0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6f1f790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6f1f870"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6f1f950"/>
        <function-ref name="headerLength" scoped="" ref="0xb6f1fa30"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6f1fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6f1f170" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6f1f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6f1f348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb62ed010" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb62ed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb62ed1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0xb62f1d50" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0xb62f1d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0xb62f1f28"/>
        <function-ref name="address" scoped="" ref="0xb62ef018"/>
        <function-ref name="destination" scoped="" ref="0xb62ef0f8"/>
        <function-ref name="setSource" scoped="" ref="0xb62ef1d8"/>
        <function-ref name="setDestination" scoped="" ref="0xb62ef2b8"/>
        <function-ref name="pan" scoped="" ref="0xb62ef398"/>
        <function-ref name="setPan" scoped="" ref="0xb62ef478"/>
        <function-ref name="isForMe" scoped="" ref="0xb62ef558"/>
        <function-ref name="localPan" scoped="" ref="0xb62ef638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb62ef778" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb62ef778"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62ef950"/>
        <function-ref name="payloadLength" scoped="" ref="0xb62efa30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb62efb10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb62efbf0"/>
        <function-ref name="headerLength" scoped="" ref="0xb62efcd0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb62efdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0xb62f2340" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0xb62f2340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb62f2518"/>
        <function-ref name="getDSN" scoped="" ref="0xb62f25f8"/>
        <function-ref name="setFCF" scoped="" ref="0xb62f26d8"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb62f27b8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb62f2898"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb62f2978"/>
        <function-ref name="setDSN" scoped="" ref="0xb62f2a58"/>
        <function-ref name="createAckReply" scoped="" ref="0xb62f2b38"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb62f2c18"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb62f2cf8"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb62f2dd8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb62f2eb8"/>
        <function-ref name="localAddr" scoped="" ref="0xb62f1010"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb62f1170"/>
        <function-ref name="localPan" scoped="" ref="0xb62f1250"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb62f1330"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb62f1410"/>
        <function-ref name="setFramePending" scoped="" ref="0xb62f14f0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb62f15d0"/>
        <function-ref name="isForMe" scoped="" ref="0xb62f16b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb62f1790"/>
        <function-ref name="getFCF" scoped="" ref="0xb62f1870"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb62f1950"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb62f1a30"/>
        <function-ref name="getFramePending" scoped="" ref="0xb62f1b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb62ee278" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb62ee278"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb62ee450"/>
        <function-ref name="changed" scoped="" ref="0xb62ee530"/>
        <function-ref name="amGroup" scoped="" ref="0xb62ee610"/>
        <function-ref name="setAddress" scoped="" ref="0xb62ee6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb62eff10" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb62eff10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb62ee108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb62ee850" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb62ee850"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62eea28"/>
        <function-ref name="payloadLength" scoped="" ref="0xb62eeb08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb62eebe8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb62eecc8"/>
        <function-ref name="headerLength" scoped="" ref="0xb62eeda8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb62eee88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6f1b980" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6f1b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f1bb58"/>
        <function-ref name="cancel" scoped="" ref="0xb6f1bc38"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f1bd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6f1be78" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6f1be78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ee2070"/>
        <function-ref name="header" scoped="" ref="0xb6ee2150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6f1b060" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6f1b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6f1b238"/>
        <function-ref name="cancel" scoped="" ref="0xb6f1b318"/>
        <function-ref name="sendDone" scoped="" ref="0xb6f1b3f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6ee22b0" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6ee22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb6ee2488"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb6ee2568"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb6ee2648"/>
        <function-ref name="getSender" scoped="" ref="0xb6ee2728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6f1b538" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6f1b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6f1b710"/>
        <function-ref name="header" scoped="" ref="0xb6f1b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb62c13e0" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb62c13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb62c15b8"/>
        <function-ref name="cancel" scoped="" ref="0xb62c1698"/>
        <function-ref name="sendDone" scoped="" ref="0xb62c1778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb62c18d8" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb62c18d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb62c1ab0"/>
        <function-ref name="header" scoped="" ref="0xb62c1b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0xb62c09a8" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb62c09a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62c0b80"/>
        <function-ref name="clearAll" scoped="" ref="0xb62c0c60"/>
        <function-ref name="get" scoped="" ref="0xb62c0d40"/>
        <function-ref name="set" scoped="" ref="0xb62c0e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb62c4790" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb62c4790"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb62c4968"/>
        <function-ref name="cancel" scoped="" ref="0xb62c4a48"/>
        <function-ref name="sendDone" scoped="" ref="0xb62c4b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0xb62c0310" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb62c0310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb62c04e8"/>
        <function-ref name="insertNode" scoped="" ref="0xb62c05c8"/>
        <function-ref name="getNode" scoped="" ref="0xb62c06a8"/>
        <function-ref name="evicted" scoped="" ref="0xb62c0788"/>
        <function-ref name="getIndex" scoped="" ref="0xb62c0868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb62c4c68" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb62c4c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb62c4e40"/>
        <function-ref name="header" scoped="" ref="0xb62c4f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb62c1078" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb62c1078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb62c1250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0xb62c1cd0" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xb62c1cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb62c1ea8"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb62c0010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb62c00f0"/>
        <function-ref name="getSender" scoped="" ref="0xb62c01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xb6efd010" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb6efd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb6efd1e8"/>
        <function-ref name="insertNode" scoped="" ref="0xb6efd2c8"/>
        <function-ref name="getNode" scoped="" ref="0xb6efd3a8"/>
        <function-ref name="evicted" scoped="" ref="0xb6efd488"/>
        <function-ref name="getIndex" scoped="" ref="0xb6efd568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb6efaa38" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb6efaa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6efac10"/>
        <function-ref name="clearAll" scoped="" ref="0xb6efacf0"/>
        <function-ref name="get" scoped="" ref="0xb6efadd0"/>
        <function-ref name="set" scoped="" ref="0xb6efaeb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xb6efa010" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb6efa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb6efa1e8"/>
        <function-ref name="insertNode" scoped="" ref="0xb6efa2c8"/>
        <function-ref name="getNode" scoped="" ref="0xb6efa3a8"/>
        <function-ref name="evicted" scoped="" ref="0xb6efa488"/>
        <function-ref name="getIndex" scoped="" ref="0xb6efa568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6efdbe0" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6efdbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6efddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb62bfe88" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb62bfe88"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62be070"/>
        <function-ref name="clearAll" scoped="" ref="0xb62be150"/>
        <function-ref name="get" scoped="" ref="0xb62be230"/>
        <function-ref name="set" scoped="" ref="0xb62be310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6ed8010" loc="85:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6ed8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6ed81e8"/>
        <function-ref name="cancel" scoped="" ref="0xb6ed82c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6ed83a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6ed8508" loc="86:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6ed8508"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ed86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0xb6ed7c00" loc="93:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0xb6ed7c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6ed7dd8"/>
        <function-ref name="noAck" scoped="" ref="0xb6ed7eb8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6ed6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6ee0938" loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6ee0938"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6ee0b10"/>
        <function-ref name="cancel" scoped="" ref="0xb6ee0bf0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6ee0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6edf828" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6edf828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6edfa00"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6edfae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6edfbc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6edfca0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6edfd80"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6edfe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6ed8840" loc="87:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6ed8840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ed8a18"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6ed8af8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6ed8bd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6ed8cb8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ed8d98"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ed8e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0xb6ed7528" loc="92:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0xb6ed7528"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6ed7700"/>
        <function-ref name="setRetries" scoped="" ref="0xb6ed77e0"/>
        <function-ref name="getRetries" scoped="" ref="0xb6ed78c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6ed79a0"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6ed7a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6ee0e30" loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6ee0e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6edf050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xb6ed7010" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6ed7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6ed71e8"/>
        <function-ref name="noAck" scoped="" ref="0xb6ed72c8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6ed73a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0xb6edf190" loc="79:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0xb6edf190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0xb6edf368"/>
        <function-ref name="setRetries" scoped="" ref="0xb6edf448"/>
        <function-ref name="getRetries" scoped="" ref="0xb6edf528"/>
        <function-ref name="setRetryDelay" scoped="" ref="0xb6edf608"/>
        <function-ref name="wasDelivered" scoped="" ref="0xb6edf6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6ed3728" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6ed3728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6ed3900"/>
        <function-ref name="stopDone" scoped="" ref="0xb6ed39e0"/>
        <function-ref name="start" scoped="" ref="0xb6ed3ac0"/>
        <function-ref name="stop" scoped="" ref="0xb6ed3ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6ec6938" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6ec6938"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6ec6b10"/>
        <function-ref name="cancel" scoped="" ref="0xb6ec6bf0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6ec6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6ec6e30" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6ec6e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ec5050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6ed3d00" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6ed3d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6ed3ed8"/>
        <function-ref name="cancel" scoped="" ref="0xb6ed2010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6ed20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6ed2568" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6ed2568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ed2740"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6ed2820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6ed2900"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6ed29e0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ed2ac0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ed2ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb6ed2ce0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb6ed2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb6ed2eb8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb6ec6010"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb6ec60f0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb6ec61d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb6ec6360" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb6ec6360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6ec6538"/>
        <function-ref name="stopDone" scoped="" ref="0xb6ec6618"/>
        <function-ref name="start" scoped="" ref="0xb6ec66f8"/>
        <function-ref name="stop" scoped="" ref="0xb6ec67d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6ed2250" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6ed2250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ed2428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6ec51b0" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6ec51b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ec5388"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6ec5468"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6ec5548"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6ec5628"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ec5708"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ec57e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb62ab8c0" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb62ab8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0xb62aba98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0xb62abb78"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0xb62abc58"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0xb62abd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6ec2d20" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6ec2d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6ec2ef8"/>
        <function-ref name="stopDone" scoped="" ref="0xb6ec1010"/>
        <function-ref name="start" scoped="" ref="0xb6ec10f0"/>
        <function-ref name="stop" scoped="" ref="0xb6ec11d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xb6e84628" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6e84628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6e84800"/>
        <function-ref name="turnOn" scoped="" ref="0xb6e848e0"/>
        <function-ref name="setChannel" scoped="" ref="0xb6e849c0"/>
        <function-ref name="done" scoped="" ref="0xb6e84aa0"/>
        <function-ref name="standby" scoped="" ref="0xb6e84b80"/>
        <function-ref name="getChannel" scoped="" ref="0xb6e84c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6ec1330" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6ec1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6ec1508"/>
        <function-ref name="cancel" scoped="" ref="0xb6ec15e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6ec16c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xb6e83310" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6e83310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e834e8"/>
        <function-ref name="header" scoped="" ref="0xb6e835c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6ec1828" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6ec1828"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ec1a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xb6e84da0" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6e84da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e83010"/>
        <function-ref name="ready" scoped="" ref="0xb6e830f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e831d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb6ec1b40" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb6ec1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb6ec1d18"/>
        <function-ref name="setChannel" scoped="" ref="0xb6ec1df8"/>
        <function-ref name="getChannel" scoped="" ref="0xb6ec1ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb6e84070" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6e84070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6e84248"/>
        <function-ref name="suspend" scoped="" ref="0xb6e84328"/>
        <function-ref name="resume" scoped="" ref="0xb6e84408"/>
        <function-ref name="run" scoped="" ref="0xb6e844e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb62a8c88" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb62a8c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb62a8e60"/>
        <function-ref name="stopDone" scoped="" ref="0xb62a5010"/>
        <function-ref name="start" scoped="" ref="0xb62a50f0"/>
        <function-ref name="stop" scoped="" ref="0xb62a51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xb62a5330" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb62a5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb62a5508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xb62a43a0" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb62a43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb62a4578"/>
        <function-ref name="turnOn" scoped="" ref="0xb62a4658"/>
        <function-ref name="setChannel" scoped="" ref="0xb62a4738"/>
        <function-ref name="done" scoped="" ref="0xb62a4818"/>
        <function-ref name="standby" scoped="" ref="0xb62a48f8"/>
        <function-ref name="getChannel" scoped="" ref="0xb62a49d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb62a5668" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb62a5668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb62a5840"/>
        <function-ref name="cancel" scoped="" ref="0xb62a5920"/>
        <function-ref name="sendDone" scoped="" ref="0xb62a5a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0xb62a3e98" loc="189:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0xb62a3e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb62a20c0"/>
        <function-ref name="runTask" scoped="" ref="0xb62a21a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xb62a3628" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb62a3628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb62a3800"/>
        <function-ref name="header" scoped="" ref="0xb62a38e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0xb62a2320" loc="144:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0xb62a2320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb62a24f8"/>
        <function-ref name="runTask" scoped="" ref="0xb62a25d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb62a5b60" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb62a5b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb62a5d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0xb62a3a60" loc="322:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0xb62a3a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb62a3c38"/>
        <function-ref name="runTask" scoped="" ref="0xb62a3d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xb62a3150" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb62a3150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb62a3328"/>
        <function-ref name="ready" scoped="" ref="0xb62a3408"/>
        <function-ref name="sendDone" scoped="" ref="0xb62a34e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0xb62a5e78" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0xb62a5e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0xb62a4070"/>
        <function-ref name="setChannel" scoped="" ref="0xb62a4150"/>
        <function-ref name="getChannel" scoped="" ref="0xb62a4230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb62a4b18" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb62a4b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb62a4cf0"/>
        <function-ref name="suspend" scoped="" ref="0xb62a4dd0"/>
        <function-ref name="resume" scoped="" ref="0xb62a4eb0"/>
        <function-ref name="run" scoped="" ref="0xb62a3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6e7f930" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6e7f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e7fb08"/>
        <function-ref name="ready" scoped="" ref="0xb6e7fbe8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e7fcc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6e7fe28" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6e7fe28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e59050"/>
        <function-ref name="header" scoped="" ref="0xb6e59130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6e59270" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6e59270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6e59448"/>
        <function-ref name="wait" scoped="" ref="0xb6e59528"/>
        <function-ref name="cancel" scoped="" ref="0xb6e59608"/>
        <function-ref name="isFree" scoped="" ref="0xb6e596e8"/>
        <function-ref name="getNow" scoped="" ref="0xb6e597c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6e59928" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6e59928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb6e59b00"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb6e59be0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb6e59cc0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb6e59da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6e7f4e8" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6e7f4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e7f6c0"/>
        <function-ref name="header" scoped="" ref="0xb6e7f7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6e7f010" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6e7f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e7f1e8"/>
        <function-ref name="ready" scoped="" ref="0xb6e7f2c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e7f3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6284330" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6284330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6284508"/>
        <function-ref name="ready" scoped="" ref="0xb62845e8"/>
        <function-ref name="sendDone" scoped="" ref="0xb62846c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6284828" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6284828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6284a00"/>
        <function-ref name="header" scoped="" ref="0xb6284ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6284c20" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6284c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6284df8"/>
        <function-ref name="wait" scoped="" ref="0xb6284ed8"/>
        <function-ref name="cancel" scoped="" ref="0xb6283010"/>
        <function-ref name="isFree" scoped="" ref="0xb62830f0"/>
        <function-ref name="getNow" scoped="" ref="0xb62831d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb6283310" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb6283310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb62834e8"/>
        <function-ref name="rand32" scoped="" ref="0xb62835c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6283728" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6283728"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb6283900"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb62839e0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb6283ac0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb6283ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6286ed0" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6286ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb62840c0"/>
        <function-ref name="header" scoped="" ref="0xb62841a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb62869f8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb62869f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6286bd0"/>
        <function-ref name="ready" scoped="" ref="0xb6286cb0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6286d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0xb6283d20" loc="78:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0xb6283d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6283ef8"/>
        <function-ref name="runTask" scoped="" ref="0xb6281010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb6e5c478" loc="46:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb6e5c478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb6e5c650"/>
        <function-ref name="rand32" scoped="" ref="0xb6e5c730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb6e5ab58" loc="45:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb6e5ab58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6e5c1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6e5f910" loc="44:/home/wsn/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6e5f910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6e5fae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb6e58ec8" loc="48:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb6e58ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb6e570c0"/>
        <function-ref name="rand32" scoped="" ref="0xb6e571a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb6e58608" loc="47:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb6e58608"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6e58c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6e580e8" loc="46:/home/wsn/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6e580e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6e582c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6e4cb50" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6e4cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e4cd28"/>
        <function-ref name="ready" scoped="" ref="0xb6e4ce08"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e4cee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6e34060" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6e34060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e34238"/>
        <function-ref name="header" scoped="" ref="0xb6e34318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6e34458" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6e34458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6e34630"/>
        <function-ref name="wait" scoped="" ref="0xb6e34710"/>
        <function-ref name="cancel" scoped="" ref="0xb6e347f0"/>
        <function-ref name="isFree" scoped="" ref="0xb6e348d0"/>
        <function-ref name="getNow" scoped="" ref="0xb6e349b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0xb6e324f0" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0xb6e324f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6e326c8"/>
        <function-ref name="get" scoped="" ref="0xb6e327a8"/>
        <function-ref name="setValue" scoped="" ref="0xb6e32888"/>
        <function-ref name="set" scoped="" ref="0xb6e32968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6e34b10" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6e34b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb6e34ce8"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb6e34dc8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb6e34ea8"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb6e32010"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb6e320f0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb6e321d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb6e322b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb6e32390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6e4c230" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6e4c230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e4c408"/>
        <function-ref name="header" scoped="" ref="0xb6e4c4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6e4dcf8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6e4dcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e4ded0"/>
        <function-ref name="ready" scoped="" ref="0xb6e4c010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e4c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb6e4c628" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6e4c628"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6e4c800"/>
        <function-ref name="noAck" scoped="" ref="0xb6e4c8e0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6e4c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6e2d8a0" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6e2d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6e2da78"/>
        <function-ref name="stopDone" scoped="" ref="0xb6e2db58"/>
        <function-ref name="start" scoped="" ref="0xb6e2dc38"/>
        <function-ref name="stop" scoped="" ref="0xb6e2dd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6e22708" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6e22708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6e228e0"/>
        <function-ref name="request" scoped="" ref="0xb6e229c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6e20cc8" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6e20cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e20ea0"/>
        <function-ref name="ready" scoped="" ref="0xb6e1f010"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e1f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6e1f250" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6e1f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e1f428"/>
        <function-ref name="header" scoped="" ref="0xb6e1f508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6e23668" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6e23668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6e23840"/>
        <function-ref name="turnOn" scoped="" ref="0xb6e23920"/>
        <function-ref name="setChannel" scoped="" ref="0xb6e23a00"/>
        <function-ref name="done" scoped="" ref="0xb6e23ae0"/>
        <function-ref name="standby" scoped="" ref="0xb6e23bc0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6e23ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6e22b00" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6e22b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6e22cd8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6e22db8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e22e98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6e21010"/>
        <function-ref name="headerLength" scoped="" ref="0xb6e210f0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6e211d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb6e204b0" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb6e204b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6e20708"/>
        <function-ref name="turnOn" scoped="" ref="0xb6e207e8"/>
        <function-ref name="setChannel" scoped="" ref="0xb6e208c8"/>
        <function-ref name="done" scoped="" ref="0xb6e209a8"/>
        <function-ref name="standby" scoped="" ref="0xb6e20a88"/>
        <function-ref name="getChannel" scoped="" ref="0xb6e20b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xb6e21330" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6e21330"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6e21508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6e22310" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6e22310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e224e8"/>
        <function-ref name="header" scoped="" ref="0xb6e225c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0xb6e20178" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0xb6e20178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e20350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb6e21698" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb6e21698"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6e21870"/>
        <function-ref name="stopDone" scoped="" ref="0xb6e21950"/>
        <function-ref name="start" scoped="" ref="0xb6e21a30"/>
        <function-ref name="stop" scoped="" ref="0xb6e21b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6e1fa80" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6e1fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6e1fc58"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6e1fd38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6e1fe18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6e1fef8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6e1e010"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6e1e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb6e23350" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0xb6e23350"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6e23528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6e1e250" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6e1e250"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6e1e428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0xb6e21c70" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0xb6e21c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e21e48"/>
        <function-ref name="cancel" scoped="" ref="0xb6e21f28"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e20018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6e23de0" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6e23de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e22010"/>
        <function-ref name="ready" scoped="" ref="0xb6e220f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e221d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xb6e1f668" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xb6e1f668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6e1f840"/>
        <function-ref name="request" scoped="" ref="0xb6e1f920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb6e2de58" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb6e2de58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6e23050"/>
        <function-ref name="cancel" scoped="" ref="0xb6e23130"/>
        <function-ref name="sendDone" scoped="" ref="0xb6e23210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0xb6cef170" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0xb6cef170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cef348"/>
        <function-ref name="get" scoped="" ref="0xb6cef428"/>
        <function-ref name="setValue" scoped="" ref="0xb6cef508"/>
        <function-ref name="set" scoped="" ref="0xb6cef5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6cf1830" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6cf1830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cf1a08"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6cf1ae8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6cf1bc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6cf1ca8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6cf1d88"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6cf1e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6cf0938" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6cf0938"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cf0b10"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6cf0bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6cf0cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6cf0db0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6cf0e90"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6cef010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb6cf71b0" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6cf71b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72cfd68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6cf7cb0"/>
        <function-ref name="clear" scoped="" ref="0xb6cf1088"/>
        <function-ref name="isValid" scoped="" ref="0xb6cf7900"/>
        <function-ref name="set" scoped="" ref="0xb6cf1438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0xb6cf00c0" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6cf00c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72cfd68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6cf0708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb6e1a9c8" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb6e1a9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6dec4d8"/>
        <function-ref name="clear" scoped="" ref="0xb6dec888"/>
        <function-ref name="isValid" scoped="" ref="0xb6dec128"/>
        <function-ref name="set" scoped="" ref="0xb6decc38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0xb6256520" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0xb6256520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb62566f8"/>
        <function-ref name="get" scoped="" ref="0xb62567d8"/>
        <function-ref name="setValue" scoped="" ref="0xb62568b8"/>
        <function-ref name="set" scoped="" ref="0xb6256998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6257ca8" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6257ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6257e80"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6256010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb62560f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb62561d0"/>
        <function-ref name="headerLength" scoped="" ref="0xb62562b0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6256390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6255d38" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6255d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6255f10"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6254010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb62540f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb62541d0"/>
        <function-ref name="headerLength" scoped="" ref="0xb62542b0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6254390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb6259610" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb6259610"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72cfd68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6257150"/>
        <function-ref name="clear" scoped="" ref="0xb6257500"/>
        <function-ref name="isValid" scoped="" ref="0xb6259d60"/>
        <function-ref name="set" scoped="" ref="0xb62578b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0xb6256b88" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6256b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72cfd68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6255200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0xb62554c0" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0xb62554c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6255b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb625de38" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb625de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb625a950"/>
        <function-ref name="clear" scoped="" ref="0xb625ad00"/>
        <function-ref name="isValid" scoped="" ref="0xb625a5a0"/>
        <function-ref name="set" scoped="" ref="0xb62590d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6dee5d8" loc="20:/home/wsn/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6dee5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6deec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb6debc88" loc="46:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb6debc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6de6790"/>
        <function-ref name="fired" scoped="" ref="0xb6de8a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6de6150"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6de8ed0"/>
        <function-ref name="getdt" scoped="" ref="0xb6de6c40"/>
        <function-ref name="gett0" scoped="" ref="0xb6de69e8"/>
        <function-ref name="isRunning" scoped="" ref="0xb6de8c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6de82c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6de6470"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6de8548"/>
        <function-ref name="stop" scoped="" ref="0xb6de87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6de5010" loc="47:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6de5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6de5658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6deb4d8" loc="45:/home/wsn/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6deb4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6deb6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0xb6ddb5c8" loc="29:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0xb6ddb5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6ddbd18"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6ddd288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6ddd010"/>
        <function-ref name="overflow" scoped="" ref="0xb6ddd500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6de46c8" loc="27:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6de46c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6de48a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0xb6de4c90" loc="28:/home/wsn/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0xb6de4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6ddf150"/>
        <function-ref name="fired" scoped="" ref="0xb6de1908"/>
        <function-ref name="startAt" scoped="" ref="0xb6de1df8"/>
        <function-ref name="isRunning" scoped="" ref="0xb6de1b80"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6ddf3c8"/>
        <function-ref name="start" scoped="" ref="0xb6de13f0"/>
        <function-ref name="stop" scoped="" ref="0xb6de1690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6d4d010" loc="61:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6d4d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6d4c4e0"/>
        <function-ref name="fired" scoped="" ref="0xb6d4dc78"/>
        <function-ref name="startAt" scoped="" ref="0xb6d4c1a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb6d4def0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6d4c758"/>
        <function-ref name="start" scoped="" ref="0xb6d4d760"/>
        <function-ref name="stop" scoped="" ref="0xb6d4da00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6dd9bb8" loc="60:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6dd9bb8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb73d65d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb73d65d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6dd9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6d4ca88" loc="62:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6d4ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6d4b200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6d4b6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6d4b478"/>
        <function-ref name="overflow" scoped="" ref="0xb6d4b968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0xb623c758" loc="66:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb623c758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb623c930"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb623ca10"/>
        <function-ref name="getControlA" scoped="" ref="0xb623caf0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb623cbd0"/>
        <function-ref name="setControlB" scoped="" ref="0xb623ccb0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb623cd90"/>
        <function-ref name="getControlB" scoped="" ref="0xb623ce70"/>
        <function-ref name="setControlA" scoped="" ref="0xb623b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6242900" loc="61:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6242900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6241db0"/>
        <function-ref name="fired" scoped="" ref="0xb6241580"/>
        <function-ref name="startAt" scoped="" ref="0xb6241a70"/>
        <function-ref name="isRunning" scoped="" ref="0xb62417f8"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6240048"/>
        <function-ref name="start" scoped="" ref="0xb6241068"/>
        <function-ref name="stop" scoped="" ref="0xb6241308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb62424c8" loc="60:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb62424c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb62426a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6240378" loc="62:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6240378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6240ac8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb623e010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6240d40"/>
        <function-ref name="overflow" scoped="" ref="0xb623e288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0xb6239c20" loc="68:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb6239c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb6239df8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb6239ed8"/>
        <function-ref name="controlABusy" scoped="" ref="0xb6238010"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb62380f0"/>
        <function-ref name="countBusy" scoped="" ref="0xb62381d0"/>
        <function-ref name="compareABusy" scoped="" ref="0xb62382b0"/>
        <function-ref name="getAssr" scoped="" ref="0xb6238390"/>
        <function-ref name="setAssr" scoped="" ref="0xb6238470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0xb623b200" loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb623b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6239778"/>
        <function-ref name="fired" scoped="" ref="0xb623bd60"/>
        <function-ref name="get" scoped="" ref="0xb623b848"/>
        <function-ref name="reset" scoped="" ref="0xb6239010"/>
        <function-ref name="isOn" scoped="" ref="0xb62399f0"/>
        <function-ref name="set" scoped="" ref="0xb623bac0"/>
        <function-ref name="start" scoped="" ref="0xb6239288"/>
        <function-ref name="stop" scoped="" ref="0xb6239500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb623e578" loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb623e578"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb623c010"/>
        <function-ref name="test" scoped="" ref="0xb623dad8"/>
        <function-ref name="get" scoped="" ref="0xb623ebc0"/>
        <function-ref name="setScale" scoped="" ref="0xb623c288"/>
        <function-ref name="getScale" scoped="" ref="0xb623c528"/>
        <function-ref name="reset" scoped="" ref="0xb623d370"/>
        <function-ref name="overflow" scoped="" ref="0xb623d0f8"/>
        <function-ref name="isOn" scoped="" ref="0xb623dd50"/>
        <function-ref name="set" scoped="" ref="0xb623ee38"/>
        <function-ref name="start" scoped="" ref="0xb623d5e8"/>
        <function-ref name="stop" scoped="" ref="0xb623d860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6d8b1a0" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6d8b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6d8b378"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6d8b458"/>
        <function-ref name="getControlA" scoped="" ref="0xb6d8b538"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6d8b618"/>
        <function-ref name="setControlB" scoped="" ref="0xb6d8b6f8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6d8b7d8"/>
        <function-ref name="getControlB" scoped="" ref="0xb6d8b8b8"/>
        <function-ref name="setControlA" scoped="" ref="0xb6d8b998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb6d89858" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb6d89858"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb6d89a30"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb6d89b10"/>
        <function-ref name="controlABusy" scoped="" ref="0xb6d89bf0"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb6d89cd0"/>
        <function-ref name="countBusy" scoped="" ref="0xb6d89db0"/>
        <function-ref name="compareABusy" scoped="" ref="0xb6d89e90"/>
        <function-ref name="getAssr" scoped="" ref="0xb6d88010"/>
        <function-ref name="setAssr" scoped="" ref="0xb6d880f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6d8bcc0" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb6d8bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6d89288"/>
        <function-ref name="fired" scoped="" ref="0xb6d8a830"/>
        <function-ref name="get" scoped="" ref="0xb6d8a318"/>
        <function-ref name="reset" scoped="" ref="0xb6d8aaa8"/>
        <function-ref name="isOn" scoped="" ref="0xb6d89500"/>
        <function-ref name="set" scoped="" ref="0xb6d8a590"/>
        <function-ref name="start" scoped="" ref="0xb6d8ad20"/>
        <function-ref name="stop" scoped="" ref="0xb6d89010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6d91dd0" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6d91dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6d8d878"/>
        <function-ref name="test" scoped="" ref="0xb6d8d388"/>
        <function-ref name="get" scoped="" ref="0xb6d8e468"/>
        <function-ref name="setScale" scoped="" ref="0xb6d8daf0"/>
        <function-ref name="getScale" scoped="" ref="0xb6d8dd90"/>
        <function-ref name="reset" scoped="" ref="0xb6d8ebf8"/>
        <function-ref name="overflow" scoped="" ref="0xb6d8e980"/>
        <function-ref name="isOn" scoped="" ref="0xb6d8d600"/>
        <function-ref name="set" scoped="" ref="0xb6d8e6e0"/>
        <function-ref name="start" scoped="" ref="0xb6d8ee70"/>
        <function-ref name="stop" scoped="" ref="0xb6d8d110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6d821a0" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6d821a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6d82378"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6d82458"/>
        <function-ref name="getControlA" scoped="" ref="0xb6d82538"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6d82618"/>
        <function-ref name="setControlB" scoped="" ref="0xb6d826f8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6d827d8"/>
        <function-ref name="getControlB" scoped="" ref="0xb6d828b8"/>
        <function-ref name="setControlA" scoped="" ref="0xb6d82998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0xb6d807b8" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb6d807b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb6d80990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb6d80c18" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb6d80c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb6d80df0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb6d80ed0"/>
        <function-ref name="controlABusy" scoped="" ref="0xb6d7e010"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb6d7e0f0"/>
        <function-ref name="countBusy" scoped="" ref="0xb6d7e1d0"/>
        <function-ref name="compareABusy" scoped="" ref="0xb6d7e2b0"/>
        <function-ref name="getAssr" scoped="" ref="0xb6d7e390"/>
        <function-ref name="setAssr" scoped="" ref="0xb6d7e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6d82cc0" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb6d82cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6d80288"/>
        <function-ref name="fired" scoped="" ref="0xb6d81830"/>
        <function-ref name="get" scoped="" ref="0xb6d81318"/>
        <function-ref name="reset" scoped="" ref="0xb6d81aa8"/>
        <function-ref name="isOn" scoped="" ref="0xb6d80500"/>
        <function-ref name="set" scoped="" ref="0xb6d81590"/>
        <function-ref name="start" scoped="" ref="0xb6d81d20"/>
        <function-ref name="stop" scoped="" ref="0xb6d80010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6d88de0" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6d88de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6d83878"/>
        <function-ref name="test" scoped="" ref="0xb6d83388"/>
        <function-ref name="get" scoped="" ref="0xb6d85468"/>
        <function-ref name="setScale" scoped="" ref="0xb6d83af0"/>
        <function-ref name="getScale" scoped="" ref="0xb6d83d90"/>
        <function-ref name="reset" scoped="" ref="0xb6d85bf8"/>
        <function-ref name="overflow" scoped="" ref="0xb6d85980"/>
        <function-ref name="isOn" scoped="" ref="0xb6d83600"/>
        <function-ref name="set" scoped="" ref="0xb6d856e0"/>
        <function-ref name="start" scoped="" ref="0xb6d85e70"/>
        <function-ref name="stop" scoped="" ref="0xb6d83110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0xb6d31bd0" loc="74:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0xb6d31bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6d31da8"/>
        <function-ref name="runTask" scoped="" ref="0xb6d31e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb6d32248" loc="49:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6d32248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6d31708"/>
        <function-ref name="fired" scoped="" ref="0xb6d32eb0"/>
        <function-ref name="startAt" scoped="" ref="0xb6d313c8"/>
        <function-ref name="isRunning" scoped="" ref="0xb6d31150"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6d31980"/>
        <function-ref name="start" scoped="" ref="0xb6d32998"/>
        <function-ref name="stop" scoped="" ref="0xb6d32c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6de2f08" loc="48:/home/wsn/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6de2f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6d33a18"/>
        <function-ref name="fired" scoped="" ref="0xb6d34cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6d333d8"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6d33180"/>
        <function-ref name="getdt" scoped="" ref="0xb6d33ec8"/>
        <function-ref name="gett0" scoped="" ref="0xb6d33c70"/>
        <function-ref name="isRunning" scoped="" ref="0xb6d34f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6d34558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6d336f8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6d347d8"/>
        <function-ref name="stop" scoped="" ref="0xb6d34a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0xb6d03560" loc="71:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0xb6d03560"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6d03738"/>
        <function-ref name="runTask" scoped="" ref="0xb6d03818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0xb6d06338" loc="49:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0xb6d06338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6d04e38"/>
        <function-ref name="fired" scoped="" ref="0xb6d040f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6d047f8"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6d045a0"/>
        <function-ref name="getdt" scoped="" ref="0xb6d03310"/>
        <function-ref name="gett0" scoped="" ref="0xb6d030b8"/>
        <function-ref name="isRunning" scoped="" ref="0xb6d04348"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6d06960"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6d04b18"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6d06be0"/>
        <function-ref name="stop" scoped="" ref="0xb6d06e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6d2ef00" loc="48:/home/wsn/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6d2ef00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6d07b40"/>
        <function-ref name="fired" scoped="" ref="0xb6d2dce0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6d074e0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6d07278"/>
        <function-ref name="getdt" scoped="" ref="0xb6d06048"/>
        <function-ref name="gett0" scoped="" ref="0xb6d07da8"/>
        <function-ref name="isRunning" scoped="" ref="0xb6d07010"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6d2d558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6d07810"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6d2d7e8"/>
        <function-ref name="stop" scoped="" ref="0xb6d2da78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6d01a88" loc="48:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6d01a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6d000f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb6d00448" loc="49:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6d00448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6d00b98"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6cfa0a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6d00e10"/>
        <function-ref name="overflow" scoped="" ref="0xb6cfa320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb6de9d08" loc="49:/home/wsn/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb6de9d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6cf58a8"/>
        <function-ref name="fired" scoped="" ref="0xb6cf6aa8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6cf5268"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6cf5010"/>
        <function-ref name="getdt" scoped="" ref="0xb6cf5d58"/>
        <function-ref name="gett0" scoped="" ref="0xb6cf5b00"/>
        <function-ref name="isRunning" scoped="" ref="0xb6cf6d00"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6cf6350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6cf5588"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6cf65d0"/>
        <function-ref name="stop" scoped="" ref="0xb6cf6850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6cec4a0" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6cec4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cec678"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6cec758"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6cec838"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6cec918"/>
        <function-ref name="headerLength" scoped="" ref="0xb6cec9f8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6cecad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6cecc68" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6cecc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cece40"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6cecf20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6ceb018"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6ceb0f8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ceb1d8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ceb2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0xb6cd9eb8" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0xb6cd9eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cec0c0"/>
        <function-ref name="get" scoped="" ref="0xb6cec1a0"/>
        <function-ref name="setValue" scoped="" ref="0xb6cec280"/>
        <function-ref name="set" scoped="" ref="0xb6cec360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6cd8450" loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6cd8450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6cd8628"/>
        <function-ref name="stopDone" scoped="" ref="0xb6cd8708"/>
        <function-ref name="start" scoped="" ref="0xb6cd87e8"/>
        <function-ref name="stop" scoped="" ref="0xb6cd88c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6cd6290" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6cd6290"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6cd6468"/>
        <function-ref name="request" scoped="" ref="0xb6cd6548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6cd3828" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6cd3828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6cd3a00"/>
        <function-ref name="ready" scoped="" ref="0xb6cd3ae0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6cd3bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6cd3d20" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6cd3d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6cd3ef8"/>
        <function-ref name="header" scoped="" ref="0xb6cd2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6cd7220" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6cd7220"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6cd73f8"/>
        <function-ref name="turnOn" scoped="" ref="0xb6cd74d8"/>
        <function-ref name="setChannel" scoped="" ref="0xb6cd75b8"/>
        <function-ref name="done" scoped="" ref="0xb6cd7698"/>
        <function-ref name="standby" scoped="" ref="0xb6cd7778"/>
        <function-ref name="getChannel" scoped="" ref="0xb6cd7858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6cd6688" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6cd6688"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cd6860"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6cd6940"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6cd6a20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6cd6b00"/>
        <function-ref name="headerLength" scoped="" ref="0xb6cd6be0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6cd6cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb6cd3010" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb6cd3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6cd3268"/>
        <function-ref name="turnOn" scoped="" ref="0xb6cd3348"/>
        <function-ref name="setChannel" scoped="" ref="0xb6cd3428"/>
        <function-ref name="done" scoped="" ref="0xb6cd3508"/>
        <function-ref name="standby" scoped="" ref="0xb6cd35e8"/>
        <function-ref name="getChannel" scoped="" ref="0xb6cd36c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xb6cd6e20" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xb6cd6e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6cd4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6cd7e70" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6cd7e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6cd6070"/>
        <function-ref name="header" scoped="" ref="0xb6cd6150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0xb6cd4c70" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0xb6cd4c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6cd4e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb6cd41a0" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb6cd41a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6cd4378"/>
        <function-ref name="stopDone" scoped="" ref="0xb6cd4458"/>
        <function-ref name="start" scoped="" ref="0xb6cd4538"/>
        <function-ref name="stop" scoped="" ref="0xb6cd4618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6cd2588" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6cd2588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cd2760"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6cd2840"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6cd2920"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6cd2a00"/>
        <function-ref name="headerLength" scoped="" ref="0xb6cd2ae0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6cd2bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0xb6cd8ee0" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0xb6cd8ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6cd70e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6cd2d20" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6cd2d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb6cd2ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0xb6cd4778" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0xb6cd4778"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6cd4950"/>
        <function-ref name="cancel" scoped="" ref="0xb6cd4a30"/>
        <function-ref name="sendDone" scoped="" ref="0xb6cd4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6cd7998" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6cd7998"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6cd7b70"/>
        <function-ref name="ready" scoped="" ref="0xb6cd7c50"/>
        <function-ref name="sendDone" scoped="" ref="0xb6cd7d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xb6cd2170" loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xb6cd2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6cd2348"/>
        <function-ref name="request" scoped="" ref="0xb6cd2428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0xb6cd8a08" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0xb6cd8a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6cd8be0"/>
        <function-ref name="cancel" scoped="" ref="0xb6cd8cc0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6cd8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6ccc820" loc="45:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6ccc820"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6ccc9f8"/>
        <function-ref name="request" scoped="" ref="0xb6cccad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb6ccaa58" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb6ccaa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cc8638"/>
        <function-ref name="get" scoped="" ref="0xb6cc8378"/>
        <function-ref name="isSet" scoped="" ref="0xb6cc80b8"/>
        <function-ref name="set" scoped="" ref="0xb6cc88f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0xb6cbd778" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0xb6cbd778"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cbd950"/>
        <function-ref name="get" scoped="" ref="0xb6cbda30"/>
        <function-ref name="setValue" scoped="" ref="0xb6cbdb10"/>
        <function-ref name="set" scoped="" ref="0xb6cbdbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb6cc0898" loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6cc0898"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72cfd68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6cbf3c0"/>
        <function-ref name="clear" scoped="" ref="0xb6cbf770"/>
        <function-ref name="isValid" scoped="" ref="0xb6cbf010"/>
        <function-ref name="set" scoped="" ref="0xb6cbfb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6ccf668" loc="42:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6ccf668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6ccf840"/>
        <function-ref name="turnOn" scoped="" ref="0xb6ccf920"/>
        <function-ref name="setChannel" scoped="" ref="0xb6ccfa00"/>
        <function-ref name="done" scoped="" ref="0xb6ccfae0"/>
        <function-ref name="standby" scoped="" ref="0xb6ccfbc0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6ccfca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6cbc498" loc="66:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6cbc498"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6cbc670"/>
        <function-ref name="wait" scoped="" ref="0xb6cbc750"/>
        <function-ref name="cancel" scoped="" ref="0xb6cbc830"/>
        <function-ref name="isFree" scoped="" ref="0xb6cbc910"/>
        <function-ref name="getNow" scoped="" ref="0xb6cbc9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb6ccb6f8" loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6ccb6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cca2d0"/>
        <function-ref name="get" scoped="" ref="0xb6cca010"/>
        <function-ref name="isSet" scoped="" ref="0xb6ccbd40"/>
        <function-ref name="set" scoped="" ref="0xb6cca590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6cccc88" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6cccc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ccce60"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6ccb010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6ccb0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6ccb1d0"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ccb2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ccb390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6cc1ec0" loc="60:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6cc1ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6cc0188"/>
        <function-ref name="headerLength" scoped="" ref="0xb6cc0268"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6cc0348"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xb6cc0428"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb6cc0508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6ccc3d0" loc="44:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6ccc3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6ccc5a8"/>
        <function-ref name="header" scoped="" ref="0xb6ccc688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6cc3428" loc="55:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6cc3428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72cfd68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb72cd048"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6cc18d8"/>
        <function-ref name="fired" scoped="" ref="0xb6cc10a8"/>
        <function-ref name="startAt" scoped="" ref="0xb6cc1598"/>
        <function-ref name="isRunning" scoped="" ref="0xb6cc1320"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6cc1b50"/>
        <function-ref name="start" scoped="" ref="0xb6cc3b78"/>
        <function-ref name="stop" scoped="" ref="0xb6cc3e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb6cc8e28" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6cc8e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cc7a08"/>
        <function-ref name="get" scoped="" ref="0xb6cc7748"/>
        <function-ref name="isSet" scoped="" ref="0xb6cc7488"/>
        <function-ref name="set" scoped="" ref="0xb6cc7cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb6cc4950" loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6cc4950"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72cfd68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6cc3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6ccfe40" loc="43:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6ccfe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6ccc050"/>
        <function-ref name="ready" scoped="" ref="0xb6ccc130"/>
        <function-ref name="sendDone" scoped="" ref="0xb6ccc210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb6cc5208" loc="51:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6cc5208"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cc5dd0"/>
        <function-ref name="get" scoped="" ref="0xb6cc5b10"/>
        <function-ref name="isSet" scoped="" ref="0xb6cc5850"/>
        <function-ref name="set" scoped="" ref="0xb6cc40a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0xb6cbde38" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6cbde38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cbc050"/>
        <function-ref name="get" scoped="" ref="0xb6cbc130"/>
        <function-ref name="setValue" scoped="" ref="0xb6cbc210"/>
        <function-ref name="set" scoped="" ref="0xb6cbc2f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0xb6cbd0e0" loc="63:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6cbd0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cbd2b8"/>
        <function-ref name="get" scoped="" ref="0xb6cbd398"/>
        <function-ref name="setValue" scoped="" ref="0xb6cbd478"/>
        <function-ref name="set" scoped="" ref="0xb6cbd558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb6cc4458" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6cc4458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb6cc4630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb6cbcb78" loc="67:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6cbcb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6cbcd50"/>
        <function-ref name="suspend" scoped="" ref="0xb6cbce30"/>
        <function-ref name="resume" scoped="" ref="0xb6cbcf10"/>
        <function-ref name="run" scoped="" ref="0xb6cbb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb6cb5a08" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb6cb5a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb6cb5be0"/>
        <function-ref name="request" scoped="" ref="0xb6cb5cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0xb6ca1588" loc="74:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb6ca1588"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb736b010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb6ca1cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb6cb2b98" loc="56:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb6cb2b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cb1780"/>
        <function-ref name="get" scoped="" ref="0xb6cb14c0"/>
        <function-ref name="isSet" scoped="" ref="0xb6cb1200"/>
        <function-ref name="set" scoped="" ref="0xb6cb1a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0xb6ca3920" loc="80:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0xb6ca3920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ca3af8"/>
        <function-ref name="get" scoped="" ref="0xb6ca3bd8"/>
        <function-ref name="setValue" scoped="" ref="0xb6ca3cb8"/>
        <function-ref name="set" scoped="" ref="0xb6ca3d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xb6cb64d8" loc="47:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb6cb64d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb73d67d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb73d67d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6cb66b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb6ca0818" loc="83:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb6ca0818"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72cfd68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb6c9f438"/>
        <function-ref name="clear" scoped="" ref="0xb6c9f7e8"/>
        <function-ref name="isValid" scoped="" ref="0xb6c9f088"/>
        <function-ref name="set" scoped="" ref="0xb6c9fb98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0xb6caabf8" loc="70:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb6caabf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6caadd0"/>
        <function-ref name="isInput" scoped="" ref="0xb6caaeb0"/>
        <function-ref name="toggle" scoped="" ref="0xb6ca9010"/>
        <function-ref name="isOutput" scoped="" ref="0xb6ca90f0"/>
        <function-ref name="get" scoped="" ref="0xb6ca91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6ca92b0"/>
        <function-ref name="set" scoped="" ref="0xb6ca9390"/>
        <function-ref name="clr" scoped="" ref="0xb6ca9470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb6c9d630" loc="86:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb6c9d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb6c9d808"/>
        <function-ref name="wait" scoped="" ref="0xb6c9d8e8"/>
        <function-ref name="cancel" scoped="" ref="0xb6c9d9c8"/>
        <function-ref name="isFree" scoped="" ref="0xb6c9daa8"/>
        <function-ref name="getNow" scoped="" ref="0xb6c9db88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb6cb6858" loc="49:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb6cb6858"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb6cb6a30"/>
        <function-ref name="turnOn" scoped="" ref="0xb6cb6b10"/>
        <function-ref name="setChannel" scoped="" ref="0xb6cb6bf0"/>
        <function-ref name="done" scoped="" ref="0xb6cb6cd0"/>
        <function-ref name="standby" scoped="" ref="0xb6cb6db0"/>
        <function-ref name="getChannel" scoped="" ref="0xb6cb6e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0xb6ca5088" loc="75:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6ca5088"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72cfd68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6ca56d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb6cb4838" loc="55:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb6cb4838"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cb2410"/>
        <function-ref name="get" scoped="" ref="0xb6cb2150"/>
        <function-ref name="isSet" scoped="" ref="0xb6cb4e80"/>
        <function-ref name="set" scoped="" ref="0xb6cb26d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0xb6cb5e70" loc="53:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0xb6cb5e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cb4070"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6cb4150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6cb4230"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6cb4310"/>
        <function-ref name="headerLength" scoped="" ref="0xb6cb43f0"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6cb44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0xb6caa210" loc="69:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xb6caa210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6caa3e8"/>
        <function-ref name="isInput" scoped="" ref="0xb6caa4c8"/>
        <function-ref name="toggle" scoped="" ref="0xb6caa5a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6caa688"/>
        <function-ref name="get" scoped="" ref="0xb6caa768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6caa848"/>
        <function-ref name="set" scoped="" ref="0xb6caa928"/>
        <function-ref name="clr" scoped="" ref="0xb6caaa08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb6ca59f0" loc="77:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb6ca59f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6ca5bc8"/>
        <function-ref name="headerLength" scoped="" ref="0xb6ca5ca8"/>
        <function-ref name="metadataLength" scoped="" ref="0xb6ca5d88"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0xb6ca5e68"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb6ca3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb6cb55b8" loc="51:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb6cb55b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6cb5790"/>
        <function-ref name="header" scoped="" ref="0xb6cb5870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0xb6c49910" loc="856:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0xb6c49910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6c49ae8"/>
        <function-ref name="runTask" scoped="" ref="0xb6c49bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb6caf010" loc="57:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb6caf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cafbd8"/>
        <function-ref name="get" scoped="" ref="0xb6caf918"/>
        <function-ref name="isSet" scoped="" ref="0xb6caf658"/>
        <function-ref name="set" scoped="" ref="0xb6cafe98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb6cb8e40" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb6cb8e40"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb73d67d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb73d67d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6cb6050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb6cab5b8" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb6cab5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6cab790"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6cab870"/>
        <function-ref name="request" scoped="" ref="0xb6cab950"/>
        <function-ref name="granted" scoped="" ref="0xb6caba30"/>
        <function-ref name="isOwner" scoped="" ref="0xb6cabb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0xb6cada98" loc="64:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xb6cada98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6cadcf0"/>
        <function-ref name="isInput" scoped="" ref="0xb6caddd0"/>
        <function-ref name="toggle" scoped="" ref="0xb6cadeb0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6cab010"/>
        <function-ref name="get" scoped="" ref="0xb6cab0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6cab1d0"/>
        <function-ref name="set" scoped="" ref="0xb6cab2b0"/>
        <function-ref name="clr" scoped="" ref="0xb6cab390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb6cae3d8" loc="58:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb6cae3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6cad010"/>
        <function-ref name="get" scoped="" ref="0xb6caece0"/>
        <function-ref name="isSet" scoped="" ref="0xb6caea20"/>
        <function-ref name="set" scoped="" ref="0xb6cad2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb6cb5060" loc="50:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb6cb5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6cb5238"/>
        <function-ref name="ready" scoped="" ref="0xb6cb5318"/>
        <function-ref name="sendDone" scoped="" ref="0xb6cb53f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0xb6ca4d50" loc="72:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb6ca4d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb6ca4f28"/>
        <function-ref name="disable" scoped="" ref="0xb6ca6018"/>
        <function-ref name="captured" scoped="" ref="0xb6ca60f8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb6ca61d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0xb6ca7b40" loc="67:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb6ca7b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb6ca7d18"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb6ca7df8"/>
        <function-ref name="splitRead" scoped="" ref="0xb6ca7ed8"/>
        <function-ref name="write" scoped="" ref="0xb6caa010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0xb6ca0010" loc="81:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0xb6ca0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ca01e8"/>
        <function-ref name="get" scoped="" ref="0xb6ca02c8"/>
        <function-ref name="setValue" scoped="" ref="0xb6ca03a8"/>
        <function-ref name="set" scoped="" ref="0xb6ca0488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0xb6ca3288" loc="79:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0xb6ca3288"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6ca3460"/>
        <function-ref name="get" scoped="" ref="0xb6ca3540"/>
        <function-ref name="setValue" scoped="" ref="0xb6ca3620"/>
        <function-ref name="set" scoped="" ref="0xb6ca3700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0xb6cad680" loc="59:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb6cad680"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb6cad858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb6c9d010" loc="85:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb6c9d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb6c9d1e8"/>
        <function-ref name="suspend" scoped="" ref="0xb6c9d2c8"/>
        <function-ref name="resume" scoped="" ref="0xb6c9d3a8"/>
        <function-ref name="run" scoped="" ref="0xb6c9d488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0xb6c22db8" loc="46:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb6c22db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6c21010"/>
        <function-ref name="isInput" scoped="" ref="0xb6c210f0"/>
        <function-ref name="toggle" scoped="" ref="0xb6c211d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6c212b0"/>
        <function-ref name="get" scoped="" ref="0xb6c21390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6c21470"/>
        <function-ref name="set" scoped="" ref="0xb6c21550"/>
        <function-ref name="clr" scoped="" ref="0xb6c21630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0xb6c223d0" loc="45:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xb6c223d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6c225a8"/>
        <function-ref name="isInput" scoped="" ref="0xb6c22688"/>
        <function-ref name="toggle" scoped="" ref="0xb6c22768"/>
        <function-ref name="isOutput" scoped="" ref="0xb6c22848"/>
        <function-ref name="get" scoped="" ref="0xb6c22928"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6c22a08"/>
        <function-ref name="set" scoped="" ref="0xb6c22ae8"/>
        <function-ref name="clr" scoped="" ref="0xb6c22bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6c20030" loc="49:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6c20030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72cfd68"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6c1f4e0"/>
        <function-ref name="fired" scoped="" ref="0xb6c20c98"/>
        <function-ref name="startAt" scoped="" ref="0xb6c1f1a0"/>
        <function-ref name="isRunning" scoped="" ref="0xb6c20f10"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6c1f758"/>
        <function-ref name="start" scoped="" ref="0xb6c20780"/>
        <function-ref name="stop" scoped="" ref="0xb6c20a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0xb6c235b8" loc="42:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb6c235b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6c23790"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6c23870"/>
        <function-ref name="request" scoped="" ref="0xb6c23950"/>
        <function-ref name="granted" scoped="" ref="0xb6c23a30"/>
        <function-ref name="isOwner" scoped="" ref="0xb6c23b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0xb6c26b08" loc="41:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xb6c26b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6c26ce0"/>
        <function-ref name="isInput" scoped="" ref="0xb6c26dc0"/>
        <function-ref name="toggle" scoped="" ref="0xb6c26ea0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6c23010"/>
        <function-ref name="get" scoped="" ref="0xb6c230f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6c231d0"/>
        <function-ref name="set" scoped="" ref="0xb6c232b0"/>
        <function-ref name="clr" scoped="" ref="0xb6c23390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xb6c21820" loc="48:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb6c21820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb6c219f8"/>
        <function-ref name="disable" scoped="" ref="0xb6c21ad8"/>
        <function-ref name="captured" scoped="" ref="0xb6c21bb8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb6c21c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb6c23cc0" loc="43:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb6c23cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb6c23e98"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb6c22010"/>
        <function-ref name="splitRead" scoped="" ref="0xb6c220f0"/>
        <function-ref name="write" scoped="" ref="0xb6c221d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0xb6c1fb48" loc="50:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb6c1fb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TRadio" ref="0xb72cfd68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6c1d200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0xb6c14420" loc="46:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0xb6c14420"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6c145f8"/>
        <function-ref name="isInput" scoped="" ref="0xb6c146d8"/>
        <function-ref name="toggle" scoped="" ref="0xb6c147b8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6c14898"/>
        <function-ref name="get" scoped="" ref="0xb6c14978"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6c14a58"/>
        <function-ref name="set" scoped="" ref="0xb6c14b38"/>
        <function-ref name="clr" scoped="" ref="0xb6c14c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0xb6c15660" loc="45:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb6c15660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb6c14110"/>
        <function-ref name="test" scoped="" ref="0xb6c18be0"/>
        <function-ref name="get" scoped="" ref="0xb6c15ca8"/>
        <function-ref name="captured" scoped="" ref="0xb6c181d8"/>
        <function-ref name="reset" scoped="" ref="0xb6c18478"/>
        <function-ref name="isOn" scoped="" ref="0xb6c18e58"/>
        <function-ref name="set" scoped="" ref="0xb6c15f20"/>
        <function-ref name="start" scoped="" ref="0xb6c186f0"/>
        <function-ref name="stop" scoped="" ref="0xb6c18968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0xb6c14e20" loc="47:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0xb6c14e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6c13010"/>
        <function-ref name="isInput" scoped="" ref="0xb6c130f0"/>
        <function-ref name="toggle" scoped="" ref="0xb6c131d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb6c132b0"/>
        <function-ref name="get" scoped="" ref="0xb6c13390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6c13470"/>
        <function-ref name="set" scoped="" ref="0xb6c13550"/>
        <function-ref name="clr" scoped="" ref="0xb6c13630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb6c1a030" loc="40:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb6c1a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6c1a208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xb6c1d980" loc="39:/home/wsn/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb6c1d980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb6c1db58"/>
        <function-ref name="disable" scoped="" ref="0xb6c1dc38"/>
        <function-ref name="captured" scoped="" ref="0xb6c1dd18"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb6c1ddf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb6c03500" loc="84:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb6c03500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c036d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c037b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb6c0aaa0" loc="82:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb6c0aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb6c0ac78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6c1cd98" loc="81:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6c1cd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6c0a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb6c0ae48" loc="83:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb6c0ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb6c09050"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb6c09130"/>
        <function-ref name="splitRead" scoped="" ref="0xb6c09210"/>
        <function-ref name="write" scoped="" ref="0xb6c092f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6c03c50" loc="85:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6c03c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6c03e28"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6c03f08"/>
        <function-ref name="request" scoped="" ref="0xb6c08010"/>
        <function-ref name="granted" scoped="" ref="0xb6c080f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb6c081d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0xb6c002d8" loc="95:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6c002d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6c004b0"/>
        <function-ref name="configure" scoped="" ref="0xb6c00590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0xb6bdd390" loc="294:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0xb6bdd390"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6bdd568"/>
        <function-ref name="runTask" scoped="" ref="0xb6bdd648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb6c01b38" loc="94:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb6c01b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6c01d10"/>
        <function-ref name="sendDone" scoped="" ref="0xb6c01df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb6c01198" loc="92:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb6c01198"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb6c01370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6c08d80" loc="91:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6c08d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6c01010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0xb6bef1c8" loc="98:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0xb6bef1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb6bef3a0"/>
        <function-ref name="sleep" scoped="" ref="0xb6bff7f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb6bef560"/>
        <function-ref name="dataReady" scoped="" ref="0xb6bff8d0"/>
        <function-ref name="initMaster" scoped="" ref="0xb6bef720"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb6bef800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb6bef8e0"/>
        <function-ref name="read" scoped="" ref="0xb6bef9c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb6befaa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb6befb80"/>
        <function-ref name="setClock" scoped="" ref="0xb6befc60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6befd40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb6befe20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb6bff010"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb6bff0f0"/>
        <function-ref name="write" scoped="" ref="0xb6bff1d0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb6bff2b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb6bff390"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb6bff470"/>
        <function-ref name="getClock" scoped="" ref="0xb6bff550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb6bff630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb6bef480"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb6bef640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb6bff710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0xb6c01520" loc="93:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0xb6c01520"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0xb6c016f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0xb6c017d8"/>
        <function-ref name="splitRead" scoped="" ref="0xb6c018b8"/>
        <function-ref name="write" scoped="" ref="0xb6c01998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xb6bffa98" loc="99:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb6bffa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb6bffc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0xb6c07e40" loc="76:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0xb6c07e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb6bca050"/>
        <function-ref name="sleep" scoped="" ref="0xb6bc9470"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb6bca210"/>
        <function-ref name="dataReady" scoped="" ref="0xb6bc9550"/>
        <function-ref name="initMaster" scoped="" ref="0xb6bca3d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb6bca4b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb6bca590"/>
        <function-ref name="read" scoped="" ref="0xb6bca670"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb6bca750"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb6bca830"/>
        <function-ref name="setClock" scoped="" ref="0xb6bca910"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6bca9f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb6bcaad0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb6bcac30"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb6bcad10"/>
        <function-ref name="write" scoped="" ref="0xb6bcadf0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb6bcaed0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb6bc9010"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb6bc90f0"/>
        <function-ref name="getClock" scoped="" ref="0xb6bc91d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb6bc92b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb6bca130"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb6bca2f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb6bc9390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0xb6bc3e88" loc="81:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0xb6bc3e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6bc1070"/>
        <function-ref name="isInput" scoped="" ref="0xb6bc1150"/>
        <function-ref name="toggle" scoped="" ref="0xb6bc1230"/>
        <function-ref name="isOutput" scoped="" ref="0xb6bc1310"/>
        <function-ref name="get" scoped="" ref="0xb6bc13f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6bc14d0"/>
        <function-ref name="set" scoped="" ref="0xb6bc15b0"/>
        <function-ref name="clr" scoped="" ref="0xb6bc1690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0xb6bc49e8" loc="79:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0xb6bc49e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6bc4bc0"/>
        <function-ref name="isInput" scoped="" ref="0xb6bc4ca0"/>
        <function-ref name="toggle" scoped="" ref="0xb6bc4d80"/>
        <function-ref name="isOutput" scoped="" ref="0xb6bc4e60"/>
        <function-ref name="get" scoped="" ref="0xb6bc3010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6bc30f0"/>
        <function-ref name="set" scoped="" ref="0xb6bc31d0"/>
        <function-ref name="clr" scoped="" ref="0xb6bc32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0xb6bc4010" loc="78:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0xb6bc4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6bc41e8"/>
        <function-ref name="isInput" scoped="" ref="0xb6bc42c8"/>
        <function-ref name="toggle" scoped="" ref="0xb6bc43a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb6bc4488"/>
        <function-ref name="get" scoped="" ref="0xb6bc4568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6bc4648"/>
        <function-ref name="set" scoped="" ref="0xb6bc4728"/>
        <function-ref name="clr" scoped="" ref="0xb6bc4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xb6bc2ac0" loc="75:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xb6bc2ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6bc2c98"/>
        <function-ref name="stop" scoped="" ref="0xb6bc2d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0xb6bc1898" loc="82:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0xb6bc1898"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb6bc1a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0xb6bc61c8" loc="74:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0xb6bc61c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb6bc63a0"/>
        <function-ref name="sleep" scoped="" ref="0xb6bc57f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb6bc6560"/>
        <function-ref name="dataReady" scoped="" ref="0xb6bc58d0"/>
        <function-ref name="initMaster" scoped="" ref="0xb6bc6720"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb6bc6800"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb6bc68e0"/>
        <function-ref name="read" scoped="" ref="0xb6bc69c0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb6bc6aa0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb6bc6b80"/>
        <function-ref name="setClock" scoped="" ref="0xb6bc6c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb6bc6d40"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb6bc6e20"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb6bc5010"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb6bc50f0"/>
        <function-ref name="write" scoped="" ref="0xb6bc51d0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb6bc52b0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb6bc5390"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb6bc5470"/>
        <function-ref name="getClock" scoped="" ref="0xb6bc5550"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb6bc5630"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb6bc6480"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb6bc6640"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb6bc5710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0xb6bc34a0" loc="80:/home/wsn/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0xb6bc34a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb6bc3678"/>
        <function-ref name="isInput" scoped="" ref="0xb6bc3758"/>
        <function-ref name="toggle" scoped="" ref="0xb6bc3838"/>
        <function-ref name="isOutput" scoped="" ref="0xb6bc3918"/>
        <function-ref name="get" scoped="" ref="0xb6bc39f8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb6bc3ad8"/>
        <function-ref name="set" scoped="" ref="0xb6bc3bb8"/>
        <function-ref name="clr" scoped="" ref="0xb6bc3c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb6b9a8d8" loc="86:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb6b9a8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb6b9aac0"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb6b9aba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb6b98208" loc="89:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb6b98208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb6b983f0"/>
        <function-ref name="configure" scoped="" ref="0xb6b984d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb6b9a198" loc="85:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb6b9a198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb6b9a380"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb6b9a460"/>
        <function-ref name="request" scoped="" ref="0xb6b9a540"/>
        <function-ref name="granted" scoped="" ref="0xb6b9a620"/>
        <function-ref name="isOwner" scoped="" ref="0xb6b9a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb6b9ace0" loc="87:/home/wsn/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb6b9ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb6b9aeb8"/>
        <function-ref name="userId" scoped="" ref="0xb6b98010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb61efc98" loc="44:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb61efc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb61efe70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb61ed010" loc="45:/home/wsn/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb61ed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb61ed1e8"/>
        <function-ref name="isEmpty" scoped="" ref="0xb61ed2c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb61ed3a8"/>
        <function-ref name="dequeue" scoped="" ref="0xb61ed488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb61ec750" loc="52:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb61ec750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb61ec938"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb61eca18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb61eb030" loc="56:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb61eb030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb61eb218"/>
        <function-ref name="configure" scoped="" ref="0xb61eb2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb61eb458" loc="57:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb61eb458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb61eb630"/>
        <function-ref name="isEmpty" scoped="" ref="0xb61eb710"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb61eb7f0"/>
        <function-ref name="dequeue" scoped="" ref="0xb61eb8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb61ec010" loc="51:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb61ec010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb61ec1f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb61ec2d8"/>
        <function-ref name="request" scoped="" ref="0xb61ec3b8"/>
        <function-ref name="granted" scoped="" ref="0xb61ec498"/>
        <function-ref name="isOwner" scoped="" ref="0xb61ec578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb61ecb58" loc="53:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb61ecb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb61ecd30"/>
        <function-ref name="userId" scoped="" ref="0xb61ece10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb61eba50" loc="68:/home/wsn/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb61eba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb61ebc28"/>
        <function-ref name="runTask" scoped="" ref="0xb61ebd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6b8bc88" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6b8bc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb6b8be60"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6b8f010"/>
        <function-ref name="getControlA" scoped="" ref="0xb6b8f0f0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6b8f1d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6b8f2b0"/>
        <function-ref name="setControlB" scoped="" ref="0xb6b8f390"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6b8f470"/>
        <function-ref name="getControlB" scoped="" ref="0xb6b8f550"/>
        <function-ref name="setControlC" scoped="" ref="0xb6b8f630"/>
        <function-ref name="setControlA" scoped="" ref="0xb6b8f710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6b8fa48" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb6b8fa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb6b89500"/>
        <function-ref name="test" scoped="" ref="0xb6b89010"/>
        <function-ref name="get" scoped="" ref="0xb6b8e0a8"/>
        <function-ref name="captured" scoped="" ref="0xb6b8e5c0"/>
        <function-ref name="reset" scoped="" ref="0xb6b8e860"/>
        <function-ref name="isOn" scoped="" ref="0xb6b89288"/>
        <function-ref name="set" scoped="" ref="0xb6b8e320"/>
        <function-ref name="start" scoped="" ref="0xb6b8ead8"/>
        <function-ref name="stop" scoped="" ref="0xb6b8ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb6b89c10" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb6b89c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6b861a0"/>
        <function-ref name="fired" scoped="" ref="0xb6b88790"/>
        <function-ref name="get" scoped="" ref="0xb6b88278"/>
        <function-ref name="reset" scoped="" ref="0xb6b88a08"/>
        <function-ref name="isOn" scoped="" ref="0xb6b86418"/>
        <function-ref name="set" scoped="" ref="0xb6b884f0"/>
        <function-ref name="start" scoped="" ref="0xb6b88c80"/>
        <function-ref name="stop" scoped="" ref="0xb6b88ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6b93328" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6b93328"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6b92d68"/>
        <function-ref name="test" scoped="" ref="0xb6b92878"/>
        <function-ref name="get" scoped="" ref="0xb6b93970"/>
        <function-ref name="setScale" scoped="" ref="0xb6b90010"/>
        <function-ref name="getScale" scoped="" ref="0xb6b902b0"/>
        <function-ref name="reset" scoped="" ref="0xb6b92110"/>
        <function-ref name="overflow" scoped="" ref="0xb6b93e88"/>
        <function-ref name="isOn" scoped="" ref="0xb6b92af0"/>
        <function-ref name="set" scoped="" ref="0xb6b93be8"/>
        <function-ref name="start" scoped="" ref="0xb6b92388"/>
        <function-ref name="stop" scoped="" ref="0xb6b92600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb6b803c8" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb6b803c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb6b805a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb6b80680"/>
        <function-ref name="getControlA" scoped="" ref="0xb6b80760"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb6b80840"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb6b80920"/>
        <function-ref name="setControlB" scoped="" ref="0xb6b80a00"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb6b80ae0"/>
        <function-ref name="getControlB" scoped="" ref="0xb6b80bc0"/>
        <function-ref name="setControlC" scoped="" ref="0xb6b80ca0"/>
        <function-ref name="setControlA" scoped="" ref="0xb6b80d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xb6b7d010" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xb6b7d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6b7b578"/>
        <function-ref name="fired" scoped="" ref="0xb6b7db70"/>
        <function-ref name="get" scoped="" ref="0xb6b7d658"/>
        <function-ref name="reset" scoped="" ref="0xb6b7dde8"/>
        <function-ref name="isOn" scoped="" ref="0xb6b7b7f0"/>
        <function-ref name="set" scoped="" ref="0xb6b7d8d0"/>
        <function-ref name="start" scoped="" ref="0xb6b7b088"/>
        <function-ref name="stop" scoped="" ref="0xb6b7b300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb6b7f0f0" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb6b7f0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb6b7eb80"/>
        <function-ref name="test" scoped="" ref="0xb6b7e690"/>
        <function-ref name="get" scoped="" ref="0xb6b7f738"/>
        <function-ref name="captured" scoped="" ref="0xb6b7fc50"/>
        <function-ref name="reset" scoped="" ref="0xb6b7fef0"/>
        <function-ref name="isOn" scoped="" ref="0xb6b7e908"/>
        <function-ref name="set" scoped="" ref="0xb6b7f9b0"/>
        <function-ref name="start" scoped="" ref="0xb6b7e1a0"/>
        <function-ref name="stop" scoped="" ref="0xb6b7e418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xb6b7bc08" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xb6b7bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6b791a0"/>
        <function-ref name="fired" scoped="" ref="0xb6b7a790"/>
        <function-ref name="get" scoped="" ref="0xb6b7a278"/>
        <function-ref name="reset" scoped="" ref="0xb6b7aa08"/>
        <function-ref name="isOn" scoped="" ref="0xb6b79418"/>
        <function-ref name="set" scoped="" ref="0xb6b7a4f0"/>
        <function-ref name="start" scoped="" ref="0xb6b7ac80"/>
        <function-ref name="stop" scoped="" ref="0xb6b7aef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xb6b79830" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xb6b79830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb6b77d90"/>
        <function-ref name="fired" scoped="" ref="0xb6b773b0"/>
        <function-ref name="get" scoped="" ref="0xb6b79e78"/>
        <function-ref name="reset" scoped="" ref="0xb6b77628"/>
        <function-ref name="isOn" scoped="" ref="0xb6b76048"/>
        <function-ref name="set" scoped="" ref="0xb6b77110"/>
        <function-ref name="start" scoped="" ref="0xb6b778a0"/>
        <function-ref name="stop" scoped="" ref="0xb6b77b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb6b830e0" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6b830e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6b82b30"/>
        <function-ref name="test" scoped="" ref="0xb6b82640"/>
        <function-ref name="get" scoped="" ref="0xb6b83728"/>
        <function-ref name="setScale" scoped="" ref="0xb6b82da8"/>
        <function-ref name="getScale" scoped="" ref="0xb6b80068"/>
        <function-ref name="reset" scoped="" ref="0xb6b83eb8"/>
        <function-ref name="overflow" scoped="" ref="0xb6b83c40"/>
        <function-ref name="isOn" scoped="" ref="0xb6b828b8"/>
        <function-ref name="set" scoped="" ref="0xb6b839a0"/>
        <function-ref name="start" scoped="" ref="0xb6b82150"/>
        <function-ref name="stop" scoped="" ref="0xb6b823c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb6b35850" loc="30:/home/wsn/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb6b35850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7345db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6b06d58"/>
        <function-ref name="fired" scoped="" ref="0xb6b06528"/>
        <function-ref name="startAt" scoped="" ref="0xb6b06a18"/>
        <function-ref name="isRunning" scoped="" ref="0xb6b067a0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb6b05010"/>
        <function-ref name="start" scoped="" ref="0xb6b06010"/>
        <function-ref name="stop" scoped="" ref="0xb6b062b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6b2e480" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6b2e480"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb73d65d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb73d65d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6b2e658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6b2e868" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6b2e868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6b252e0"/>
        <function-ref name="test" scoped="" ref="0xb6b26dd0"/>
        <function-ref name="get" scoped="" ref="0xb6b2eeb0"/>
        <function-ref name="setScale" scoped="" ref="0xb6b25558"/>
        <function-ref name="getScale" scoped="" ref="0xb6b257f8"/>
        <function-ref name="reset" scoped="" ref="0xb6b26668"/>
        <function-ref name="overflow" scoped="" ref="0xb6b263f0"/>
        <function-ref name="isOn" scoped="" ref="0xb6b25068"/>
        <function-ref name="set" scoped="" ref="0xb6b26150"/>
        <function-ref name="start" scoped="" ref="0xb6b268e0"/>
        <function-ref name="stop" scoped="" ref="0xb6b26b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb61ccc78" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb61ccc78"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0xb73d63d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0xb73d63d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7345db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb61c9150"/>
        <function-ref name="fired" scoped="" ref="0xb61cb908"/>
        <function-ref name="startAt" scoped="" ref="0xb61cbdf8"/>
        <function-ref name="isRunning" scoped="" ref="0xb61cbb80"/>
        <function-ref name="getAlarm" scoped="" ref="0xb61c93c8"/>
        <function-ref name="start" scoped="" ref="0xb61cb3f0"/>
        <function-ref name="stop" scoped="" ref="0xb61cb690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0xb61c7978" loc="58:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0xb61c7978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb61c6f08"/>
        <function-ref name="fired" scoped="" ref="0xb61c6528"/>
        <function-ref name="get" scoped="" ref="0xb61c6010"/>
        <function-ref name="reset" scoped="" ref="0xb61c67a0"/>
        <function-ref name="isOn" scoped="" ref="0xb61c41a0"/>
        <function-ref name="set" scoped="" ref="0xb61c6288"/>
        <function-ref name="start" scoped="" ref="0xb61c6a18"/>
        <function-ref name="stop" scoped="" ref="0xb61c6c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0xb61c9688" loc="57:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0xb61c9688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb61c71a0"/>
        <function-ref name="test" scoped="" ref="0xb61c8c90"/>
        <function-ref name="get" scoped="" ref="0xb61c9cd0"/>
        <function-ref name="setScale" scoped="" ref="0xb61c7418"/>
        <function-ref name="getScale" scoped="" ref="0xb61c76b8"/>
        <function-ref name="reset" scoped="" ref="0xb61c8528"/>
        <function-ref name="overflow" scoped="" ref="0xb61c82b0"/>
        <function-ref name="isOn" scoped="" ref="0xb61c8f08"/>
        <function-ref name="set" scoped="" ref="0xb61c8010"/>
        <function-ref name="start" scoped="" ref="0xb61c87a0"/>
        <function-ref name="stop" scoped="" ref="0xb61c8a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6b021d0" loc="39:/home/wsn/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6b021d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb736b010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6b02818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6aff3a0" loc="24:/home/wsn/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6aff3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7345db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6affaf0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6afe010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6affd68"/>
        <function-ref name="overflow" scoped="" ref="0xb6afe288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6afcb30" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6afcb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TOne" ref="0xb7345db0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6afb308"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6afb7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6afb580"/>
        <function-ref name="overflow" scoped="" ref="0xb6afba70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb6afbd50" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb6afbd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb6aef7f0"/>
        <function-ref name="test" scoped="" ref="0xb6aef300"/>
        <function-ref name="get" scoped="" ref="0xb6af13e0"/>
        <function-ref name="setScale" scoped="" ref="0xb6aefa68"/>
        <function-ref name="getScale" scoped="" ref="0xb6aefd08"/>
        <function-ref name="reset" scoped="" ref="0xb6af1b70"/>
        <function-ref name="overflow" scoped="" ref="0xb6af18f8"/>
        <function-ref name="isOn" scoped="" ref="0xb6aef578"/>
        <function-ref name="set" scoped="" ref="0xb6af1658"/>
        <function-ref name="start" scoped="" ref="0xb6af1de8"/>
        <function-ref name="stop" scoped="" ref="0xb6aef088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb6adc0e0" loc="63:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xb6adc0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb736b010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6adc830"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6adcd20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6adcaa8"/>
        <function-ref name="overflow" scoped="" ref="0xb6adb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6b00e60" loc="62:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6b00e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb736b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6aed5e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6aedad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6aed858"/>
        <function-ref name="overflow" scoped="" ref="0xb6aedd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb6adbf18" loc="48:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb6adbf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb736b010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6ada578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb6ada8c8" loc="49:/home/wsn/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6ada8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb736b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6ad9048"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6ad9538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6ad92c0"/>
        <function-ref name="overflow" scoped="" ref="0xb6ad97b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0xb6ad4010" loc="36:/home/wsn/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb6ad4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb736b010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb6ad4760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6aa3d50" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6aa3d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6aa3f28"/>
        <function-ref name="getPayload" scoped="" ref="0xb6847018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb68470f8"/>
        <function-ref name="cancel" scoped="" ref="0xb68471d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb68472b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb68473f8" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb68473f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb68475d0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb68476b0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6847790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6847870"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6847950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6847a90" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6847a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6847c68"/>
        <function-ref name="source" scoped="" ref="0xb6847d48"/>
        <function-ref name="address" scoped="" ref="0xb6847e28"/>
        <function-ref name="destination" scoped="" ref="0xb6847f08"/>
        <function-ref name="setSource" scoped="" ref="0xb6846010"/>
        <function-ref name="setDestination" scoped="" ref="0xb68460f0"/>
        <function-ref name="type" scoped="" ref="0xb68461d0"/>
        <function-ref name="setType" scoped="" ref="0xb68462b0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6846390"/>
        <function-ref name="setGroup" scoped="" ref="0xb6846470"/>
        <function-ref name="localGroup" scoped="" ref="0xb6846550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb68466b0" loc="52:/home/wsn/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb68466b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6846888"/>
        <function-ref name="noAck" scoped="" ref="0xb6846968"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6846a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb61ada18" loc="44:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb61ada18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb61adbf0"/>
        <function-ref name="getPayload" scoped="" ref="0xb61adcd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb61addb0"/>
        <function-ref name="cancel" scoped="" ref="0xb61ade90"/>
        <function-ref name="sendDone" scoped="" ref="0xb61aa010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xb61aa180" loc="46:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb61aa180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb61aa358"/>
        <function-ref name="getPayload" scoped="" ref="0xb61aa438"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb61aa518"/>
        <function-ref name="cancel" scoped="" ref="0xb61aa5f8"/>
        <function-ref name="sendDone" scoped="" ref="0xb61aa6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb61aa818" loc="47:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb61aa818"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb61aa9f0"/>
        <function-ref name="source" scoped="" ref="0xb61aaad0"/>
        <function-ref name="address" scoped="" ref="0xb61aabb0"/>
        <function-ref name="destination" scoped="" ref="0xb61aac90"/>
        <function-ref name="setSource" scoped="" ref="0xb61aad70"/>
        <function-ref name="setDestination" scoped="" ref="0xb61aae50"/>
        <function-ref name="type" scoped="" ref="0xb61a9010"/>
        <function-ref name="setType" scoped="" ref="0xb61a90f0"/>
        <function-ref name="isForMe" scoped="" ref="0xb61a91d0"/>
        <function-ref name="setGroup" scoped="" ref="0xb61a92b0"/>
        <function-ref name="localGroup" scoped="" ref="0xb61a9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6a94990" loc="44:/home/wsn/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6a94990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a94b68"/>
        <function-ref name="getPayload" scoped="" ref="0xb6a94c48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a94d28"/>
        <function-ref name="cancel" scoped="" ref="0xb6a94e08"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a94ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb6a670a8" loc="48:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6a670a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a67290"/>
        <function-ref name="getPayload" scoped="" ref="0xb6a67370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a67450"/>
        <function-ref name="cancel" scoped="" ref="0xb6a67530"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a67610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6a68908" loc="46:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6a68908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a68af0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6a68bd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a68cb0"/>
        <function-ref name="cancel" scoped="" ref="0xb6a68d90"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a68e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb6a663f0" loc="50:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6a663f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a665c8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a666a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6a66788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a66868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a66948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0xb6a66ac8" loc="169:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0xb6a66ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6a66ca0"/>
        <function-ref name="runTask" scoped="" ref="0xb6a66d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0xb6a66f00" loc="126:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0xb6a66f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6a650f0"/>
        <function-ref name="runTask" scoped="" ref="0xb6a651d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb6a67750" loc="49:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6a67750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6a67928"/>
        <function-ref name="source" scoped="" ref="0xb6a67a08"/>
        <function-ref name="address" scoped="" ref="0xb6a67ae8"/>
        <function-ref name="destination" scoped="" ref="0xb6a67bc8"/>
        <function-ref name="setSource" scoped="" ref="0xb6a67ca8"/>
        <function-ref name="setDestination" scoped="" ref="0xb6a67d88"/>
        <function-ref name="type" scoped="" ref="0xb6a67e68"/>
        <function-ref name="setType" scoped="" ref="0xb6a66010"/>
        <function-ref name="isForMe" scoped="" ref="0xb6a660f0"/>
        <function-ref name="setGroup" scoped="" ref="0xb6a661d0"/>
        <function-ref name="localGroup" scoped="" ref="0xb6a662b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6a622e0" loc="46:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6a622e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6a624b8"/>
        <function-ref name="stopDone" scoped="" ref="0xb6a62598"/>
        <function-ref name="start" scoped="" ref="0xb6a62678"/>
        <function-ref name="stop" scoped="" ref="0xb6a62758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6a62bb8" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6a62bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a62d90"/>
        <function-ref name="getPayload" scoped="" ref="0xb6a62e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a61010"/>
        <function-ref name="cancel" scoped="" ref="0xb6a610f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a611d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6a61990" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6a61990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a61b68"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a61c48"/>
        <function-ref name="getPayload" scoped="" ref="0xb6a61d28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a61e08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a61ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6a61638" loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6a61638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a61810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6a5f370" loc="53:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6a5f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6a5f548"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6a5f628"/>
        <function-ref name="led1On" scoped="" ref="0xb6a5f708"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb6a5f7e8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6a5f8c8"/>
        <function-ref name="get" scoped="" ref="0xb6a5f9a8"/>
        <function-ref name="led1Off" scoped="" ref="0xb6a5fa88"/>
        <function-ref name="led2Off" scoped="" ref="0xb6a5fe08"/>
        <function-ref name="set" scoped="" ref="0xb6a5fb68"/>
        <function-ref name="led0On" scoped="" ref="0xb6a5fc48"/>
        <function-ref name="led2On" scoped="" ref="0xb6a5fd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb6a60d70" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6a60d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6a5f010"/>
        <function-ref name="noAck" scoped="" ref="0xb6a5f0f0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6a5f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6a600b8" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6a600b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6a60290"/>
        <function-ref name="source" scoped="" ref="0xb6a60370"/>
        <function-ref name="address" scoped="" ref="0xb6a60450"/>
        <function-ref name="destination" scoped="" ref="0xb6a60530"/>
        <function-ref name="setSource" scoped="" ref="0xb6a60610"/>
        <function-ref name="setDestination" scoped="" ref="0xb6a606f0"/>
        <function-ref name="type" scoped="" ref="0xb6a607d0"/>
        <function-ref name="setType" scoped="" ref="0xb6a608b0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6a60990"/>
        <function-ref name="setGroup" scoped="" ref="0xb6a60a70"/>
        <function-ref name="localGroup" scoped="" ref="0xb6a60b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6a2b9f8" loc="54:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6a2b9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a2bbd0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6a2bcb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a2bd90"/>
        <function-ref name="cancel" scoped="" ref="0xb6a2be70"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a2a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6a2a170" loc="55:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6a2a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a2a348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6a5d738" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6a5d738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a5d920"/>
        <function-ref name="getPayload" scoped="" ref="0xb6a5da00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a5dae0"/>
        <function-ref name="cancel" scoped="" ref="0xb6a5dbc0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a5dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6a5cd88" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6a5cd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6a2b010"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6a2b0f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb6a2b1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a2b2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6a2b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6a5de78" loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6a5de78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a5c070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb6a2b4d0" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6a2b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6a2b6a8"/>
        <function-ref name="noAck" scoped="" ref="0xb6a2b788"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6a2b868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6a5c1b0" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6a5c1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6a5c388"/>
        <function-ref name="source" scoped="" ref="0xb6a5c468"/>
        <function-ref name="address" scoped="" ref="0xb6a5c548"/>
        <function-ref name="destination" scoped="" ref="0xb6a5c628"/>
        <function-ref name="setSource" scoped="" ref="0xb6a5c708"/>
        <function-ref name="setDestination" scoped="" ref="0xb6a5c7e8"/>
        <function-ref name="type" scoped="" ref="0xb6a5c8c8"/>
        <function-ref name="setType" scoped="" ref="0xb6a5c9a8"/>
        <function-ref name="isForMe" scoped="" ref="0xb6a5ca88"/>
        <function-ref name="setGroup" scoped="" ref="0xb6a5cb68"/>
        <function-ref name="localGroup" scoped="" ref="0xb6a5cc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6a298f0" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6a298f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6a29ac8"/>
        <function-ref name="stopDone" scoped="" ref="0xb6a29ba8"/>
        <function-ref name="start" scoped="" ref="0xb6a29c88"/>
        <function-ref name="stop" scoped="" ref="0xb6a29d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6a267e0" loc="52:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6a267e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb72becd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6a269b8"/>
        <function-ref name="getPayload" scoped="" ref="0xb6a26a98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6a26b78"/>
        <function-ref name="cancel" scoped="" ref="0xb6a26c58"/>
        <function-ref name="sendDone" scoped="" ref="0xb6a26d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6a29558" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6a29558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6a29730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6a261d8" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6a261d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb72becd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6a263b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6a243f0" loc="56:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6a243f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6a245c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6a246a8"/>
        <function-ref name="led1On" scoped="" ref="0xb6a24788"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb6a24868"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6a24948"/>
        <function-ref name="get" scoped="" ref="0xb6a24a28"/>
        <function-ref name="led1Off" scoped="" ref="0xb6a24b08"/>
        <function-ref name="led2Off" scoped="" ref="0xb6a24e88"/>
        <function-ref name="set" scoped="" ref="0xb6a24be8"/>
        <function-ref name="led0On" scoped="" ref="0xb6a24cc8"/>
        <function-ref name="led2On" scoped="" ref="0xb6a24da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0xb6a22ea8" loc="55:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0xb6a22ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb72becd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb6a240c0"/>
        <function-ref name="offset" scoped="" ref="0xb6a241a0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb6a24280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb6a10978" loc="66:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb6a10978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6a10b50"/>
        <function-ref name="stopDone" scoped="" ref="0xb6a10c30"/>
        <function-ref name="start" scoped="" ref="0xb6a10d10"/>
        <function-ref name="stop" scoped="" ref="0xb6a10df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0xb69d59d0" loc="332:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0xb69d59d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb69d5ba8"/>
        <function-ref name="runTask" scoped="" ref="0xb69d5c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0xb6a0ea40" loc="74:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0xb6a0ea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6a0ec18"/>
        <function-ref name="stop" scoped="" ref="0xb6a0ecf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0xb69f5d40" loc="191:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0xb69f5d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb69f5f18"/>
        <function-ref name="runTask" scoped="" ref="0xb69f4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6a105e0" loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6a105e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6a107b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0xb6a04a40" loc="75:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0xb6a04a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0xb6a04c18"/>
        <function-ref name="flush" scoped="" ref="0xb6a04cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0xb69d6220" loc="322:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0xb69d6220"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb69d63f8"/>
        <function-ref name="runTask" scoped="" ref="0xb69d64d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0xb6a05400" loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0xb6a05400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0xb6a055d8"/>
        <function-ref name="resetSend" scoped="" ref="0xb6a056b8"/>
        <function-ref name="dataReceived" scoped="" ref="0xb6a05798"/>
        <function-ref name="resetReceive" scoped="" ref="0xb6a05878"/>
        <function-ref name="putData" scoped="" ref="0xb6a05958"/>
        <function-ref name="putDone" scoped="" ref="0xb6a05a38"/>
        <function-ref name="delimiterReceived" scoped="" ref="0xb6a05b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6a05c88" loc="73:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6a05c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6a05e60"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6a0e010"/>
        <function-ref name="led1On" scoped="" ref="0xb6a0e0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb6a0e1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6a0e2b0"/>
        <function-ref name="get" scoped="" ref="0xb6a0e390"/>
        <function-ref name="led1Off" scoped="" ref="0xb6a0e470"/>
        <function-ref name="led2Off" scoped="" ref="0xb6a0e7f0"/>
        <function-ref name="set" scoped="" ref="0xb6a0e550"/>
        <function-ref name="led0On" scoped="" ref="0xb6a0e630"/>
        <function-ref name="led2On" scoped="" ref="0xb6a0e710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0xb69d3610" loc="341:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0xb69d3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb69d37e8"/>
        <function-ref name="runTask" scoped="" ref="0xb69d38c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0xb6a0a098" loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0xb6a0a098"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0xb6a0a270"/>
        <function-ref name="nextByte" scoped="" ref="0xb6a0a350"/>
        <function-ref name="startSend" scoped="" ref="0xb6a0a430"/>
        <function-ref name="sendCompleted" scoped="" ref="0xb6a0a510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0xb6a082a8" loc="68:/home/wsn/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb6a082a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0xb6a08480"/>
        <function-ref name="byteReceived" scoped="" ref="0xb6a08560"/>
        <function-ref name="endPacket" scoped="" ref="0xb6a08640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0xb6960e48" loc="275:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0xb6960e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb695e050"/>
        <function-ref name="runTask" scoped="" ref="0xb695e130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb699aa90" loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb699aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb72becd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb699ac78"/>
        <function-ref name="getPayload" scoped="" ref="0xb699ad58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb699ae38"/>
        <function-ref name="cancel" scoped="" ref="0xb699af18"/>
        <function-ref name="sendDone" scoped="" ref="0xb6961010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0xb695e2b0" loc="158:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0xb695e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb695e488"/>
        <function-ref name="runTask" scoped="" ref="0xb695e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb699a6d0" loc="50:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb699a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb72becd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb699a8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0xb6961238" loc="54:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0xb6961238"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0xb72becd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb6961420"/>
        <function-ref name="offset" scoped="" ref="0xb6961500"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb69615e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6960230" loc="57:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6960230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6960408"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb69604e8"/>
        <function-ref name="led1On" scoped="" ref="0xb69605c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb69606a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6960788"/>
        <function-ref name="get" scoped="" ref="0xb6960868"/>
        <function-ref name="led1Off" scoped="" ref="0xb6960948"/>
        <function-ref name="led2On" scoped="" ref="0xb6960cc8"/>
        <function-ref name="set" scoped="" ref="0xb6960b08"/>
        <function-ref name="led2Off" scoped="" ref="0xb6960a28"/>
        <function-ref name="led0On" scoped="" ref="0xb6960be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0xb6961bf8" loc="56:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0xb6961bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0xb6961dd0"/>
        <function-ref name="nextByte" scoped="" ref="0xb6961eb0"/>
        <function-ref name="startSend" scoped="" ref="0xb6960010"/>
        <function-ref name="sendCompleted" scoped="" ref="0xb69600f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0xb6961720" loc="55:/home/wsn/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0xb6961720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0xb69618f8"/>
        <function-ref name="byteReceived" scoped="" ref="0xb69619d8"/>
        <function-ref name="endPacket" scoped="" ref="0xb6961ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0xb6953990" loc="50:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb6953990"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6953b68"/>
        <function-ref name="receivedByte" scoped="" ref="0xb6953c48"/>
        <function-ref name="receive" scoped="" ref="0xb6953d28"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb6953e08"/>
        <function-ref name="receiveDone" scoped="" ref="0xb6953ee8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb6959010"/>
        <function-ref name="sendDone" scoped="" ref="0xb69590f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0xb695d6a8" loc="48:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0xb695d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0xb695d880"/>
        <function-ref name="resetSend" scoped="" ref="0xb695d960"/>
        <function-ref name="dataReceived" scoped="" ref="0xb695da40"/>
        <function-ref name="resetReceive" scoped="" ref="0xb695db20"/>
        <function-ref name="putData" scoped="" ref="0xb695dc00"/>
        <function-ref name="putDone" scoped="" ref="0xb695dce0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0xb695ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6959260" loc="51:/home/wsn/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6959260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6959438"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6959518"/>
        <function-ref name="led1On" scoped="" ref="0xb69595f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb69596d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb69597b8"/>
        <function-ref name="get" scoped="" ref="0xb6959898"/>
        <function-ref name="led1Off" scoped="" ref="0xb6959978"/>
        <function-ref name="led2Off" scoped="" ref="0xb6959cf8"/>
        <function-ref name="set" scoped="" ref="0xb6959a58"/>
        <function-ref name="led0On" scoped="" ref="0xb6959b38"/>
        <function-ref name="led2On" scoped="" ref="0xb6959c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb6940488" loc="42:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xb6940488"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6940660"/>
        <function-ref name="receive" scoped="" ref="0xb6940740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb69445e8" loc="41:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb69445e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb69447c0"/>
        <function-ref name="receivedByte" scoped="" ref="0xb69448a0"/>
        <function-ref name="receive" scoped="" ref="0xb6944980"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb6944a60"/>
        <function-ref name="receiveDone" scoped="" ref="0xb6944b40"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb6944c20"/>
        <function-ref name="sendDone" scoped="" ref="0xb6944d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb6944168" loc="40:/home/wsn/tinyos-main/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb6944168"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6944340"/>
        <function-ref name="stop" scoped="" ref="0xb6944420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb693f308" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xb693f308"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb693f4e0"/>
        <function-ref name="receive" scoped="" ref="0xb693f5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb693f788" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb693f788"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb693f960"/>
        <function-ref name="receivedByte" scoped="" ref="0xb693fa40"/>
        <function-ref name="receive" scoped="" ref="0xb693fb20"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb693fc00"/>
        <function-ref name="receiveDone" scoped="" ref="0xb693fce0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb693fdc0"/>
        <function-ref name="sendDone" scoped="" ref="0xb693fea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb693e218" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb693e218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb736b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb693e968"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb693ee58"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb693ebe0"/>
        <function-ref name="overflow" scoped="" ref="0xb693d110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb6940e88" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb6940e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb693f070"/>
        <function-ref name="stop" scoped="" ref="0xb693f150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0xb693cae8" loc="50:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0xb693cae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb693ccc0"/>
        <function-ref name="receive" scoped="" ref="0xb693cda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0xb693b7b0" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0xb693b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb693b988"/>
        <function-ref name="stop" scoped="" ref="0xb693ba68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb693c398" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb693c398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb693c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0xb693cf00" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0xb693cf00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb693b0f0"/>
        <function-ref name="receivedByte" scoped="" ref="0xb693b1d0"/>
        <function-ref name="receive" scoped="" ref="0xb693b2b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0xb693b390"/>
        <function-ref name="receiveDone" scoped="" ref="0xb693b470"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0xb693b550"/>
        <function-ref name="sendDone" scoped="" ref="0xb693b630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb6914c88" loc="56:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6914c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb736b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb69133f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb69138e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6913668"/>
        <function-ref name="overflow" scoped="" ref="0xb6913b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0xb6914050" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0xb6914050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb6914228"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb6914308"/>
        <function-ref name="rxDone" scoped="" ref="0xb69143e8"/>
        <function-ref name="txDone" scoped="" ref="0xb69144c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb69145a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb6914688"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb6914768"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb6914848"/>
        <function-ref name="tx" scoped="" ref="0xb6914928"/>
        <function-ref name="rx" scoped="" ref="0xb6914a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb693c6d0" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb693c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb693c8a8"/>
        <function-ref name="stop" scoped="" ref="0xb693c988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0xb693bbe8" loc="54:/home/wsn/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0xb693bbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb693bdc0"/>
        <function-ref name="stop" scoped="" ref="0xb693bea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0xb69000b8" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0xb69000b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb6900290"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb6900370"/>
        <function-ref name="rxDone" scoped="" ref="0xb6900450"/>
        <function-ref name="txDone" scoped="" ref="0xb6900530"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb6900610"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb69006f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb69007d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb69008b0"/>
        <function-ref name="tx" scoped="" ref="0xb6900990"/>
        <function-ref name="rx" scoped="" ref="0xb6900a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0xb68ff760" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0xb68ff760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb68ff938"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb68ffa18"/>
        <function-ref name="rxDone" scoped="" ref="0xb68ffaf8"/>
        <function-ref name="txDone" scoped="" ref="0xb68ffbd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb68ffcb8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb68ffd98"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb68ffe78"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb68fe010"/>
        <function-ref name="tx" scoped="" ref="0xb68fe0f0"/>
        <function-ref name="rx" scoped="" ref="0xb68fe1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0xb6901b98" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0xb6901b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6901d70"/>
        <function-ref name="stop" scoped="" ref="0xb6901e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0xb6900cc8" loc="51:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0xb6900cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6900ea0"/>
        <function-ref name="stop" scoped="" ref="0xb68ff010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0xb68ff268" loc="52:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0xb68ff268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb68ff440"/>
        <function-ref name="stop" scoped="" ref="0xb68ff520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0xb6901688" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0xb6901688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6901860"/>
        <function-ref name="stop" scoped="" ref="0xb6901940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0xb68fea00" loc="114:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0xb68fea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68febd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0xb68fb8c0" loc="117:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0xb68fb8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb68fba98"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb68fbb78"/>
        <function-ref name="rxDone" scoped="" ref="0xb68fbc58"/>
        <function-ref name="txDone" scoped="" ref="0xb68fbd38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb68fbe18"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb68fbef8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb68fa010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb68fa0f0"/>
        <function-ref name="tx" scoped="" ref="0xb68fa1d0"/>
        <function-ref name="rx" scoped="" ref="0xb68fa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0xb68fa4c0" loc="119:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0xb68fa4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb68fa698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0xb68f9390" loc="122:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0xb68f9390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0xb68f9568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0xb68f9648"/>
        <function-ref name="rxDone" scoped="" ref="0xb68f9728"/>
        <function-ref name="txDone" scoped="" ref="0xb68f9808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0xb68f98e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0xb68f99c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0xb68f9aa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0xb68f9b88"/>
        <function-ref name="tx" scoped="" ref="0xb68f9c68"/>
        <function-ref name="rx" scoped="" ref="0xb68f9d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0xb68fb3a8" loc="116:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0xb68fb3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb68fb580"/>
        <function-ref name="stop" scoped="" ref="0xb68fb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0xb68fa910" loc="120:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0xb68fa910"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb68faae8"/>
        <function-ref name="stop" scoped="" ref="0xb68fabc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0xb68fae40" loc="121:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0xb68fae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb68f9050"/>
        <function-ref name="stop" scoped="" ref="0xb68f9130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0xb68f7010" loc="124:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb68f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb68f71e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb68f72c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb68f73a8"/>
        <function-ref name="actualMicro" scoped="" ref="0xb68f7488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb68f7568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xb68f7750" loc="125:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb68f7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb68f7928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0xb68fee50" loc="115:/home/wsn/tinyos-main/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0xb68fee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb68fb050"/>
        <function-ref name="stop" scoped="" ref="0xb68fb130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb68c5628" loc="24:/home/wsn/tinyos-main/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb68c5628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb736b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68c5d78"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68c1288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68c1010"/>
        <function-ref name="overflow" scoped="" ref="0xb68c1500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb68be088" loc="24:/home/wsn/tinyos-main/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb68be088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TThree" ref="0xb7343010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb68be7d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68becc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68bea50"/>
        <function-ref name="overflow" scoped="" ref="0xb68bd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb68b8db0" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb68b8db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb68b7010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb68b70f0"/>
        <function-ref name="getControlA" scoped="" ref="0xb68b71d0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb68b72b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb68b7390"/>
        <function-ref name="setControlB" scoped="" ref="0xb68b7470"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb68b7550"/>
        <function-ref name="getControlB" scoped="" ref="0xb68b7630"/>
        <function-ref name="setControlC" scoped="" ref="0xb68b7710"/>
        <function-ref name="setControlA" scoped="" ref="0xb68b77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb68b7b28" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb68b7b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb68b5640"/>
        <function-ref name="test" scoped="" ref="0xb68b5150"/>
        <function-ref name="get" scoped="" ref="0xb68b6200"/>
        <function-ref name="captured" scoped="" ref="0xb68b6718"/>
        <function-ref name="reset" scoped="" ref="0xb68b69b8"/>
        <function-ref name="isOn" scoped="" ref="0xb68b53c8"/>
        <function-ref name="set" scoped="" ref="0xb68b6478"/>
        <function-ref name="start" scoped="" ref="0xb68b6c30"/>
        <function-ref name="stop" scoped="" ref="0xb68b6ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb68b5d50" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb68b5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb68b2300"/>
        <function-ref name="fired" scoped="" ref="0xb68b48f8"/>
        <function-ref name="get" scoped="" ref="0xb68b43e0"/>
        <function-ref name="reset" scoped="" ref="0xb68b4b70"/>
        <function-ref name="isOn" scoped="" ref="0xb68b2578"/>
        <function-ref name="set" scoped="" ref="0xb68b4658"/>
        <function-ref name="start" scoped="" ref="0xb68b4de8"/>
        <function-ref name="stop" scoped="" ref="0xb68b2088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb68bdaa8" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb68bdaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb68b8538"/>
        <function-ref name="test" scoped="" ref="0xb68b8048"/>
        <function-ref name="get" scoped="" ref="0xb68ba120"/>
        <function-ref name="setScale" scoped="" ref="0xb68b87b0"/>
        <function-ref name="getScale" scoped="" ref="0xb68b8a50"/>
        <function-ref name="reset" scoped="" ref="0xb68ba8b0"/>
        <function-ref name="overflow" scoped="" ref="0xb68ba638"/>
        <function-ref name="isOn" scoped="" ref="0xb68b82c0"/>
        <function-ref name="set" scoped="" ref="0xb68ba398"/>
        <function-ref name="start" scoped="" ref="0xb68bab28"/>
        <function-ref name="stop" scoped="" ref="0xb68bada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb68ac530" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb68ac530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb68ac708"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb68ac7e8"/>
        <function-ref name="getControlA" scoped="" ref="0xb68ac8c8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb68ac9a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb68aca88"/>
        <function-ref name="setControlB" scoped="" ref="0xb68acb68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb68acc48"/>
        <function-ref name="getControlB" scoped="" ref="0xb68acd28"/>
        <function-ref name="setControlC" scoped="" ref="0xb68ace08"/>
        <function-ref name="setControlA" scoped="" ref="0xb68acee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xb68a8128" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xb68a8128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb68a7690"/>
        <function-ref name="fired" scoped="" ref="0xb68a8c88"/>
        <function-ref name="get" scoped="" ref="0xb68a8770"/>
        <function-ref name="reset" scoped="" ref="0xb68a8f00"/>
        <function-ref name="isOn" scoped="" ref="0xb68a7908"/>
        <function-ref name="set" scoped="" ref="0xb68a89e8"/>
        <function-ref name="start" scoped="" ref="0xb68a71a0"/>
        <function-ref name="stop" scoped="" ref="0xb68a7418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb68ab258" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb68ab258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb68aacc0"/>
        <function-ref name="test" scoped="" ref="0xb68aa7d0"/>
        <function-ref name="get" scoped="" ref="0xb68ab8a0"/>
        <function-ref name="captured" scoped="" ref="0xb68abdb8"/>
        <function-ref name="reset" scoped="" ref="0xb68aa068"/>
        <function-ref name="isOn" scoped="" ref="0xb68aaa48"/>
        <function-ref name="set" scoped="" ref="0xb68abb18"/>
        <function-ref name="start" scoped="" ref="0xb68aa2e0"/>
        <function-ref name="stop" scoped="" ref="0xb68aa558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xb68a7d20" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xb68a7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb68a52c0"/>
        <function-ref name="fired" scoped="" ref="0xb68a68a8"/>
        <function-ref name="get" scoped="" ref="0xb68a6390"/>
        <function-ref name="reset" scoped="" ref="0xb68a6b20"/>
        <function-ref name="isOn" scoped="" ref="0xb68a5538"/>
        <function-ref name="set" scoped="" ref="0xb68a6608"/>
        <function-ref name="start" scoped="" ref="0xb68a6d98"/>
        <function-ref name="stop" scoped="" ref="0xb68a5048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xb68a5950" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xb68a5950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb68a3f08"/>
        <function-ref name="fired" scoped="" ref="0xb68a3528"/>
        <function-ref name="get" scoped="" ref="0xb68a3010"/>
        <function-ref name="reset" scoped="" ref="0xb68a37a0"/>
        <function-ref name="isOn" scoped="" ref="0xb68a21a0"/>
        <function-ref name="set" scoped="" ref="0xb68a3288"/>
        <function-ref name="start" scoped="" ref="0xb68a3a18"/>
        <function-ref name="stop" scoped="" ref="0xb68a3c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb68af230" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb68af230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb68aeca0"/>
        <function-ref name="test" scoped="" ref="0xb68ae7b0"/>
        <function-ref name="get" scoped="" ref="0xb68af878"/>
        <function-ref name="setScale" scoped="" ref="0xb68aef18"/>
        <function-ref name="getScale" scoped="" ref="0xb68ac1d0"/>
        <function-ref name="reset" scoped="" ref="0xb68ae048"/>
        <function-ref name="overflow" scoped="" ref="0xb68afd90"/>
        <function-ref name="isOn" scoped="" ref="0xb68aea28"/>
        <function-ref name="set" scoped="" ref="0xb68afaf0"/>
        <function-ref name="start" scoped="" ref="0xb68ae2c0"/>
        <function-ref name="stop" scoped="" ref="0xb68ae538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb685f440" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb685f440"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb73d65d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb73d65d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb685f618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb685f828" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb685f828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb685d2c0"/>
        <function-ref name="test" scoped="" ref="0xb685ed90"/>
        <function-ref name="get" scoped="" ref="0xb685fe70"/>
        <function-ref name="setScale" scoped="" ref="0xb685d538"/>
        <function-ref name="getScale" scoped="" ref="0xb685d7d8"/>
        <function-ref name="reset" scoped="" ref="0xb685e628"/>
        <function-ref name="overflow" scoped="" ref="0xb685e3b0"/>
        <function-ref name="isOn" scoped="" ref="0xb685d048"/>
        <function-ref name="set" scoped="" ref="0xb685e110"/>
        <function-ref name="start" scoped="" ref="0xb685e8a0"/>
        <function-ref name="stop" scoped="" ref="0xb685eb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb6862a68" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb6862a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TThree" ref="0xb7343010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb685b200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb685b6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb685b478"/>
        <function-ref name="overflow" scoped="" ref="0xb685b968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb685bc48" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb685bc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb68596a0"/>
        <function-ref name="test" scoped="" ref="0xb68591b0"/>
        <function-ref name="get" scoped="" ref="0xb685a2a8"/>
        <function-ref name="setScale" scoped="" ref="0xb6859918"/>
        <function-ref name="getScale" scoped="" ref="0xb6859bb8"/>
        <function-ref name="reset" scoped="" ref="0xb685aa38"/>
        <function-ref name="overflow" scoped="" ref="0xb685a7c0"/>
        <function-ref name="isOn" scoped="" ref="0xb6859428"/>
        <function-ref name="set" scoped="" ref="0xb685a520"/>
        <function-ref name="start" scoped="" ref="0xb685acb0"/>
        <function-ref name="stop" scoped="" ref="0xb685af28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb6856cd8" loc="63:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xb6856cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TThree" ref="0xb7343010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6854478"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb6854968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb68546f0"/>
        <function-ref name="overflow" scoped="" ref="0xb6854be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb68bfa10" loc="62:/home/wsn/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb68bfa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736ddc0"/>
            <typename><typedef-ref name="TMicro" ref="0xb736b010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb6856200"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb68566f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb6856478"/>
        <function-ref name="overflow" scoped="" ref="0xb6856968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0xb6852728" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0xb6852728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0xb6852900"/>
        <function-ref name="offset" scoped="" ref="0xb68529e0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0xb6852ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0xb6844638" loc="43:/home/wsn/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb6844638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0xb68435e0"/>
        <function-ref name="enqueue" scoped="" ref="0xb6843cc0"/>
        <function-ref name="element" scoped="" ref="0xb682e048"/>
        <function-ref name="full" scoped="" ref="0xb6844eb8"/>
        <function-ref name="maxSize" scoped="" ref="0xb6843388"/>
        <function-ref name="dequeue" scoped="" ref="0xb6843950"/>
        <function-ref name="empty" scoped="" ref="0xb6844c60"/>
        <function-ref name="size" scoped="" ref="0xb6843130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb68290e0" loc="93:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb68290e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0xb6828088"/>
        <function-ref name="enqueue" scoped="" ref="0xb6828768"/>
        <function-ref name="element" scoped="" ref="0xb6828ab8"/>
        <function-ref name="full" scoped="" ref="0xb6829960"/>
        <function-ref name="maxSize" scoped="" ref="0xb6829e10"/>
        <function-ref name="dequeue" scoped="" ref="0xb68283f8"/>
        <function-ref name="empty" scoped="" ref="0xb6829708"/>
        <function-ref name="size" scoped="" ref="0xb6829bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb6828e48" loc="94:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6828e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6827050"/>
        <function-ref name="getPayload" scoped="" ref="0xb6827130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6827210"/>
        <function-ref name="cancel" scoped="" ref="0xb68272f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb68273d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb6827550" loc="95:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6827550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6827728"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6827808"/>
        <function-ref name="getPayload" scoped="" ref="0xb68278e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb68279c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6827aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0xb6823300" loc="114:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="retrySend" scoped="" ref="0xb6823300"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb68234d8"/>
        <function-ref name="runTask" scoped="" ref="0xb68235b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb682ee08" loc="89:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb682ee08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb682a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6827c18" loc="96:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6827c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6827df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb6827ed0"/>
        <function-ref name="led1On" scoped="" ref="0xb6826010"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb68260f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb68261d0"/>
        <function-ref name="get" scoped="" ref="0xb68262b0"/>
        <function-ref name="led1Off" scoped="" ref="0xb6826390"/>
        <function-ref name="led2Off" scoped="" ref="0xb6826710"/>
        <function-ref name="set" scoped="" ref="0xb6826470"/>
        <function-ref name="led0On" scoped="" ref="0xb6826550"/>
        <function-ref name="led2On" scoped="" ref="0xb6826630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0xb682abe8" loc="90:/home/wsn/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0xb682abe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0xb682adc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0xb682ba10" loc="43:/home/wsn/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0xb682ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0xb682bbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6810ce0" loc="94:/home/wsn/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6810ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6810eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0xb680f0a8" loc="95:/home/wsn/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0xb680f0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0xb680f280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xb6812388" loc="39:/home/wsn/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb6812388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb6812560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0xb68127c8" loc="40:/home/wsn/tinyos-main/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0xb68127c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb68129a0"/>
        <function-ref name="stopDone" scoped="" ref="0xb6812a80"/>
        <function-ref name="start" scoped="" ref="0xb6812b60"/>
        <function-ref name="stop" scoped="" ref="0xb6812c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0xb67e7b90" loc="59:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0xb67e7b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0xb67e7d68"/>
        <function-ref name="setRoot" scoped="" ref="0xb67e7e48"/>
        <function-ref name="unsetRoot" scoped="" ref="0xb67e7f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0xb67f9548" loc="54:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0xb67f9548"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb67f9720"/>
        <function-ref name="setOrigin" scoped="" ref="0xb67f9800"/>
        <function-ref name="setType" scoped="" ref="0xb67f98e0"/>
        <function-ref name="getOrigin" scoped="" ref="0xb67f99c0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb67f9aa0"/>
        <function-ref name="getType" scoped="" ref="0xb67f9b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0xb67df550" loc="65:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0xb67df550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0xb67df728"/>
        <function-ref name="logEventMsg" scoped="" ref="0xb67df808"/>
        <function-ref name="logEventSimple" scoped="" ref="0xb67df8e8"/>
        <function-ref name="logEventRoute" scoped="" ref="0xb67df9c8"/>
        <function-ref name="logEventDbg" scoped="" ref="0xb67dfaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0xb67feec0" loc="51:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0xb67feec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0xb6aa5dd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0xb68000c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6800240" loc="53:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6800240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6800418"/>
        <function-ref name="payloadLength" scoped="" ref="0xb68004f8"/>
        <function-ref name="getPayload" scoped="" ref="0xb68005d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb68006b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6800798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb6801250" loc="50:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb6801250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0xb6aa5dd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6801428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb6802178" loc="48:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6802178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6802350"/>
        <function-ref name="getPayload" scoped="" ref="0xb6802430"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6802510"/>
        <function-ref name="cancel" scoped="" ref="0xb68025f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb68026d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0xb67e9e68" loc="57:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0xb67e9e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0xb67fd050"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0xb67fd130"/>
        <function-ref name="numNeighbors" scoped="" ref="0xb67fd210"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0xb67fd2f0"/>
        <function-ref name="getEtx" scoped="" ref="0xb67fd3d0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0xb67fd4b0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0xb67fd590"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0xb67fd670"/>
        <function-ref name="getParent" scoped="" ref="0xb67fd750"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0xb67fd830"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0xb67fd910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6802b88" loc="49:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6802b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0xb6aa5dd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6802d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0xb67e7728" loc="58:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0xb67e7728"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0xb67e7900"/>
        <function-ref name="setClientCongested" scoped="" ref="0xb67e79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnicastNameFreeRouting" ref="0xb67e5570" loc="60:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0xb67e5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0xb67e5748"/>
        <function-ref name="routeFound" scoped="" ref="0xb67e5828"/>
        <function-ref name="nextHop" scoped="" ref="0xb67e5908"/>
        <function-ref name="noRoute" scoped="" ref="0xb67e59e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0xb67efa80" loc="55:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0xb67efa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb67efc58"/>
        <function-ref name="option" scoped="" ref="0xb67efd38"/>
        <function-ref name="setEtx" scoped="" ref="0xb67efe18"/>
        <function-ref name="setOrigin" scoped="" ref="0xb67efef8"/>
        <function-ref name="clearOption" scoped="" ref="0xb67ff010"/>
        <function-ref name="getEtx" scoped="" ref="0xb67ff0f0"/>
        <function-ref name="getOrigin" scoped="" ref="0xb67ff1d0"/>
        <function-ref name="setType" scoped="" ref="0xb67ff2b0"/>
        <function-ref name="setOption" scoped="" ref="0xb67ff390"/>
        <function-ref name="matchPacket" scoped="" ref="0xb67ff470"/>
        <function-ref name="getThl" scoped="" ref="0xb67ff550"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb67ff630"/>
        <function-ref name="matchInstance" scoped="" ref="0xb67ff710"/>
        <function-ref name="getType" scoped="" ref="0xb67ff870"/>
        <function-ref name="setThl" scoped="" ref="0xb67ff950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb6803a38" loc="47:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb6803a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb6803c10"/>
        <function-ref name="stop" scoped="" ref="0xb6803cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0xb67e3780" loc="64:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0xb67e3780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0xb67e39d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0xb67d71c0" loc="92:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0xb67d71c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0xb67d7398"/>
        <function-ref name="setRoot" scoped="" ref="0xb67d7478"/>
        <function-ref name="unsetRoot" scoped="" ref="0xb67d7558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0xb67dbbf0" loc="86:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0xb67dbbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb67dbdc8"/>
        <function-ref name="setOrigin" scoped="" ref="0xb67dbea8"/>
        <function-ref name="setType" scoped="" ref="0xb67da010"/>
        <function-ref name="getOrigin" scoped="" ref="0xb67da0f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb67da1d0"/>
        <function-ref name="getType" scoped="" ref="0xb67da2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0xb67d1178" loc="90:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0xb67d1178"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getLinkQuality" scoped="" ref="0xb67d1b30"/>
        <function-ref name="txAck" scoped="" ref="0xb67d1430"/>
        <function-ref name="pinNeighbor" scoped="" ref="0xb67d1510"/>
        <function-ref name="txNoAck" scoped="" ref="0xb67d15f0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0xb67d16d0"/>
        <function-ref name="evicted" scoped="" ref="0xb67d17b0"/>
        <function-ref name="clearDLQ" scoped="" ref="0xb67d1890"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0xb67d1970"/>
        <function-ref name="getForwardQuality" scoped="" ref="0xb67d1a50"/>
        <function-ref name="getReverseQuality" scoped="" ref="0xb67d1350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0xb67d6568" loc="98:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0xb67d6568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0xb67d6740"/>
        <function-ref name="logEventMsg" scoped="" ref="0xb67d6820"/>
        <function-ref name="logEventSimple" scoped="" ref="0xb67d6900"/>
        <function-ref name="logEventRoute" scoped="" ref="0xb67d69e0"/>
        <function-ref name="logEventDbg" scoped="" ref="0xb67d6ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0xb67db158" loc="83:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0xb67db158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0xb6aa5dd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0xb67db330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb67db4b0" loc="85:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb67db4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb67db688"/>
        <function-ref name="payloadLength" scoped="" ref="0xb67db768"/>
        <function-ref name="getPayload" scoped="" ref="0xb67db848"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb67db928"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb67dba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb67dca88" loc="82:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb67dca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0xb6aa5dd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb67dcc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb67dd970" loc="80:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb67dd970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb67ddb48"/>
        <function-ref name="getPayload" scoped="" ref="0xb67ddc28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb67ddd08"/>
        <function-ref name="cancel" scoped="" ref="0xb67ddde8"/>
        <function-ref name="sendDone" scoped="" ref="0xb67ddec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0xb67d94b8" loc="89:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0xb67d94b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0xb67d9690"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0xb67d9770"/>
        <function-ref name="numNeighbors" scoped="" ref="0xb67d9850"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0xb67d9930"/>
        <function-ref name="getEtx" scoped="" ref="0xb67d9a10"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0xb67d9af0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0xb67d9bd0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0xb67d9cb0"/>
        <function-ref name="getParent" scoped="" ref="0xb67d9d90"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0xb67d9e70"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0xb67d8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb67dc3d8" loc="81:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb67dc3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0xb6aa5dd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb67dc5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0xb67d1cf8" loc="91:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0xb67d1cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0xb67d1ed0"/>
        <function-ref name="setClientCongested" scoped="" ref="0xb67d7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnicastNameFreeRouting" ref="0xb67d7778" loc="93:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0xb67d7778"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0xb67d79d0"/>
        <function-ref name="routeFound" scoped="" ref="0xb67d7ab0"/>
        <function-ref name="nextHop" scoped="" ref="0xb67d7b90"/>
        <function-ref name="noRoute" scoped="" ref="0xb67d7c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0xb67da450" loc="87:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0xb67da450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb67da628"/>
        <function-ref name="option" scoped="" ref="0xb67da708"/>
        <function-ref name="setEtx" scoped="" ref="0xb67da7e8"/>
        <function-ref name="setOrigin" scoped="" ref="0xb67da8c8"/>
        <function-ref name="clearOption" scoped="" ref="0xb67da9a8"/>
        <function-ref name="getEtx" scoped="" ref="0xb67daa88"/>
        <function-ref name="getOrigin" scoped="" ref="0xb67dab68"/>
        <function-ref name="setType" scoped="" ref="0xb67dac48"/>
        <function-ref name="setOption" scoped="" ref="0xb67dad28"/>
        <function-ref name="matchPacket" scoped="" ref="0xb67dae08"/>
        <function-ref name="getThl" scoped="" ref="0xb67daee8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb67d9010"/>
        <function-ref name="matchInstance" scoped="" ref="0xb67d90f0"/>
        <function-ref name="getType" scoped="" ref="0xb67d9250"/>
        <function-ref name="setThl" scoped="" ref="0xb67d9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb67dd240" loc="79:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb67dd240"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb67dd418"/>
        <function-ref name="stop" scoped="" ref="0xb67dd4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0xb67d61b8" loc="97:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0xb67d61b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0xb67d6390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb6709a18" loc="142:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb6709a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6709bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0xb6708c50" loc="145:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0xb6708c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0xb6708e28"/>
        <function-ref name="setRoot" scoped="" ref="0xb6708f08"/>
        <function-ref name="unsetRoot" scoped="" ref="0xb6707010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb6716c38" loc="126:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb6716c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6716e10"/>
        <function-ref name="getPayload" scoped="" ref="0xb6716ef0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6715010"/>
        <function-ref name="cancel" scoped="" ref="0xb67150f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb67151d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0xb6704230" loc="156:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0xb6704230"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0xb6704408"/>
        <function-ref name="logEventMsg" scoped="" ref="0xb67044e8"/>
        <function-ref name="logEventSimple" scoped="" ref="0xb67045c8"/>
        <function-ref name="logEventRoute" scoped="" ref="0xb67046a8"/>
        <function-ref name="logEventDbg" scoped="" ref="0xb6704788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0xb6717078" loc="116:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0xb6717078"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb6717250"/>
        <function-ref name="setOrigin" scoped="" ref="0xb6717330"/>
        <function-ref name="setType" scoped="" ref="0xb6717410"/>
        <function-ref name="getOrigin" scoped="" ref="0xb67174f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb67175d0"/>
        <function-ref name="getType" scoped="" ref="0xb67176b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0xb6713b88" loc="129:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0xb6713b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getReverseQuality" scoped="" ref="0xb6711558"/>
        <function-ref name="txAck" scoped="" ref="0xb6713e40"/>
        <function-ref name="pinNeighbor" scoped="" ref="0xb6713f20"/>
        <function-ref name="txNoAck" scoped="" ref="0xb6711018"/>
        <function-ref name="insertNeighbor" scoped="" ref="0xb67110f8"/>
        <function-ref name="evicted" scoped="" ref="0xb67111d8"/>
        <function-ref name="clearDLQ" scoped="" ref="0xb67112b8"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0xb6711398"/>
        <function-ref name="getForwardQuality" scoped="" ref="0xb6711478"/>
        <function-ref name="getLinkQuality" scoped="" ref="0xb6713d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0xb670bca8" loc="140:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0xb670bca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
              <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0xb67092e8"/>
        <function-ref name="flush" scoped="" ref="0xb67097e8"/>
        <function-ref name="lookup" scoped="" ref="0xb6709568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0xb67186a8" loc="114:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0xb67186a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0xb6aa5dd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0xb6718890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb67189d0" loc="115:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb67189d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6718ba8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6718c88"/>
        <function-ref name="getPayload" scoped="" ref="0xb6718d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6718e48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6718f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb67182e8" loc="113:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb67182e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0xb6aa5dd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb67184d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb6706e08" loc="149:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb6706e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb6704010"/>
        <function-ref name="rand32" scoped="" ref="0xb67040f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb671a7b8" loc="111:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb671a7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb671a9a0"/>
        <function-ref name="getPayload" scoped="" ref="0xb671aa80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb671ab60"/>
        <function-ref name="cancel" scoped="" ref="0xb671ac40"/>
        <function-ref name="sendDone" scoped="" ref="0xb671ad20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0xb6715898" loc="128:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0xb6715898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb67134c8"/>
        <function-ref name="fired" scoped="" ref="0xb6714768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb6714e70"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6714c18"/>
        <function-ref name="getdt" scoped="" ref="0xb6713978"/>
        <function-ref name="gett0" scoped="" ref="0xb6713720"/>
        <function-ref name="isRunning" scoped="" ref="0xb67149c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6714010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb67131a8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb6714290"/>
        <function-ref name="stop" scoped="" ref="0xb6714510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0xb67048e8" loc="162:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0xb67048e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6704ac0"/>
        <function-ref name="stopDone" scoped="" ref="0xb6704ba0"/>
        <function-ref name="start" scoped="" ref="0xb6704c80"/>
        <function-ref name="stop" scoped="" ref="0xb6704d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0xb6704ee0" loc="234:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0xb6704ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb67030e0"/>
        <function-ref name="runTask" scoped="" ref="0xb67031c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0xb67103e8" loc="137:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0xb67103e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0xb67ca608"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0xb67ca890"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0xb670f388"/>
        <function-ref name="enqueue" scoped="" ref="0xb670fa68"/>
        <function-ref name="element" scoped="" ref="0xb670fdb8"/>
        <function-ref name="full" scoped="" ref="0xb6710c68"/>
        <function-ref name="maxSize" scoped="" ref="0xb670f130"/>
        <function-ref name="dequeue" scoped="" ref="0xb670f6f8"/>
        <function-ref name="empty" scoped="" ref="0xb6710a10"/>
        <function-ref name="size" scoped="" ref="0xb6710ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0xb6708078" loc="144:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0xb6708078"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0xb6708250"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0xb6708330"/>
        <function-ref name="numNeighbors" scoped="" ref="0xb6708410"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0xb67084f0"/>
        <function-ref name="getEtx" scoped="" ref="0xb67085d0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0xb67086b0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0xb6708790"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0xb6708870"/>
        <function-ref name="getParent" scoped="" ref="0xb6708950"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0xb6708a30"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0xb6708b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb6711c70" loc="131:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb6711c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6711e48"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6711f28"/>
        <function-ref name="getPayload" scoped="" ref="0xb6710018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb67100f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb67101d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb671a010" loc="109:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb671a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb671a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb671aef8" loc="112:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb671aef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0xb6aa5dd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb67180f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0xb67167f0" loc="118:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0xb67167f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0xb67169c8"/>
        <function-ref name="setClientCongested" scoped="" ref="0xb6716aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0xb6711698" loc="130:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0xb6711698"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0xb6711870"/>
        <function-ref name="routeFound" scoped="" ref="0xb6711950"/>
        <function-ref name="nextHop" scoped="" ref="0xb6711a30"/>
        <function-ref name="noRoute" scoped="" ref="0xb6711b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb6706230" loc="148:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb6706230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb6706408"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb67064e8"/>
        <function-ref name="led1On" scoped="" ref="0xb67065c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb67066a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb6706788"/>
        <function-ref name="get" scoped="" ref="0xb6706868"/>
        <function-ref name="led1Off" scoped="" ref="0xb6706948"/>
        <function-ref name="led2On" scoped="" ref="0xb6706cc8"/>
        <function-ref name="set" scoped="" ref="0xb6706b08"/>
        <function-ref name="led2Off" scoped="" ref="0xb6706a28"/>
        <function-ref name="led0On" scoped="" ref="0xb6706be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0xb6715310" loc="127:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb6715310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb67154e8"/>
        <function-ref name="noAck" scoped="" ref="0xb67155c8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb67156a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0xb67177f0" loc="117:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0xb67177f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb67179c8"/>
        <function-ref name="option" scoped="" ref="0xb6717aa8"/>
        <function-ref name="setEtx" scoped="" ref="0xb6717b88"/>
        <function-ref name="setOrigin" scoped="" ref="0xb6717c68"/>
        <function-ref name="clearOption" scoped="" ref="0xb6717d48"/>
        <function-ref name="getEtx" scoped="" ref="0xb6717e28"/>
        <function-ref name="getOrigin" scoped="" ref="0xb6717f08"/>
        <function-ref name="setType" scoped="" ref="0xb6716010"/>
        <function-ref name="setOption" scoped="" ref="0xb67160f0"/>
        <function-ref name="matchPacket" scoped="" ref="0xb67161d0"/>
        <function-ref name="getThl" scoped="" ref="0xb67162b0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb6716390"/>
        <function-ref name="matchInstance" scoped="" ref="0xb6716470"/>
        <function-ref name="getType" scoped="" ref="0xb67165d0"/>
        <function-ref name="setThl" scoped="" ref="0xb67166b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0xb670d1e0" loc="138:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0xb670d1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0xb67ca608"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0xb67ca890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb670c2b8"/>
        <function-ref name="maxSize" scoped="" ref="0xb670dcb8"/>
        <function-ref name="empty" scoped="" ref="0xb670d808"/>
        <function-ref name="put" scoped="" ref="0xb670df10"/>
        <function-ref name="size" scoped="" ref="0xb670da60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb6707610" loc="147:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6707610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb67077e8"/>
        <function-ref name="source" scoped="" ref="0xb67078c8"/>
        <function-ref name="address" scoped="" ref="0xb67079a8"/>
        <function-ref name="destination" scoped="" ref="0xb6707a88"/>
        <function-ref name="setSource" scoped="" ref="0xb6707b68"/>
        <function-ref name="setDestination" scoped="" ref="0xb6707c48"/>
        <function-ref name="type" scoped="" ref="0xb6707d28"/>
        <function-ref name="setType" scoped="" ref="0xb6707e08"/>
        <function-ref name="isForMe" scoped="" ref="0xb6707ee8"/>
        <function-ref name="setGroup" scoped="" ref="0xb6706010"/>
        <function-ref name="localGroup" scoped="" ref="0xb67060f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb671a328" loc="110:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb671a328"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb671a500"/>
        <function-ref name="stop" scoped="" ref="0xb671a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0xb6709d50" loc="143:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0xb6709d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6709f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0xb670c6f0" loc="139:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0xb670c6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
            <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb670b850"/>
        <function-ref name="maxSize" scoped="" ref="0xb670b268"/>
        <function-ref name="empty" scoped="" ref="0xb670cd18"/>
        <function-ref name="put" scoped="" ref="0xb670b4c0"/>
        <function-ref name="size" scoped="" ref="0xb670b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0xb67071e8" loc="146:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0xb67071e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0xb67074d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0xb66fe5b0" loc="42:/home/wsn/tinyos-main/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0xb66fe5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
            <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb66fd6a0"/>
        <function-ref name="maxSize" scoped="" ref="0xb66fd0b8"/>
        <function-ref name="empty" scoped="" ref="0xb66febd8"/>
        <function-ref name="put" scoped="" ref="0xb66fd310"/>
        <function-ref name="size" scoped="" ref="0xb66fee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0xb60ad868" loc="56:/home/wsn/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0xb60ad868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
            <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb60ac950"/>
        <function-ref name="maxSize" scoped="" ref="0xb60ac368"/>
        <function-ref name="empty" scoped="" ref="0xb60ade90"/>
        <function-ref name="put" scoped="" ref="0xb60ac5c0"/>
        <function-ref name="size" scoped="" ref="0xb60ac110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb60ad4c0" loc="55:/home/wsn/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb60ad4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb60ad698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0xb66e79b8" loc="42:/home/wsn/tinyos-main/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0xb66e79b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0xb67ca608"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0xb67ca890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb66e6aa8"/>
        <function-ref name="maxSize" scoped="" ref="0xb66e64c0"/>
        <function-ref name="empty" scoped="" ref="0xb66e6010"/>
        <function-ref name="put" scoped="" ref="0xb66e6718"/>
        <function-ref name="size" scoped="" ref="0xb66e6268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0xb60a2010" loc="56:/home/wsn/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0xb60a2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0xb67ca608"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0xb67ca890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb60a10e8"/>
        <function-ref name="maxSize" scoped="" ref="0xb60a2ae8"/>
        <function-ref name="empty" scoped="" ref="0xb60a2638"/>
        <function-ref name="put" scoped="" ref="0xb60a2d40"/>
        <function-ref name="size" scoped="" ref="0xb60a2890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb60a4c18" loc="55:/home/wsn/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb60a4c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb60a4df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0xb66e42d0" loc="43:/home/wsn/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb66e42d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0xb67ca608"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0xb67ca890"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0xb66e2268"/>
        <function-ref name="enqueue" scoped="" ref="0xb66e2948"/>
        <function-ref name="element" scoped="" ref="0xb66e2c98"/>
        <function-ref name="full" scoped="" ref="0xb66e4b50"/>
        <function-ref name="maxSize" scoped="" ref="0xb66e2010"/>
        <function-ref name="dequeue" scoped="" ref="0xb66e25d8"/>
        <function-ref name="empty" scoped="" ref="0xb66e48f8"/>
        <function-ref name="size" scoped="" ref="0xb66e4da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0xb66e0ea0" loc="39:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0xb66e0ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
              <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0xb66df4d8"/>
        <function-ref name="flush" scoped="" ref="0xb66df9d8"/>
        <function-ref name="lookup" scoped="" ref="0xb66df758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0xb6093200" loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0xb6093200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
              <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0xb6093828"/>
        <function-ref name="flush" scoped="" ref="0xb6093d28"/>
        <function-ref name="lookup" scoped="" ref="0xb6093aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb6094e10" loc="45:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb6094e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb6093010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0xb6092010" loc="49:/home/wsn/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0xb6092010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb60921e8"/>
        <function-ref name="option" scoped="" ref="0xb60922c8"/>
        <function-ref name="setEtx" scoped="" ref="0xb60923a8"/>
        <function-ref name="setOrigin" scoped="" ref="0xb6092488"/>
        <function-ref name="clearOption" scoped="" ref="0xb6092568"/>
        <function-ref name="getEtx" scoped="" ref="0xb6092648"/>
        <function-ref name="getOrigin" scoped="" ref="0xb6092728"/>
        <function-ref name="setType" scoped="" ref="0xb6092808"/>
        <function-ref name="setOption" scoped="" ref="0xb60928e8"/>
        <function-ref name="matchPacket" scoped="" ref="0xb60929c8"/>
        <function-ref name="getThl" scoped="" ref="0xb6092aa8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb6092b88"/>
        <function-ref name="matchInstance" scoped="" ref="0xb6092c68"/>
        <function-ref name="getType" scoped="" ref="0xb6092dc8"/>
        <function-ref name="setThl" scoped="" ref="0xb6092ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb66c3680" loc="45:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb66c3680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb66bd170"/>
        <function-ref name="fired" scoped="" ref="0xb66c2410"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb66c2b18"/>
        <function-ref name="isOneShot" scoped="" ref="0xb66c28c0"/>
        <function-ref name="getdt" scoped="" ref="0xb66bd620"/>
        <function-ref name="gett0" scoped="" ref="0xb66bd3c8"/>
        <function-ref name="isRunning" scoped="" ref="0xb66c2668"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb66c3ca8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb66c2e38"/>
        <function-ref name="startOneShot" scoped="" ref="0xb66c3f28"/>
        <function-ref name="stop" scoped="" ref="0xb66c21b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb66bc458" loc="45:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb66bc458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb66b9010"/>
        <function-ref name="fired" scoped="" ref="0xb66ba268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb66ba970"/>
        <function-ref name="isOneShot" scoped="" ref="0xb66ba718"/>
        <function-ref name="getdt" scoped="" ref="0xb66b94c0"/>
        <function-ref name="gett0" scoped="" ref="0xb66b9268"/>
        <function-ref name="isRunning" scoped="" ref="0xb66ba4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb66bca80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb66bac90"/>
        <function-ref name="startOneShot" scoped="" ref="0xb66bcd00"/>
        <function-ref name="stop" scoped="" ref="0xb66ba010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb66ad978" loc="57:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb66ad978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb66adb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0xb66b1f18" loc="47:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0xb66b1f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getLinkQuality" scoped="" ref="0xb66b08e8"/>
        <function-ref name="txAck" scoped="" ref="0xb66b01e8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0xb66b02c8"/>
        <function-ref name="txNoAck" scoped="" ref="0xb66b03a8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0xb66b0488"/>
        <function-ref name="evicted" scoped="" ref="0xb66b0568"/>
        <function-ref name="clearDLQ" scoped="" ref="0xb66b0648"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0xb66b0728"/>
        <function-ref name="getForwardQuality" scoped="" ref="0xb66b0808"/>
        <function-ref name="getReverseQuality" scoped="" ref="0xb66b0108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb66b0db0" loc="49:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb66b0db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb66af010"/>
        <function-ref name="payloadLength" scoped="" ref="0xb66af0f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb66af1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb66af2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb66af390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb66acce0" loc="54:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb66acce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb66aceb8"/>
        <function-ref name="getPayload" scoped="" ref="0xb66ae010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb66ae0f0"/>
        <function-ref name="cancel" scoped="" ref="0xb66ae1d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb66ae2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb66b1498" loc="45:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb66b1498"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb66b1670"/>
        <function-ref name="getPayload" scoped="" ref="0xb66b1750"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb66b1830"/>
        <function-ref name="cancel" scoped="" ref="0xb66b1910"/>
        <function-ref name="sendDone" scoped="" ref="0xb66b19f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb66ab0b8" loc="59:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb66ab0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb66ab310"/>
        <function-ref name="rand32" scoped="" ref="0xb66ab3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb66ad210" loc="56:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb66ad210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb66ad3e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb66ad4c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb66ad5a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb66ad688"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb66ad768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb66b0a58" loc="48:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb66b0a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb66b0c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0xb66ae4d8" loc="55:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0xb66ae4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb66ae6b0"/>
        <function-ref name="source" scoped="" ref="0xb66ae790"/>
        <function-ref name="address" scoped="" ref="0xb66ae870"/>
        <function-ref name="destination" scoped="" ref="0xb66ae950"/>
        <function-ref name="setSource" scoped="" ref="0xb66aea30"/>
        <function-ref name="setDestination" scoped="" ref="0xb66aeb10"/>
        <function-ref name="type" scoped="" ref="0xb66aebf0"/>
        <function-ref name="setType" scoped="" ref="0xb66aecd0"/>
        <function-ref name="isForMe" scoped="" ref="0xb66aedb0"/>
        <function-ref name="setGroup" scoped="" ref="0xb66aee90"/>
        <function-ref name="localGroup" scoped="" ref="0xb66ad010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb66b1b78" loc="46:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb66b1b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb66b1d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0xb66ac948" loc="50:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0xb66ac948"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0xb66acb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb66b1010" loc="44:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb66b1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb66b11e8"/>
        <function-ref name="stop" scoped="" ref="0xb66b12c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0xb66add48" loc="58:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0xb66add48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0xb66adf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb66346a0" loc="49:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb66346a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6634878"/>
        <function-ref name="getPayload" scoped="" ref="0xb6634958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6634a38"/>
        <function-ref name="cancel" scoped="" ref="0xb6634b18"/>
        <function-ref name="sendDone" scoped="" ref="0xb6634bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6634d38" loc="50:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6634d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6634f10"/>
        <function-ref name="payloadLength" scoped="" ref="0xb661b010"/>
        <function-ref name="getPayload" scoped="" ref="0xb661b0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb661b1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb661b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb661b3f0" loc="51:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb661b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb661b5c8"/>
        <function-ref name="source" scoped="" ref="0xb661b6a8"/>
        <function-ref name="address" scoped="" ref="0xb661b788"/>
        <function-ref name="destination" scoped="" ref="0xb661b868"/>
        <function-ref name="setSource" scoped="" ref="0xb661b948"/>
        <function-ref name="setDestination" scoped="" ref="0xb661ba28"/>
        <function-ref name="type" scoped="" ref="0xb661bb08"/>
        <function-ref name="setType" scoped="" ref="0xb661bbe8"/>
        <function-ref name="isForMe" scoped="" ref="0xb661bcc8"/>
        <function-ref name="setGroup" scoped="" ref="0xb661bda8"/>
        <function-ref name="localGroup" scoped="" ref="0xb661be88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb661a010" loc="52:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb661a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb661a1e8"/>
        <function-ref name="noAck" scoped="" ref="0xb661a2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb661a3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb607b200" loc="49:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb607b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb607b3d8"/>
        <function-ref name="getPayload" scoped="" ref="0xb607b4b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb607b598"/>
        <function-ref name="cancel" scoped="" ref="0xb607b678"/>
        <function-ref name="sendDone" scoped="" ref="0xb607b758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb607b898" loc="50:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb607b898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb607ba70"/>
        <function-ref name="payloadLength" scoped="" ref="0xb607bb50"/>
        <function-ref name="getPayload" scoped="" ref="0xb607bc30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb607bd10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb607bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb607a010" loc="51:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb607a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb607a1e8"/>
        <function-ref name="source" scoped="" ref="0xb607a2c8"/>
        <function-ref name="address" scoped="" ref="0xb607a3a8"/>
        <function-ref name="destination" scoped="" ref="0xb607a488"/>
        <function-ref name="setSource" scoped="" ref="0xb607a568"/>
        <function-ref name="setDestination" scoped="" ref="0xb607a648"/>
        <function-ref name="type" scoped="" ref="0xb607a728"/>
        <function-ref name="setType" scoped="" ref="0xb607a808"/>
        <function-ref name="isForMe" scoped="" ref="0xb607a8e8"/>
        <function-ref name="setGroup" scoped="" ref="0xb607a9c8"/>
        <function-ref name="localGroup" scoped="" ref="0xb607aaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb607ac08" loc="52:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb607ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb607ade0"/>
        <function-ref name="noAck" scoped="" ref="0xb607aec0"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6079010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb60768a0" loc="44:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb60768a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6076a78"/>
        <function-ref name="getPayload" scoped="" ref="0xb6076b58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6076c38"/>
        <function-ref name="cancel" scoped="" ref="0xb6076d18"/>
        <function-ref name="sendDone" scoped="" ref="0xb6076df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xb6073010" loc="46:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb6073010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb60731e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb60732c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb60733a8"/>
        <function-ref name="cancel" scoped="" ref="0xb6073488"/>
        <function-ref name="sendDone" scoped="" ref="0xb6073568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb60736a8" loc="47:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb60736a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6073880"/>
        <function-ref name="source" scoped="" ref="0xb6073960"/>
        <function-ref name="address" scoped="" ref="0xb6073a40"/>
        <function-ref name="destination" scoped="" ref="0xb6073b20"/>
        <function-ref name="setSource" scoped="" ref="0xb6073c00"/>
        <function-ref name="setDestination" scoped="" ref="0xb6073ce0"/>
        <function-ref name="type" scoped="" ref="0xb6073dc0"/>
        <function-ref name="setType" scoped="" ref="0xb6073ea0"/>
        <function-ref name="isForMe" scoped="" ref="0xb6072010"/>
        <function-ref name="setGroup" scoped="" ref="0xb60720f0"/>
        <function-ref name="localGroup" scoped="" ref="0xb60721d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb662add0" loc="43:/home/wsn/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb662add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6627010"/>
        <function-ref name="getPayload" scoped="" ref="0xb66270f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb66271d0"/>
        <function-ref name="cancel" scoped="" ref="0xb66272b0"/>
        <function-ref name="sendDone" scoped="" ref="0xb6627390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb6625c68" loc="48:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6625c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6625e50"/>
        <function-ref name="getPayload" scoped="" ref="0xb6624010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb66240f0"/>
        <function-ref name="cancel" scoped="" ref="0xb66241d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb66242b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb66254f8" loc="46:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb66254f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb66256e0"/>
        <function-ref name="getPayload" scoped="" ref="0xb66257c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb66258a0"/>
        <function-ref name="cancel" scoped="" ref="0xb6625980"/>
        <function-ref name="sendDone" scoped="" ref="0xb6625a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb6623010" loc="50:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6623010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb66231e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb66232c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb66233a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6623488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6623568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0xb66236e8" loc="169:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0xb66236e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb66238c0"/>
        <function-ref name="runTask" scoped="" ref="0xb66239a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0xb6623b20" loc="126:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0xb6623b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6623cf8"/>
        <function-ref name="runTask" scoped="" ref="0xb6623dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb66243f0" loc="49:/home/wsn/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb66243f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb66245c8"/>
        <function-ref name="source" scoped="" ref="0xb66246a8"/>
        <function-ref name="address" scoped="" ref="0xb6624788"/>
        <function-ref name="destination" scoped="" ref="0xb6624868"/>
        <function-ref name="setSource" scoped="" ref="0xb6624948"/>
        <function-ref name="setDestination" scoped="" ref="0xb6624a28"/>
        <function-ref name="type" scoped="" ref="0xb6624b08"/>
        <function-ref name="setType" scoped="" ref="0xb6624be8"/>
        <function-ref name="isForMe" scoped="" ref="0xb6624cc8"/>
        <function-ref name="setGroup" scoped="" ref="0xb6624da8"/>
        <function-ref name="localGroup" scoped="" ref="0xb6624e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6618d60" loc="46:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6618d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6617010"/>
        <function-ref name="payloadLength" scoped="" ref="0xb66170f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb66171d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb66172b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6617390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb6618a48" loc="45:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb6618a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6618c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb66174d0" loc="47:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb66174d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb66176a8"/>
        <function-ref name="source" scoped="" ref="0xb6617788"/>
        <function-ref name="address" scoped="" ref="0xb6617868"/>
        <function-ref name="destination" scoped="" ref="0xb6617948"/>
        <function-ref name="setSource" scoped="" ref="0xb6617a28"/>
        <function-ref name="setDestination" scoped="" ref="0xb6617b08"/>
        <function-ref name="type" scoped="" ref="0xb6617be8"/>
        <function-ref name="setType" scoped="" ref="0xb6617cc8"/>
        <function-ref name="isForMe" scoped="" ref="0xb6617da8"/>
        <function-ref name="setGroup" scoped="" ref="0xb6617e88"/>
        <function-ref name="localGroup" scoped="" ref="0xb6614010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb66128d8" loc="47:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb66128d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6612ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6612b90"/>
        <function-ref name="getPayload" scoped="" ref="0xb6612c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6612d50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6612e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb66125c0" loc="46:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb66125c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb6612798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb660e010" loc="48:/home/wsn/tinyos-main/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb660e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb660e1e8"/>
        <function-ref name="source" scoped="" ref="0xb660e2c8"/>
        <function-ref name="address" scoped="" ref="0xb660e3a8"/>
        <function-ref name="destination" scoped="" ref="0xb660e488"/>
        <function-ref name="setSource" scoped="" ref="0xb660e568"/>
        <function-ref name="setDestination" scoped="" ref="0xb660e648"/>
        <function-ref name="type" scoped="" ref="0xb660e728"/>
        <function-ref name="setType" scoped="" ref="0xb660e808"/>
        <function-ref name="isForMe" scoped="" ref="0xb660e8e8"/>
        <function-ref name="setGroup" scoped="" ref="0xb660e9c8"/>
        <function-ref name="localGroup" scoped="" ref="0xb660eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0xb657d430" loc="110:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0xb657d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0xb657d608"/>
        <function-ref name="setRoot" scoped="" ref="0xb657d6e8"/>
        <function-ref name="unsetRoot" scoped="" ref="0xb657d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0xb65719c0" loc="269:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0xb65719c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6571b98"/>
        <function-ref name="runTask" scoped="" ref="0xb6571c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0xb65726f8" loc="125:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0xb65726f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0xb65728d0"/>
        <function-ref name="logEventMsg" scoped="" ref="0xb65729b0"/>
        <function-ref name="logEventSimple" scoped="" ref="0xb6572a90"/>
        <function-ref name="logEventRoute" scoped="" ref="0xb6572b70"/>
        <function-ref name="logEventDbg" scoped="" ref="0xb6572c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0xb657a070" loc="119:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0xb657a070"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getReverseQuality" scoped="" ref="0xb657aa28"/>
        <function-ref name="txAck" scoped="" ref="0xb657a328"/>
        <function-ref name="pinNeighbor" scoped="" ref="0xb657a408"/>
        <function-ref name="txNoAck" scoped="" ref="0xb657a4e8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0xb657a5c8"/>
        <function-ref name="evicted" scoped="" ref="0xb657a6a8"/>
        <function-ref name="clearDLQ" scoped="" ref="0xb657a788"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0xb657a868"/>
        <function-ref name="getForwardQuality" scoped="" ref="0xb657a948"/>
        <function-ref name="getLinkQuality" scoped="" ref="0xb657a248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0xb657c9a8" loc="113:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0xb657c9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0xb657cb80"/>
        <function-ref name="setEtx" scoped="" ref="0xb657cc60"/>
        <function-ref name="clearOption" scoped="" ref="0xb657cd40"/>
        <function-ref name="getEtx" scoped="" ref="0xb657ce20"/>
        <function-ref name="setOption" scoped="" ref="0xb657cf00"/>
        <function-ref name="setParent" scoped="" ref="0xb657b010"/>
        <function-ref name="getParent" scoped="" ref="0xb657b0f0"/>
        <function-ref name="getOption" scoped="" ref="0xb657b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0xb6579790" loc="121:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0xb6579790"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb6579968"/>
        <function-ref name="stopDone" scoped="" ref="0xb6579a48"/>
        <function-ref name="start" scoped="" ref="0xb6579b28"/>
        <function-ref name="stop" scoped="" ref="0xb6579c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb6572300" loc="124:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb6572300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb65724d8"/>
        <function-ref name="rand32" scoped="" ref="0xb65725b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0xb657d908" loc="111:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0xb657d908"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0xb657dae0"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0xb657dbc0"/>
        <function-ref name="numNeighbors" scoped="" ref="0xb657dca0"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0xb657dd80"/>
        <function-ref name="getEtx" scoped="" ref="0xb657de60"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0xb657c010"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0xb657c0f0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0xb657c1d0"/>
        <function-ref name="getParent" scoped="" ref="0xb657c2b0"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0xb657c390"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0xb657c470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0xb6571588" loc="388:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0xb6571588"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb6571760"/>
        <function-ref name="runTask" scoped="" ref="0xb6571840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb657b310" loc="114:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb657b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb657b4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0xb657b678" loc="117:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0xb657b678"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb657b850"/>
        <function-ref name="getPayload" scoped="" ref="0xb657b930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb657ba10"/>
        <function-ref name="cancel" scoped="" ref="0xb657baf0"/>
        <function-ref name="sendDone" scoped="" ref="0xb657bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0xb6579df8" loc="122:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0xb6579df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6576900"/>
        <function-ref name="fired" scoped="" ref="0xb6577ba0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb65762c0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6576068"/>
        <function-ref name="getdt" scoped="" ref="0xb6576db0"/>
        <function-ref name="gett0" scoped="" ref="0xb6576b58"/>
        <function-ref name="isRunning" scoped="" ref="0xb6577df8"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6577448"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb65765e0"/>
        <function-ref name="startOneShot" scoped="" ref="0xb65776c8"/>
        <function-ref name="stop" scoped="" ref="0xb6577948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0xb65750c0" loc="123:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0xb65750c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb6574c20"/>
        <function-ref name="fired" scoped="" ref="0xb6575ec0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb65745e0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb6574388"/>
        <function-ref name="getdt" scoped="" ref="0xb65720f0"/>
        <function-ref name="gett0" scoped="" ref="0xb6574e78"/>
        <function-ref name="isRunning" scoped="" ref="0xb6574130"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb6575768"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb6574900"/>
        <function-ref name="startOneShot" scoped="" ref="0xb65759e8"/>
        <function-ref name="stop" scoped="" ref="0xb6575c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0xb6572d90" loc="126:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0xb6572d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0xb6571010"/>
        <function-ref name="setClientCongested" scoped="" ref="0xb65710f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0xb6571230" loc="128:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0xb6571230"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0xb6571408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0xb657bd30" loc="118:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0xb657bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb657bf08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb657ab68" loc="120:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb657ab68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb657ad40"/>
        <function-ref name="source" scoped="" ref="0xb657ae20"/>
        <function-ref name="address" scoped="" ref="0xb657af00"/>
        <function-ref name="destination" scoped="" ref="0xb6579010"/>
        <function-ref name="setSource" scoped="" ref="0xb65790f0"/>
        <function-ref name="setDestination" scoped="" ref="0xb65791d0"/>
        <function-ref name="type" scoped="" ref="0xb65792b0"/>
        <function-ref name="setType" scoped="" ref="0xb6579390"/>
        <function-ref name="isForMe" scoped="" ref="0xb6579470"/>
        <function-ref name="setGroup" scoped="" ref="0xb6579550"/>
        <function-ref name="localGroup" scoped="" ref="0xb6579630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb657c5b0" loc="112:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb657c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb657c788"/>
        <function-ref name="stop" scoped="" ref="0xb657c868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0xb657ee30" loc="109:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0xb657ee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0xb657d050"/>
        <function-ref name="routeFound" scoped="" ref="0xb657d130"/>
        <function-ref name="nextHop" scoped="" ref="0xb657d210"/>
        <function-ref name="noRoute" scoped="" ref="0xb657d2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb656cd90" loc="45:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb656cd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb656a8a8"/>
        <function-ref name="fired" scoped="" ref="0xb656bb38"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb656a268"/>
        <function-ref name="isOneShot" scoped="" ref="0xb656a010"/>
        <function-ref name="getdt" scoped="" ref="0xb656ad58"/>
        <function-ref name="gett0" scoped="" ref="0xb656ab00"/>
        <function-ref name="isRunning" scoped="" ref="0xb656bd90"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb656b3e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb656a588"/>
        <function-ref name="startOneShot" scoped="" ref="0xb656b660"/>
        <function-ref name="stop" scoped="" ref="0xb656b8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb65651f8" loc="49:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb65651f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb65653d0"/>
        <function-ref name="getPayload" scoped="" ref="0xb65654b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6565590"/>
        <function-ref name="cancel" scoped="" ref="0xb6565670"/>
        <function-ref name="sendDone" scoped="" ref="0xb6565750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6565890" loc="50:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6565890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6565a68"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6565b48"/>
        <function-ref name="getPayload" scoped="" ref="0xb6565c28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6565d08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6565de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6565f28" loc="51:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6565f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6564110"/>
        <function-ref name="source" scoped="" ref="0xb65641f0"/>
        <function-ref name="address" scoped="" ref="0xb65642d0"/>
        <function-ref name="destination" scoped="" ref="0xb65643b0"/>
        <function-ref name="setSource" scoped="" ref="0xb6564490"/>
        <function-ref name="setDestination" scoped="" ref="0xb6564570"/>
        <function-ref name="type" scoped="" ref="0xb6564650"/>
        <function-ref name="setType" scoped="" ref="0xb6564730"/>
        <function-ref name="isForMe" scoped="" ref="0xb6564810"/>
        <function-ref name="setGroup" scoped="" ref="0xb65648f0"/>
        <function-ref name="localGroup" scoped="" ref="0xb65649d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb6564b30" loc="52:/home/wsn/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb6564b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb6564d08"/>
        <function-ref name="noAck" scoped="" ref="0xb6564de8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb6564ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6005680" loc="49:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6005680"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6005858"/>
        <function-ref name="getPayload" scoped="" ref="0xb6005938"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6005a18"/>
        <function-ref name="cancel" scoped="" ref="0xb6005af8"/>
        <function-ref name="sendDone" scoped="" ref="0xb6005bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6005d18" loc="50:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6005d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb6005ef0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb6004010"/>
        <function-ref name="getPayload" scoped="" ref="0xb60040f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb60041d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb60042b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb60043f0" loc="51:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb60043f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb60045c8"/>
        <function-ref name="source" scoped="" ref="0xb60046a8"/>
        <function-ref name="address" scoped="" ref="0xb6004788"/>
        <function-ref name="destination" scoped="" ref="0xb6004868"/>
        <function-ref name="setSource" scoped="" ref="0xb6004948"/>
        <function-ref name="setDestination" scoped="" ref="0xb6004a28"/>
        <function-ref name="type" scoped="" ref="0xb6004b08"/>
        <function-ref name="setType" scoped="" ref="0xb6004be8"/>
        <function-ref name="isForMe" scoped="" ref="0xb6004cc8"/>
        <function-ref name="setGroup" scoped="" ref="0xb6004da8"/>
        <function-ref name="localGroup" scoped="" ref="0xb6004e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0xb6003010" loc="52:/home/wsn/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0xb6003010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb60031e8"/>
        <function-ref name="noAck" scoped="" ref="0xb60032c8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb60033a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb6001d30" loc="44:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb6001d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb6001f08"/>
        <function-ref name="getPayload" scoped="" ref="0xb5ffd010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5ffd0f0"/>
        <function-ref name="cancel" scoped="" ref="0xb5ffd1d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb5ffd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xb5ffd420" loc="46:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb5ffd420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5ffd5f8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5ffd6d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5ffd7b8"/>
        <function-ref name="cancel" scoped="" ref="0xb5ffd898"/>
        <function-ref name="sendDone" scoped="" ref="0xb5ffd978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb5ffdab8" loc="47:/home/wsn/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb5ffdab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb5ffdc90"/>
        <function-ref name="source" scoped="" ref="0xb5ffdd70"/>
        <function-ref name="address" scoped="" ref="0xb5ffde50"/>
        <function-ref name="destination" scoped="" ref="0xb5ffc010"/>
        <function-ref name="setSource" scoped="" ref="0xb5ffc0f0"/>
        <function-ref name="setDestination" scoped="" ref="0xb5ffc1d0"/>
        <function-ref name="type" scoped="" ref="0xb5ffc2b0"/>
        <function-ref name="setType" scoped="" ref="0xb5ffc390"/>
        <function-ref name="isForMe" scoped="" ref="0xb5ffc470"/>
        <function-ref name="setGroup" scoped="" ref="0xb5ffc550"/>
        <function-ref name="localGroup" scoped="" ref="0xb5ffc630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb6562510" loc="46:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb6562510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb65626e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb65627c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb65628a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb6562988"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb6562a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb65621f8" loc="45:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb65621f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb65623d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb6562ba8" loc="47:/home/wsn/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb6562ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb6562d80"/>
        <function-ref name="source" scoped="" ref="0xb6562e60"/>
        <function-ref name="address" scoped="" ref="0xb6561010"/>
        <function-ref name="destination" scoped="" ref="0xb65610f0"/>
        <function-ref name="setSource" scoped="" ref="0xb65611d0"/>
        <function-ref name="setDestination" scoped="" ref="0xb65612b0"/>
        <function-ref name="type" scoped="" ref="0xb6561390"/>
        <function-ref name="setType" scoped="" ref="0xb6561470"/>
        <function-ref name="isForMe" scoped="" ref="0xb6561550"/>
        <function-ref name="setGroup" scoped="" ref="0xb6561630"/>
        <function-ref name="localGroup" scoped="" ref="0xb6561710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb653f010" loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="Collection2SerialAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb653f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb653f1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb653f2c8"/>
        <function-ref name="getPayload" scoped="" ref="0xb653f3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb653f488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb653f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb654d8a0" loc="45:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="Collection2SerialAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb654d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb654da78"/>
        <function-ref name="getPayload" scoped="" ref="0xb654db58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb654dc38"/>
        <function-ref name="cancel" scoped="" ref="0xb654dd18"/>
        <function-ref name="sendDone" scoped="" ref="0xb654ddf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb5fef8a8" loc="38:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="Collection2SerialAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb5fef8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb5fefa80"/>
        <function-ref name="payloadLength" scoped="" ref="0xb5fefb60"/>
        <function-ref name="getPayload" scoped="" ref="0xb5fefc40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5fefd20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb5fefe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb5fef210" loc="37:/home/wsn/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="Collection2SerialAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb5fef210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb5fef3e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb5fef4c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb5fef5a8"/>
        <function-ref name="cancel" scoped="" ref="0xb5fef688"/>
        <function-ref name="sendDone" scoped="" ref="0xb5fef768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0xb5feda30" loc="46:/home/wsn/tinyos-main/tos/lib/net/CollectionIdP.nc">
      <component-ref qname="Collection2SerialAppC.CollectionSenderC.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0xb5feda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0xb5fedc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb653e1f8" loc="45:/home/wsn/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Collection2SerialAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb653e1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb736d340"/>
            <typename><typedef-ref name="TMilli" ref="0xb736d508"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb653dd58"/>
        <function-ref name="fired" scoped="" ref="0xb653d010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb653d718"/>
        <function-ref name="isOneShot" scoped="" ref="0xb653d4c0"/>
        <function-ref name="getdt" scoped="" ref="0xb653c268"/>
        <function-ref name="gett0" scoped="" ref="0xb653c010"/>
        <function-ref name="isRunning" scoped="" ref="0xb653d268"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb653e820"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb653da38"/>
        <function-ref name="startOneShot" scoped="" ref="0xb653eaa0"/>
        <function-ref name="stop" scoped="" ref="0xb653ed20"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="RootControl" loc="40:/home/wsn/tinyos-main/tos/lib/net/RootControl.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0xb72947c8" loc="43:/home/wsn/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0xb7294010" loc="41:/home/wsn/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0xb7294408" loc="42:/home/wsn/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xb72b3730" loc="60:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0xb72b0e00" loc="113:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb72b0ca8" loc="113:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0xb72afc18" loc="138:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb72afac0" loc="138:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb72b05c0" loc="104:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb72af3e0" loc="130:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/wsn/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb72ac3c8" loc="75:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb72ac088" loc="75:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb72ac268" loc="75:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb72a8eb0" loc="125:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb72a8b50" loc="125:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb72a8d30" loc="125:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb72a85f0" loc="112:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb72ab020" loc="89:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb72aceb0" loc="89:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb72abcb8" loc="100:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb72ab960" loc="100:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb72abb58" loc="100:/home/wsn/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb72b2db8" loc="95:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb72ad2a8" loc="105:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/wsn/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb72939e0" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
              <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7293498" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb7293678" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7293858" loc="78:/home/wsn/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0xb72a11a8" loc="61:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0xb72a15f0" loc="67:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0xb72a1a70" loc="72:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0xb72a02f8" loc="83:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0xb729f010" loc="100:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb729f4b8" loc="117:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0xb72a1e98" loc="77:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb729fbf8" loc="134:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xb729faa0" loc="134:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0xb72a6d48" loc="56:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0xb72a0778" loc="89:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0xb72a0ba0" loc="94:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/wsn/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb729d308" loc="53:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb729d308"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb7299a28" loc="136:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb729b890" loc="83:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0xb729aa00" loc="114:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb729a6b8" loc="114:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb729a8a0" loc="114:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0xb729a210" loc="98:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0xb72983e8" loc="151:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0xb7299e70" loc="144:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb729bd20" loc="92:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0xb729d960" loc="64:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb729d808" loc="64:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0xb7299408" loc="129:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb72990c0" loc="129:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb72992a8" loc="129:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0xb729b010" loc="73:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb729dea0" loc="73:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb729b4e0" loc="78:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/wsn/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/wsn/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb7280138" loc="62:/home/wsn/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0xb727a360" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0xb727a208" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0xb727f978" loc="31:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0xb727c010" loc="39:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb727fe58" loc="39:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0xb727c6d8" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb727c580" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0xb727cc30" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xb726e0c8" loc="44:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0xb726e4b0" loc="45:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0xb7270908" loc="42:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xb726ec80" loc="47:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb7270cc8" loc="43:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xb726e888" loc="46:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb72701c8" loc="40:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0xb7270558" loc="41:/home/wsn/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb751a9d0" loc="57:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xb73ba3b0" loc="72:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xb751ae10" loc="65:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xb73b52d0" loc="67:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0xb73b57e8" loc="75:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0xb7340b90" loc="76:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/wsn/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/wsn/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0xb732ee90" loc="62:/home/wsn/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0xb7386470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0xb732e1a8" loc="52:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0xb715d2a8" loc="59:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0xb7166f10" loc="59:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb715d148" loc="59:/home/wsn/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb715c5d0" loc="65:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb715c478" loc="65:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb715b010" loc="78:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb715ce48" loc="78:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb715a010" loc="126:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7158c58" loc="126:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7158e38" loc="126:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7158670" loc="106:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb715bc70" loc="94:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb715b930" loc="94:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb715bb10" loc="94:/home/wsn/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb7168ac8" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7168568" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb7168780" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7168960" loc="80:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb71627a0" loc="135:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7162440" loc="135:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7162620" loc="135:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7163de8" loc="123:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb71647b0" loc="96:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7164658" loc="96:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb71634e0" loc="110:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7163188" loc="110:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb7163380" loc="110:/home/wsn/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0xb7147880" loc="65:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71474e8" loc="65:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0xb7147720" loc="65:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0xb7146350" loc="71:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71461f8" loc="71:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0xb7147010" loc="57:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0xb71578f8" loc="52:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0xb71577a0" loc="52:/home/wsn/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0xb715ff28" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb715fdd0" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0xb714ba30" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb714b8d8" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0xb714a4e0" loc="85:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb714a388" loc="85:/home/wsn/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0xb7142380" loc="65:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7142228" loc="65:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0xb7145780" loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71453e8" loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0xb7145620" loc="46:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0xb7144a20" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb71448c8" loc="59:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0xb71443a8" loc="53:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7144010" loc="53:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0xb7144248" loc="53:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0xb7142ca0" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7142b48" loc="71:/home/wsn/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0xb7151230" loc="177:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb72c5eb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb71510d8" loc="177:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb7156b68" loc="88:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7156a10" loc="88:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb7160a18" loc="68:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb7156168" loc="78:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7156010" loc="78:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb71554c0" loc="121:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7155158" loc="121:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb7155360" loc="121:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb7153780" loc="103:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7153418" loc="103:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb7153620" loc="103:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0xb7152bc0" loc="147:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7152a68" loc="147:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb714f720" loc="162:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb714f3f0" loc="162:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0xb714f5c0" loc="162:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb72c5c58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb7152088" loc="136:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7155f08" loc="136:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb7151eb0" loc="187:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb72c5eb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7151b50" loc="187:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb7151d50" loc="187:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb72c5eb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0xb714e780" loc="195:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/wsn/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb72c5eb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0xb71414f0" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xb7141010" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb7140e58" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xb7141978" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xb714d3e0" loc="35:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb714d3e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb714d548" loc="35:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb714d548"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0xb713c748" loc="63:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb714d548"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb713c5f0" loc="63:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0xb713d200" loc="70:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb713d0a8" loc="70:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0xb714dbd0" loc="49:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb714da78" loc="49:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb713dcc0" loc="78:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb714d548"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb713d950" loc="78:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb713db60" loc="78:/home/wsn/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb714d548"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0xb7130e70" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb7130e70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0xb712b168" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb712b010" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb712db30" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb7130e70"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb712d9d8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0xb712d510" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb712d3b8" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb712b8f0" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb7130e70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb712b578" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb712b790" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb7130e70"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7123310" loc="53:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7123310"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb71237f0" loc="61:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0xb7124010" loc="47:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7128df8" loc="47:/home/wsn/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb7110ba8" loc="120:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0xb71102b8" loc="97:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xb7117c88" loc="88:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0xb7110768" loc="102:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb710f2c8" loc="128:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/wsn/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0xb710d240" loc="41:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72cc638"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb710d0e8" loc="41:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb7116660" loc="37:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72cc638"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb7116c60" loc="39:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72cc638"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7116b08" loc="39:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb710b1c8" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72cc638"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb710de10" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb710b068" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72cc638"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb710da10" loc="43:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72cc638"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb710d670" loc="43:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb710d8b0" loc="43:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72cc638"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0xb710bce8" loc="49:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xb72cc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb710bb90" loc="49:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0xb710a478" loc="51:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0xb72cc3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb710a0e8" loc="51:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb710a318" loc="51:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0xb72cc3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb710b738" loc="47:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb710b5e0" loc="47:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0xb710a8b8" loc="53:/home/wsn/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xb72cc3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb7115020" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72cc638"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7118aa8" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72cc638"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb7118cc0" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7118ea0" loc="67:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7113290" loc="122:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7114f18" loc="122:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7113110" loc="122:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb71149b8" loc="110:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb71159b0" loc="83:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7115858" loc="83:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb71143c0" loc="97:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7114068" loc="97:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb7114260" loc="97:/home/wsn/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0xb70f85c8" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0xb70f8b98" loc="72:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0xb70f61f0" loc="79:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0xb70f81c8" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0xb70d7e20" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0xb70e69c8" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70e6870" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0xb70d9010" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb72c5eb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70dae08" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0xb70d9d70" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70d9c18" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb70da200" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70da0a8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb70db448" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70db2f0" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb70da998" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70da630" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb70da838" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb70dbc10" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70db8a8" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb70dbab0" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb70d9798" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb72c5eb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70d9438" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb70d9638" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb72c5eb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0xb70e3920" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0xb70e3e68" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0xb70dd370" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70dd218" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0xb70de548" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70de3f0" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0xb70dec40" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70deae8" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0xb70c59c8" loc="60:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0xb70c5168" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0xb72cd048"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0xb70c5010" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0xb72cd048"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb70c55b0" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0xb70d6a88" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0xb70c5e40" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0xb72cd048"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0xb70c0010" loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70c1e60" loc="70:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb70c25f0" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70c2498" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb70c1320" loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb70c2e48" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70c2ae8" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb70c2ce8" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0xb70c7e30" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70c7cd8" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0xb70c19a0" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70c1848" loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0xb70ee070" loc="46:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0xb70fcb38" loc="40:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70fc9e0" loc="40:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0xb70ee750" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70ee5f8" loc="52:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0xb70eec38" loc="59:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0xb70ec380" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70ec228" loc="65:/home/wsn/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0xb70efc88" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70efb30" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0xb70e7628" loc="86:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0xb70e7170" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb70e9d68" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb70e7010" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xb70ea168" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70ea010" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0xb70ea7b0" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70ea658" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0xb70e9170" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb70ead70" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb70e9010" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0xb70eb2b8" loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0xb70ebab0" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70eb788" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb70eb950" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xb70e9888" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70e9730" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0xb70cd420" loc="131:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70cd2c8" loc="131:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0xb70cf5f0" loc="120:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70cf498" loc="120:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0xb70d5590" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70d5240" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0xb70d5430" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0xb70d4978" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70d4820" loc="75:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0xb70cb940" loc="156:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70cb5e0" loc="156:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb70cb7e0" loc="156:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0xb70d42e0" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70d4188" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0xb70cfde8" loc="125:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70cfaa8" loc="125:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0xb70cfc88" loc="125:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0xb70d28c8" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb70d2550" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb70d2768" loc="88:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0xb70cb168" loc="151:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70cb010" loc="151:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0xb70d5bf8" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70d5aa0" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0xb70d1898" loc="99:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70d1740" loc="99:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0xb70d11e8" loc="94:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb70d2e58" loc="94:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb70d1088" loc="94:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0xb70c80c8" loc="178:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0xb72cc638"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xb70c9010" loc="162:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70cbe10" loc="162:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0xb70c9c08" loc="173:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0xb72cc3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0xb70cca80" loc="146:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70cc720" loc="146:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb70cc920" loc="146:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0xb70d2010" loc="81:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70d4e50" loc="81:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0xb70cf010" loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70d0ca8" loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0xb70d0e98" loc="115:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0xb70cdc08" loc="136:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70cd8b8" loc="136:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0xb70cdaa8" loc="136:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb70c86a0" loc="185:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70c8548" loc="185:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0xb70d0170" loc="105:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70d1d78" loc="105:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb70d0010" loc="105:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0xb70e1d70" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70e1c18" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xb70c9720" loc="168:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70c95c8" loc="168:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0xb70cc2a0" loc="141:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70cc148" loc="141:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0xb70d07c0" loc="110:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70d0668" loc="110:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0xb70e5840" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70e54e0" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0xb70e56e0" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0xb70e5ca8" loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0xb70f0938" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70f07e0" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0xb70e5010" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70f0e28" loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0xb70e4e00" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70e4ca8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0xb70e4768" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70e4610" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0xb70e0338" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0xb70e09f0" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb70e0898" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7086478" loc="56:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7086478"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb70865e0" loc="56:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb70865e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb70848c8" loc="109:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb70865e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb7085598" loc="78:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0xb7084280" loc="103:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb70865e0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb70865e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb7085ee8" loc="103:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb70865e0"/></type-var>
          </variable>
          <variable name="dt" ref="0xb7084120" loc="103:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb70865e0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb70859e0" loc="88:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0xb7084d58" loc="116:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb70865e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7086c10" loc="66:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb70865e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7086ab8" loc="66:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb70865e0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7085138" loc="73:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/wsn/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0xb7066ee8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7066d90" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb7062010" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7063e08" loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb7063870" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7063518" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb7063710" loc="54:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0xb7060010" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
              <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7062e38" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0xb70569a0" loc="50:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0xb7054258" loc="60:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0xb7056e10" loc="55:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb72c5eb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0xb70564b0" loc="45:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb72c5eb0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0xb7056148" loc="45:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb72c5eb0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb7056350" loc="45:/home/wsn/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0xb6ff29b0" loc="53:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb6fef010" loc="61:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0xb6ff1be0" loc="65:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0xb6ff1720" loc="59:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0xb6fee298" loc="90:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0xb6fee798" loc="98:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/wsn/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0xb6fe6530" loc="79:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6ff0eb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6fe63d8" loc="79:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6ff0eb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0xb6fe71c8" loc="53:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0xb6fe7888" loc="62:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6ff0eb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6fe7730" loc="62:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb6ff0eb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xb6fe7e38" loc="70:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0xb6ff0eb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0xb6f1ae30" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
              <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6f1acb8" loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0xb6f1a640" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6f1a4e8" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb6f0dc58" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6f0db00" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0xb6f0c0f8" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6f0d1c0" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6f0d068" loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6f0d708" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6f0d5b0" loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0xb6f11c08" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6f11ab0" loc="57:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0xb6f0f8f8" loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6f0f7a0" loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0xb6f0f318" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6f0f1c0" loc="62:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0xb6f0e010" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb6f0fe58" loc="80:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0xb6f11588" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb6f11430" loc="49:/home/wsn/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0xb6ebfd48" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0xb6ebc740" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xb6ebcd88" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb6ebcc30" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0xb6eba210" loc="69:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0xb6ebc2c0" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0xb6eba6c8" loc="74:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0xb6ebe720" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6ebe5c8" loc="48:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0xb6eb83e8" loc="63:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6ebee98" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb6ebed40" loc="56:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0xb6e77a08" loc="52:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0xb6e77560" loc="46:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb75128a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0xb6e5a098" loc="53:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb6e5a098"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0xb6e5a6e8" loc="64:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb6e5a098"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0xb6e5a590" loc="64:/home/wsn/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb6e5a098"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0xb6e45350" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e451f8" loc="55:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6e46088" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e49f10" loc="40:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0xb6e46820" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e464e0" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb6e466c0" loc="45:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6e46da0" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6e46c48" loc="50:/home/wsn/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0xb6e28010" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb6e2be68" loc="52:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xb6e2b988" loc="44:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6ddfc88" loc="57:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6ddfc88"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb6ddfdf0" loc="57:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ddfdf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb6ddc2f0" loc="64:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ddfdf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb6ddcd18" loc="76:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb6ddc818" loc="71:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb6ddb138" loc="82:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb6dbf2b8" loc="89:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb6dc0818" loc="85:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xb6dc1438" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb6dc0dd8" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb6dc0c80" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xb6dc03a8" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6dc0250" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb6dbf880" loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb6dbf728" loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xb6dc1888" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xb6dc1e00" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6dc1ca8" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0xb6db5010" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0xb6db7ca0" loc="68:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0xb6db60f8" loc="74:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0xb6db65d8" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0xb6db54d0" loc="98:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0xb6db6ab8" loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0xb6db71c8" loc="57:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb735d9e0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb735dc08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0xb6db77c0" loc="63:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb735d9e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb735dc08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0xb6db7668" loc="63:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb735d9e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb735dc08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb6dc3858" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6dc3858"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0xb6dbb830" loc="74:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb6dbd760" loc="58:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6dc3d50" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6dc3858"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb6dbdb68" loc="62:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb6dbbc90" loc="80:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6dbd320" loc="54:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6dc3858"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb6dbd1c8" loc="54:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6dc3858"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb6dbb010" loc="65:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6dbb408" loc="68:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb6dc9508" loc="55:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6dc9508"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0xb6dc7d28" loc="98:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb6dc7498" loc="87:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6dc99f8" loc="61:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6dc9508"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0xb6dc52e0" loc="104:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0xb6dc5188" loc="104:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0xb6dc5770" loc="110:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb6dc8860" loc="75:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb6dc8440" loc="70:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb6dc7900" loc="93:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6dc8010" loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6dc9508"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb6dc9e18" loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb6dc9508"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb6dc8c68" loc="78:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6dc7070" loc="81:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb6ca69f8" loc="59:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb6ca69f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb6ca6b60" loc="59:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ca6b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0xb6ca1188" loc="66:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ca6b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb6ca1030" loc="66:/home/wsn/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6ca6b60"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0xb6ca41a8" loc="54:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0xb6ca4b58" loc="66:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb6ca4710" loc="61:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb6ca45b8" loc="61:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0xb6ca9c80" loc="53:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0xb6ca8718" loc="62:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6ca85c0" loc="62:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0xb6ca72b8" loc="74:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6ca7160" loc="74:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0xb6ca8c28" loc="68:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb6ca7898" loc="81:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6ca7740" loc="81:/home/wsn/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb6c1a808" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6c1a808"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0xb6c15318" loc="88:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0xb6c151c0" loc="88:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb6c16910" loc="76:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb6c1ad00" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6c1a808"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0xb6c17888" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6c1a808"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb6c17730" loc="60:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6c1a808"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb6c17cc8" loc="64:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb6c16d70" loc="82:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb6c172b0" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6c1a808"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb6c17158" loc="53:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb6c1a808"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb6c160f8" loc="67:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6c164f0" loc="70:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/wsn/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb6c06368" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb6c09d38" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb6c06010" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6c06200" loc="70:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6c059a8" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb6c05228" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb6c05440" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6c05630" loc="82:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb6c05838" loc="83:/home/wsn/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0xb6c0a868" loc="45:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0xb6c0a710" loc="45:/home/wsn/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0xb6bf81a8" loc="86:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0xb6bf38d8" loc="126:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0xb6bf5a00" loc="117:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0xb6bf3ec0" loc="128:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0xb6bf3d68" loc="128:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0xb6bf9d28" loc="83:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0xb6bf49d8" loc="122:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0xb6bf4880" loc="122:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0xb6bf7c20" loc="113:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0xb6bf7ac8" loc="113:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0xb6bf8a38" loc="97:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0xb6bef010" loc="141:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0xb6bf0e38" loc="141:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0xb6bf5090" loc="114:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0xb6bf2868" loc="131:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0xb6bf2710" loc="131:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0xb6bf0138" loc="136:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0xb6bf3490" loc="125:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0xb6bf3338" loc="125:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0xb6bf0a00" loc="140:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0xb6bf4010" loc="119:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0xb6bf5e38" loc="119:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb6bf7010" loc="103:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6bf8e78" loc="103:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0xb6bf55e0" loc="116:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0xb6bf5488" loc="116:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0xb6bf4e88" loc="123:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0xb6bf2308" loc="129:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0xb6bf2c78" loc="132:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0xb6bf0590" loc="138:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0xb6bf4448" loc="120:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0xb6bf85d0" loc="89:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xb6bf75d8" loc="109:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6bf7480" loc="109:/home/wsn/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb6bc22f0" loc="95:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb6bc27d8" loc="105:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/wsn/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0xb6b8d560" loc="81:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb6b8ca70" loc="87:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xb6b90ca8" loc="79:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb6b8b4c8" loc="91:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb6b8b058" loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb6b8ced8" loc="88:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xb6b8c088" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6b8def8" loc="83:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb6b8ba90" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb6b8b938" loc="92:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xb6b8d138" loc="80:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0xb6b8c600" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6b8c4a8" loc="84:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xb6b8dad8" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb6b8d980" loc="82:/home/wsn/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0xb6a228d0" loc="31:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6a22540" loc="31:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0xb6a22770" loc="31:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0xb6a25630" loc="15:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0xb6a25f00" loc="23:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6a25b88" loc="23:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0xb6a25da0" loc="23:/home/wsn/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0xb6a04890" loc="54:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0xb6a04458" loc="49:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0xb6a07010" loc="56:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0xb6a07c70" loc="72:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0xb6a06cf0" loc="94:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6a06b98" loc="94:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0xb6a061a8" loc="79:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0xb6a07740" loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6a075e8" loc="65:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0xb6a05210" loc="100:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0xb6a06708" loc="85:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/wsn/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0xb6a0c038" loc="71:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0xb6a0c600" loc="81:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0xb6a0f9f8" loc="62:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0xb6a0f8a0" loc="62:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0xb6a0cd38" loc="91:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb6a0cbe0" loc="91:/home/wsn/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0xb6a0aec8" loc="62:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0xb6a096c8" loc="69:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6a09570" loc="69:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0xb6a09d60" loc="80:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb6a09c08" loc="80:/home/wsn/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb695a8c8" loc="48:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb695a578" loc="48:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb695a768" loc="48:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0xb6956c60" loc="79:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb6956b08" loc="79:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0xb6955480" loc="90:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb6955130" loc="90:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6955320" loc="90:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0xb69560c8" loc="65:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0xb6953370" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb6955da8" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb6953010" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb6953208" loc="99:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0xb6956650" loc="72:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb6957750" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0xb6957200" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb69573f0" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb69575e8" loc="57:/home/wsn/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb69435d8" loc="46:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb6943480" loc="46:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0xb6943e70" loc="56:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0xb6943b08" loc="56:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0xb6943d10" loc="56:/home/wsn/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0xb6934558" loc="44:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0xb6935d00" loc="42:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0xb6933b50" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb69339f8" loc="49:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0xb6933250" loc="47:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0xb6935488" loc="40:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0xb69358c8" loc="41:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0xb6934158" loc="43:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0xb6934958" loc="45:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0xb6934e60" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb6934d08" loc="46:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0xb6933620" loc="48:/home/wsn/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0xb6842a70" loc="43:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb6842a70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0xb683d0c8" loc="80:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb6842a70"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0xb683c010" loc="97:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb6842a70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0xb683de28" loc="97:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb6842a70"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0xb7515840"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0xb7515840"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0xb683c908" loc="108:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb6842a70"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb683c7b0" loc="108:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0xb683f360" loc="57:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0xb683fc58" loc="72:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xb683d770" loc="88:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb6842a70"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0xb6842f10" loc="50:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0xb683f7a0" loc="65:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/home/wsn/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/wsn/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/wsn/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0xb682a9e0" loc="49:/home/wsn/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0xb682a888" loc="49:/home/wsn/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0xb67f93e0" loc="50:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67f9088" loc="50:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0xb67f9280" loc="50:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0xb67fb8d0" loc="44:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67fb568" loc="44:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb67fb770" loc="44:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb67fa630" loc="47:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0xb6aa5dd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67fa2a8" loc="47:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0xb67fa4d0" loc="47:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0xb6aa5dd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0xb67fb168" loc="43:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67fb010" loc="43:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0xb67fac20" loc="49:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67faac8" loc="49:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0xb67fbea8" loc="46:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0xb6aa5dd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67fbd50" loc="46:/home/wsn/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="59:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0xb67e2800" loc="61:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0xb67e26a8" loc="61:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0xb67e07b0" loc="73:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0xb67e0030" loc="73:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb67e0220" loc="73:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0xb67e0438" loc="73:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0xb67e0640" loc="73:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0xb67e1010" loc="64:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0xb67e2c60" loc="64:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0xb67e2e50" loc="64:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0xb67df3e8" loc="79:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0xb67e0c08" loc="79:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0xb67e0e20" loc="79:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0xb67df068" loc="79:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0xb67df278" loc="79:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0xb67e1bc0" loc="67:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0xb67e1450" loc="67:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0xb67e1650" loc="67:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0xb67e1850" loc="67:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0xb67e1a50" loc="67:/home/wsn/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/home/wsn/tinyos-main/tos/interfaces/Intercept.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0xb67fe178" loc="31:/home/wsn/tinyos-main/tos/interfaces/Intercept.nc">
        <documentation loc="16:/home/wsn/tinyos-main/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6801ba8" loc="31:/home/wsn/tinyos-main/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb6801d88" loc="31:/home/wsn/tinyos-main/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb67fe010" loc="31:/home/wsn/tinyos-main/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="44:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0xb67e9168" loc="96:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb67e9010" loc="96:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0xb67ec888" loc="83:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="80:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0xb67ebb08" loc="95:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0xb67ede00" loc="71:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="66:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0xb67ed848" loc="64:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="55:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the ETX for the current path to the root through the current&#10; parent.</short>
          <long>&#10; Get the ETX for the current path to the root through the current&#10; parent. Sets etx argument to ETX*10.  The pointer is allocated by&#10; the caller.  If the parent is invalid, return FAIL (no info).&#10; The caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to&#10; 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0xb67ed6f0" loc="64:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0xb67ec370" loc="78:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0xb67eb098" loc="88:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="85:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb67ecd20" loc="88:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0xb67ecf28" loc="88:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0xb67e9d00" loc="98:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb67e9ba8" loc="98:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0xb67ed1c0" loc="53:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0xb67ed068" loc="53:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0xb67e9758" loc="97:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb67e9600" loc="97:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0xb67eb6a0" loc="93:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="90:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb67eb548" loc="93:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0xb67e7010" loc="7:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0xb67e75c0" loc="14:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0xb67e7468" loc="14:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/home/wsn/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0xb67eeca0" loc="49:/home/wsn/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0xb67e5070" loc="51:/home/wsn/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0xb67ee7b8" loc="48:/home/wsn/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/home/wsn/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0xb67e5408" loc="52:/home/wsn/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-11-28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0xb67f2b28" loc="64:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67f27d0" loc="64:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0xb67f29c8" loc="64:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0xb67f66b0" loc="52:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb68064a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67f6330" loc="52:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0xb67f6550" loc="52:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb68064a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0xb67f3060" loc="58:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67f5ce0" loc="58:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0xb67f5ed0" loc="58:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0xb67f3d80" loc="61:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67f3a18" loc="61:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb67f3c20" loc="61:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0xb67f7ef8" loc="49:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb68064a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67f7b58" loc="49:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0xb67f7d98" loc="49:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb68064a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0xb67f5900" loc="57:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67f57a8" loc="57:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0xb67f3618" loc="60:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67f34c0" loc="60:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb67f1888" loc="67:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67f1550" loc="67:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0xb67f1728" loc="67:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0xb67f7738" loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb68064a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67f7398" loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0xb67f75d8" loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb68064a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0xb67ef918" loc="70:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0xb67ef5a8" loc="70:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0xb67ef7b8" loc="70:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0xb67f6c30" loc="54:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67f6ad8" loc="54:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0xb67f2380" loc="63:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67f2228" loc="63:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0xb67ef170" loc="69:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0xb67f1d58" loc="69:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0xb67ef010" loc="69:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0xb67f1168" loc="66:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67f1010" loc="66:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0xb67f5370" loc="55:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb67f5030" loc="55:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0xb67f5210" loc="55:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/home/wsn/tinyos-main/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0xb67e3300" loc="46:/home/wsn/tinyos-main/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0xb6aa5dd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="46:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getReverseQuality" ref="0xb67d5088" loc="52:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb67d8f10" loc="52:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txAck" ref="0xb67d4e48" loc="68:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb67d4cf0" loc="68:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0xb67d42b8" loc="61:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb67d4160" loc="61:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0xb67d2418" loc="72:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb67d22c0" loc="72:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0xb67d5ca0" loc="58:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb67d5b48" loc="58:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0xb67d1010" loc="78:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb67d2de8" loc="78:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0xb67d29d8" loc="75:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb67d2880" loc="75:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0xb67d48a8" loc="64:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb67d4750" loc="64:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getForwardQuality" ref="0xb67d56a8" loc="55:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb67d5550" loc="55:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0xb67d8a48" loc="49:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0xb67d88f0" loc="49:/home/wsn/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
      <documentation loc="34:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0xb67aa480" loc="44:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67aa480"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0xb67aaa40" loc="51:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
        <documentation loc="45:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67aa480"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0xb67aa8e8" loc="51:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67aa480"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0xb67a74a8" loc="65:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
        <documentation loc="61:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0xb67a7058" loc="59:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
        <documentation loc="53:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67aa480"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0xb67aaed0" loc="59:/home/wsn/tinyos-main/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67aa480"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0xb67af2e0" loc="50:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67af2e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb67ac010" loc="97:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="91:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67af2e0"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0xb67ae1d8" loc="80:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="74:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0xb67af780" loc="61:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="52:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0xb67ae7e0" loc="89:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="82:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb73b8da0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67af2e0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0xb67ae688" loc="89:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb67af2e0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0xb67afc90" loc="72:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="63:/home/wsn/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="47:/home/wsn/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="35:/home/wsn/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0xb66ac7e0" loc="51:/home/wsn/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb66ac010" loc="51:/home/wsn/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb66ac498" loc="51:/home/wsn/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb66ac678" loc="51:/home/wsn/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7513b88"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009-09-21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0xb6600ad0" loc="51:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6600978" loc="51:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0xb65fdc00" loc="57:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb65fd8b0" loc="57:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0xb65fdaa0" loc="57:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0xb6600390" loc="48:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb68064a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6600010" loc="48:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0xb6600230" loc="48:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb68064a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0xb65fd318" loc="56:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7512228"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb65fd1c0" loc="56:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0xb6601998" loc="47:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb68064a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6601618" loc="47:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0xb6601838" loc="47:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb68064a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0xb65ffba8" loc="54:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb65ff840" loc="54:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb65ffa48" loc="54:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0xb65ff288" loc="53:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb72c3140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb65ff130" loc="53:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0xb6601060" loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb73d76e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb68064a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb6604cb0" loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb72b6400"/>
                <typename><typedef-ref name="message_t" ref="0xb72b51e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0xb6604ed0" loc="46:/home/wsn/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0xb68064a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
